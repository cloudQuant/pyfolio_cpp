# PyFolio C++ Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pyfolio-app-hpa
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pyfolio-app
  
  minReplicas: 3
  maxReplicas: 20
  
  metrics:
    # CPU utilization
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    
    # Memory utilization
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    
    # Custom metrics - API request rate
    - type: Pods
      pods:
        metric:
          name: api_requests_per_second
        target:
          type: AverageValue
          averageValue: "100"
    
    # Custom metrics - Response time
    - type: Pods
      pods:
        metric:
          name: api_response_time_p95
        target:
          type: AverageValue
          averageValue: "500m"  # 500ms
  
  # Scaling behavior
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Min
    
    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 5
          periodSeconds: 60
      selectPolicy: Max

---
# Vertical Pod Autoscaler (VPA)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: pyfolio-app-vpa
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: autoscaling
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pyfolio-app
  
  updatePolicy:
    updateMode: "Auto"  # Options: Off, Initial, Auto
  
  resourcePolicy:
    containerPolicies:
      - containerName: pyfolio-app
        minAllowed:
          cpu: 100m
          memory: 512Mi
        maxAllowed:
          cpu: 4
          memory: 8Gi
        controlledResources:
          - cpu
          - memory
        controlledValues: RequestsAndLimits

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pyfolio-app-pdb
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: availability
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: pyfolio
      app.kubernetes.io/component: app

---
# Custom Metrics Configuration for HPA
apiVersion: v1
kind: ConfigMap
metadata:
  name: pyfolio-metrics-config
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: metrics
data:
  custom-metrics.yaml: |
    rules:
      # API request rate metric
      - seriesQuery: 'http_requests_per_second{namespace!="",pod!=""}'
        resources:
          overrides:
            namespace: {resource: "namespace"}
            pod: {resource: "pod"}
        name:
          matches: "^http_requests_per_second"
          as: "api_requests_per_second"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'
      
      # API response time metric
      - seriesQuery: 'http_request_duration_seconds{namespace!="",pod!=""}'
        resources:
          overrides:
            namespace: {resource: "namespace"}
            pod: {resource: "pod"}
        name:
          matches: "^http_request_duration_seconds"
          as: "api_response_time_p95"
        metricsQuery: 'histogram_quantile(0.95, sum(rate(<<.Series>>_bucket{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>, le))'
      
      # Queue depth metric
      - seriesQuery: 'task_queue_depth{namespace!="",pod!=""}'
        resources:
          overrides:
            namespace: {resource: "namespace"}
            pod: {resource: "pod"}
        name:
          matches: "^task_queue_depth"
          as: "task_queue_depth"
        metricsQuery: 'avg(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)'
      
      # Error rate metric
      - seriesQuery: 'http_requests_total{namespace!="",pod!=""}'
        resources:
          overrides:
            namespace: {resource: "namespace"}
            pod: {resource: "pod"}
        name:
          matches: "^http_requests_total"
          as: "api_error_rate"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>,status=~"5.."}[2m])) by (<<.GroupBy>>) / sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'

---
# KEDA ScaledObject (alternative to HPA for more advanced scaling)
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: pyfolio-app-scaledobject
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    name: pyfolio-app
  
  minReplicaCount: 3
  maxReplicaCount: 50
  
  triggers:
    # Prometheus metric scaling
    - type: prometheus
      metadata:
        serverAddress: http://prometheus:9090
        metricName: api_requests_per_second
        threshold: '100'
        query: sum(rate(http_requests_total{service="pyfolio-app"}[2m]))
    
    # Redis queue scaling
    - type: redis
      metadata:
        address: pyfolio-redis:6379
        listName: task_queue
        listLength: '10'
        password: redis_password
    
    # CPU scaling
    - type: cpu
      metadata:
        type: Utilization
        value: '70'
    
    # Memory scaling
    - type: memory
      metadata:
        type: Utilization
        value: '80'
  
  # Advanced scaling configuration
  advanced:
    restoreToOriginalReplicaCount: true
    horizontalPodAutoscalerConfig:
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 300
          policies:
            - type: Percent
              value: 50
              periodSeconds: 60
        scaleUp:
          stabilizationWindowSeconds: 60
          policies:
            - type: Percent
              value: 100
              periodSeconds: 30