# PyFolio C++ Secrets
# Note: In production, use proper secret management (e.g., HashiCorp Vault, AWS Secrets Manager)
apiVersion: v1
kind: Secret
metadata:
  name: pyfolio-secrets
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # Database credentials
  POSTGRES_PASSWORD: "pyfolio_secure_production_password_change_me"
  POSTGRES_USER: "pyfolio"
  POSTGRES_DB: "pyfolio"
  
  # Redis credentials
  REDIS_PASSWORD: "redis_secure_production_password_change_me"
  
  # API keys and tokens
  JWT_SECRET_KEY: "jwt_super_secret_key_change_me_in_production"
  API_SECRET_KEY: "api_secret_key_change_me_in_production"
  ENCRYPTION_KEY: "encryption_key_32_bytes_change_me_prod"
  
  # External service credentials
  ALPHA_VANTAGE_API_KEY: "your_alpha_vantage_api_key_here"
  IEX_CLOUD_API_KEY: "your_iex_cloud_api_key_here"
  QUANDL_API_KEY: "your_quandl_api_key_here"
  
  # Monitoring credentials
  GRAFANA_ADMIN_PASSWORD: "grafana_admin_secure_password_change_me"

---
# TLS Certificate Secret (for HTTPS)
apiVersion: v1
kind: Secret
metadata:
  name: pyfolio-tls
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # Replace with your actual TLS certificate
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCi4uLgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCi4uLgotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0t

---
# Service Account Token Secret
apiVersion: v1
kind: Secret
metadata:
  name: pyfolio-service-account-token
  namespace: pyfolio
  labels:
    app.kubernetes.io/name: pyfolio
    app.kubernetes.io/component: service-account
  annotations:
    kubernetes.io/service-account.name: pyfolio-service-account
type: kubernetes.io/service-account-token