<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygenindex xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="index.xsd" version="1.13.2" xml:lang="en-US">
  <compound refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics" kind="struct"><name>pyfolio::analytics::AdvancedTurnoverMetrics</name>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1aa98570da30deaaca3633f2b6e874eb2f" kind="variable"><name>basic_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a1030806c185b6c56dc4bb6409a419a7d" kind="variable"><name>symbol_turnover_contribution</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1acfe0f6ac2a7e3c293c222a53bd07f8cd" kind="variable"><name>symbol_avg_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a6d77f467e9b44f3440726566f0f7ade8" kind="variable"><name>buy_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a4154f7b45c9e59e9fa990337c5bff2bf" kind="variable"><name>sell_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a4f6df610ff8040f8241ee59f3deace52" kind="variable"><name>rebalancing_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1acc3212514af981b9a419b52feed1c28c" kind="variable"><name>cash_flow_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a1c73747e830c64635ab90f7f4989e525" kind="variable"><name>rolling_30d_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a986eadba1d203d7b5d2d0af0a63ec877" kind="variable"><name>rolling_90d_turnover</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1abdc61c83c7fd59c0090fd6b2378e22f2" kind="variable"><name>turnover_return_correlation</name></member>
    <member refid="d2/d63/structpyfolio_1_1analytics_1_1AdvancedTurnoverMetrics_1a789ec7c8ab848f458a376e4f332c958b" kind="variable"><name>turnover_volatility_correlation</name></member>
  </compound>
  <compound refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer" kind="class"><name>pyfolio::positions::AllocationAnalyzer</name>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a8418cff4cf7f7e18d7da165a28193325" kind="variable"><name>symbol_to_sector_</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1ae34f8746f7296e07b90eb429d51d4e95" kind="variable"><name>symbol_to_industry_</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a440ff1df7b87e152db0d83c80386e16c" kind="variable"><name>symbol_to_country_</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a24d506b4919354ae06016c026030afca" kind="function"><name>set_sector_mapping</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1af79451db1fb1ae8ad17ca246d6d6ea29" kind="function"><name>set_industry_mapping</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a44f53acaa22284992713a45e71b20331" kind="function"><name>set_country_mapping</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1af712568121f03d778a806ab3de01afa8" kind="function"><name>calculate_sector_allocations</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a530162fa9e593cbe432222f1d2d21d79" kind="function"><name>calculate_concentration</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a914e6a4ba11f6346e18dad6f0150e7ed" kind="function"><name>analyze_by_group</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a958088048206a41ef14fe5dd1a34aa15" kind="function"><name>calculate_drift</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1aa40a3a7468229f09a6950c0d9e8b459f" kind="function"><name>analyze_allocation_stability</name></member>
    <member refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a01f9c811abd30933a710400d76e78d1c" kind="function"><name>calculate_gini_coefficient</name></member>
  </compound>
  <compound refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift" kind="struct"><name>pyfolio::positions::AllocationAnalyzer::AllocationDrift</name>
    <member refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift_1ae68e873dc23587ccf167a01e78d87106" kind="variable"><name>symbol</name></member>
    <member refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift_1a209ff069f9409126e6a6964e468e0c24" kind="variable"><name>current_weight</name></member>
    <member refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift_1ac272ca398905d448afd2dfd9c18519df" kind="variable"><name>target_weight</name></member>
    <member refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift_1a42244e5214823ad839565343ed041a52" kind="variable"><name>drift</name></member>
    <member refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift_1a0bff4c1d46fb69e051ba8f72ac692464" kind="variable"><name>rebalance_shares</name></member>
    <member refid="d1/db1/structpyfolio_1_1positions_1_1AllocationAnalyzer_1_1AllocationDrift_1aad9ff1cf4bd4d298394599e04ced0a82" kind="variable"><name>rebalance_value</name></member>
  </compound>
  <compound refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis" kind="class"><name>pyfolio::attribution::AlphaBetaAnalysis</name>
    <member refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" kind="function"><name>calculate</name></member>
    <member refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1a84a2e38da92d0bb2830d5c347c09ddab" kind="function"><name>linear_regression</name></member>
  </compound>
  <compound refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult" kind="struct"><name>pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult</name>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a5a9d35e58d436aedbadd418650cd1444" kind="variable"><name>alpha</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a8ac9e2b0cb92b5b59f234c4f4271ae1a" kind="variable"><name>beta</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a31c462a120c3bdc2e43751b28226d800" kind="variable"><name>r_squared</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1abdc71904641a095d8c7acbfcd8060c5a" kind="variable"><name>tracking_error</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1af4dd7d95f36605e3733e29fed79d657f" kind="variable"><name>information_ratio</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1ad37262010c03f54c2a8fb0444de158a1" kind="variable"><name>active_return</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a68f6ed1ac77d0c54b824d89c6d598d52" kind="variable"><name>systematic_risk</name></member>
    <member refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a2cf02a111b19b5e14f172656a2f89fda" kind="variable"><name>specific_risk</name></member>
  </compound>
  <compound refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult" kind="struct"><name>pyfolio::Statistics::AlphaBetaResult</name>
    <member refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult_1affa8e3224678440ce746bea2f66f77c7" kind="variable"><name>alpha</name></member>
    <member refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult_1a7c4c51c7d7c06db16acc1c710c5623e9" kind="variable"><name>beta</name></member>
    <member refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult_1a17ffbdd8e38c628a2bfbbd766223d094" kind="variable"><name>r_squared</name></member>
  </compound>
  <compound refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" kind="struct"><name>pyfolio::analytics::AnalysisConfig</name>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a3f41c3fd36eaed927e6182e041d658a5" kind="variable"><name>cache_config</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1ac0ad7d8dbdc4d399145de3c57a44f7ee" kind="variable"><name>risk_free_rate</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a75cbc2db9abac72761a7ae676afe855e" kind="variable"><name>periods_per_year</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a57c7dda70e3e7dd8ca95f3dc1ec4a0c3" kind="variable"><name>rolling_windows</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a30ee301978adde5efb8fdde91fbe5b2f" kind="variable"><name>min_sharpe_threshold</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a88d82ed9de1ee41e1a1f0af877ae818b" kind="variable"><name>max_drawdown_threshold</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a7cb46d7a29ec27a173bb609514623c62" kind="variable"><name>min_return_threshold</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a237eaa0d58b07efb1b729c28c7b0566d" kind="variable"><name>enable_detailed_reports</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a8d02c3f064f27a0b4f3f72908f45f3ba" kind="variable"><name>enable_benchmarking</name></member>
    <member refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a5f4763ef349077b7ff3536ec8a51abf4" kind="variable"><name>report_interval</name></member>
  </compound>
  <compound refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" kind="struct"><name>pyfolio::analytics::AnalysisReport</name>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a015c2dffe6e3ed1db704f3115ca1fcd3" kind="variable"><name>total_return</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kind="variable"><name>annual_return</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ace446e8c5677012b2678dca187af9063" kind="variable"><name>annual_volatility</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2a5d413c1c804eb72b4be7d22c520cbd" kind="variable"><name>sharpe_ratio</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4a5a77ef63033f3419685398489e8b5a" kind="variable"><name>sortino_ratio</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kind="variable"><name>max_drawdown</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1793e83fd50dd8746042ea5ba00d5080" kind="variable"><name>calmar_ratio</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ad81e96558450ef6a4f533552adda9481" kind="variable"><name>var_95</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a8e67852f42560dd08bca84fb6dbf5c64" kind="variable"><name>cvar_95</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a60b8f792068fea150e521f59ae5c2ef4" kind="variable"><name>downside_deviation</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1b30866872455b4c679ec6a363766a60" kind="variable"><name>skewness</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af034819dd16f0dfa7f6f893a489ae4b6" kind="variable"><name>kurtosis</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1acc280d04bb38e569904ef187d96e0012" kind="variable"><name>rolling_returns</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af76c3eff77cf268a4eb5ff59a37fdf2b" kind="variable"><name>rolling_volatility</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7936990f2fd386f8eb250954b41728fb" kind="variable"><name>rolling_sharpe</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a589288c7e12f07f9f3867fa281cd9c20" kind="variable"><name>alpha</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2fa5e7ed544be1661d558ad1edcd4da5" kind="variable"><name>beta</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a51e8da4f046598e3a1782461458592fb" kind="variable"><name>information_ratio</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac408b3c65b0e589794b742200d5532cb" kind="variable"><name>tracking_error</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2048a961d567d59bb0bb091f88036aa1" kind="variable"><name>cache_stats</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1aea6e909bb3b3a4eec443c64b9df0efe3" kind="variable"><name>computation_time</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a38e681a3c837376a89f3a7ffa37760f6" kind="variable"><name>analysis_timestamp</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7c0bb233dc9c257f716d991895fe8b1c" kind="variable"><name>passed_risk_checks</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kind="variable"><name>warnings</name></member>
    <member refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kind="variable"><name>recommendations</name></member>
  </compound>
  <compound refid="da/d05/structpyfolio_1_1web_1_1ApiConfig" kind="struct"><name>pyfolio::web::ApiConfig</name>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1a57dd2d75180abc07c44269e192711604" kind="variable"><name>host</name></member>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1a5bce923cf6ead8c8a57690cd40e2fd7e" kind="variable"><name>port</name></member>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1a1ebeecff1f0573029b243ccc72048e7f" kind="variable"><name>base_path</name></member>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1a01231217ade9fbcdb334fda0e7ac439e" kind="variable"><name>thread_pool_size</name></member>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1a811208cddd867ce81a397d1cc65c0bad" kind="variable"><name>enable_cors</name></member>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1ae1786d61196580eb3b4e13357830672f" kind="variable"><name>enable_logging</name></member>
    <member refid="da/d05/structpyfolio_1_1web_1_1ApiConfig_1a478e1619712d74a5736aacaa420333f2" kind="variable"><name>request_timeout</name></member>
  </compound>
  <compound refid="d7/d21/classpyfolio_1_1attribution_1_1AttributionAnalyzer" kind="class"><name>pyfolio::attribution::AttributionAnalyzer</name>
    <member refid="d7/d21/classpyfolio_1_1attribution_1_1AttributionAnalyzer_1aba8060cedc814707e65a74e7f2e0a9f9" kind="function"><name>analyze_factor_attribution</name></member>
    <member refid="d7/d21/classpyfolio_1_1attribution_1_1AttributionAnalyzer_1a459039ea2bd76a724a7904e72f9cd8be" kind="function"><name>analyze_sector_attribution</name></member>
  </compound>
  <compound refid="d0/dda/structpyfolio_1_1attribution_1_1BrinsonAttribution_1_1AttributionEffects" kind="struct"><name>pyfolio::attribution::BrinsonAttribution::AttributionEffects</name>
    <member refid="d0/dda/structpyfolio_1_1attribution_1_1BrinsonAttribution_1_1AttributionEffects_1aeb77ebb6a7adb723fa87347d50197081" kind="variable"><name>allocation_effect</name></member>
    <member refid="d0/dda/structpyfolio_1_1attribution_1_1BrinsonAttribution_1_1AttributionEffects_1aaa265c6437fee7b515b818b43068bf9d" kind="variable"><name>selection_effect</name></member>
    <member refid="d0/dda/structpyfolio_1_1attribution_1_1BrinsonAttribution_1_1AttributionEffects_1ac1f3365ad450cd97b31095cceb82984f" kind="variable"><name>interaction_effect</name></member>
  </compound>
  <compound refid="d6/d42/structpyfolio_1_1analytics_1_1AttributionResult" kind="struct"><name>pyfolio::analytics::AttributionResult</name>
    <member refid="d6/d42/structpyfolio_1_1analytics_1_1AttributionResult_1a406ebd9dbb3508ef5dcd94a7e7ada984" kind="variable"><name>allocation_effect</name></member>
    <member refid="d6/d42/structpyfolio_1_1analytics_1_1AttributionResult_1a61d1adf53566894e12a069c32c93d41d" kind="variable"><name>selection_effect</name></member>
    <member refid="d6/d42/structpyfolio_1_1analytics_1_1AttributionResult_1a981bd2841ae39e6b43d2797da8652af6" kind="variable"><name>interaction_effect</name></member>
    <member refid="d6/d42/structpyfolio_1_1analytics_1_1AttributionResult_1ae1e8f679ad18fcff6f70eb3890b04bc0" kind="variable"><name>total_active_return</name></member>
  </compound>
  <compound refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult" kind="struct"><name>pyfolio::attribution::AttributionResult</name>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1aab5fd5c0736d928da99190164819ab0c" kind="variable"><name>portfolio_return</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1a1ae7255be75ff89603de22b45d62d728" kind="variable"><name>benchmark_return</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1a8a876336ad33b20d561049f0d75c1798" kind="variable"><name>active_return</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1aede4fa31c8104b810a8efd48d75b1331" kind="variable"><name>allocation_effect</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1ab4d8a1362c2d2c45f010030060acaf5e" kind="variable"><name>selection_effect</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1ae646f8eb8d781fddde17809609002db9" kind="variable"><name>interaction_effect</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1a95b4e89ead28c7e2c9e95280aa57bc6c" kind="variable"><name>total_effect</name></member>
    <member refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult_1a74891c5d878ec0c20c2852c95d5f2463" kind="function"><name>is_consistent</name></member>
  </compound>
  <compound refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer" kind="class"><name>pyfolio::analytics::BayesianAnalyzer</name>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a2546cc389de50dc103d21ebd2989b72b" kind="variable"><name>rng_</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a7a528be29922586a30d19bbca358dd0a" kind="variable"><name>num_samples_</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1add92012997083edb88b59643f874cdcf" kind="variable"><name>burn_in_</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1aaa9423345a6434ab0ebb29b745fb9a5c" kind="function"><name>BayesianAnalyzer</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a3f0a989d9b257534f1ee77f454f66823" kind="function"><name>BayesianAnalyzer</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a0b79ac7ee0ea18fbb4280bdd518040f4" kind="function"><name>analyze_performance</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a20ed44cf22769cfb68ec394a8f95d47d" kind="function"><name>detect_regimes</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a7eceaad081c1c0baebefd3ffa8762459" kind="function"><name>forecast_returns</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a23872e94eff2db6230bdd21ab0793a12" kind="function"><name>bayesian_var</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a91cbececf4dc0f0634336bd46545758a" kind="function"><name>mcmc_alpha_beta_sampling</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a6a5a106c963ddf18df4c465d9fc27dc7" kind="function"><name>estimate_hmm_parameters</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a174c89c50ffdccfbcdf3d59ece401b15" kind="function"><name>bayesian_ar_forecast</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a49fe0f34beb135c564e05b0b3060ec20" kind="function"><name>calculate_summary_statistics</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a222f14048afd77d7036d9add5f5f2dd4" kind="function"><name>estimate_ar_coefficient</name></member>
    <member refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1ab9832bfda5e22448ec2b7db9fc8c5a18" kind="function"><name>estimate_residual_volatility</name></member>
  </compound>
  <compound refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult" kind="struct"><name>pyfolio::analytics::BayesianForecastResult</name>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1a4322d955b4fc4637632b7adafd52842a" kind="variable"><name>return_forecasts</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1a6cb0f7c032bb9b3e76f14d9cafe644e6" kind="variable"><name>forecast_lower_95</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1ae239293d24a4bc0e28280b1b8f5af38c" kind="variable"><name>forecast_upper_95</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1acd17dfe20da84b5851be996eef5fbed3" kind="variable"><name>forecast_volatility</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1a3697364717be63ed3b22f732e8b504b4" kind="variable"><name>forecast_dates</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1ae9a509f0b06543adba5cbeba3f01febd" kind="variable"><name>model_confidence</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1ade56f0c9eea9b3c9e42c5c82f958f3d1" kind="function"><name>get_forecast</name></member>
    <member refid="d3/db4/structpyfolio_1_1analytics_1_1BayesianForecastResult_1a762779dd0f28e9be1925855d9a6b5bd6" kind="function"><name>prediction_interval_width</name></member>
  </compound>
  <compound refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult" kind="struct"><name>pyfolio::analytics::BayesianPerformanceResult</name>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a6d2a1b01e691d748325800171dc04ca4" kind="variable"><name>alpha_samples</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a2f3c2875b4014030847e47ec777a4eba" kind="variable"><name>beta_samples</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a0ef07e65c4a890e81168d48a337c323e" kind="variable"><name>sharpe_samples</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ad89afadf6dae3ceb2aa5a7496b4f06b0" kind="variable"><name>volatility_samples</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1aa5bf47943be52d3bdb5e83bb042ad134" kind="variable"><name>alpha_mean</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a153e642e7990696963902a9b6b3995d8" kind="variable"><name>alpha_std</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a70967b4a7aa0f41f3dc6f19400075687" kind="variable"><name>alpha_credible_lower</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a81de8754c613fca918c8611176fedc74" kind="variable"><name>alpha_credible_upper</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a572a1e7f9d2444a8f5915f8f2ce2bbf0" kind="variable"><name>beta_mean</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a62db5b835ed4127acf8eb3f5f3cf4928" kind="variable"><name>beta_std</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a72293ffec4415df7413d4b4ecadec3ab" kind="variable"><name>beta_credible_lower</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1af81a24d1f8603751f169c725dcc460ff" kind="variable"><name>beta_credible_upper</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a3302667904a06fb33cc6dcda76deb539" kind="variable"><name>sharpe_mean</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ab572cb490d1212d5355d7881c58f5234" kind="variable"><name>sharpe_std</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ad93699eb34266cc1ae7c1d84315441cd" kind="variable"><name>sharpe_credible_lower</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a2dc40b802ca4dd88f3f1d02b90e589f6" kind="variable"><name>sharpe_credible_upper</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a63a24620616cba12777b4f8e652178ab" kind="variable"><name>prob_alpha_positive</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a5a64e31e57d4bcb4c7625424886d69f3" kind="variable"><name>prob_outperformance</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ad5b3df4b29e94efa13b5501d2f9d2fda" kind="variable"><name>prob_beta_greater_one</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1a8361921db645de294cdd18002113bf67" kind="variable"><name>marginal_likelihood</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ae03c0526fc8ce2b5dc618e337351a689" kind="variable"><name>dic</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ab952aeb4c74ee69a6f75e45721ced62b" kind="function"><name>alpha_percentile</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1ac314b93564cfe548ef6b6c9502a8f25b" kind="function"><name>sharpe_percentile</name></member>
    <member refid="de/d6d/structpyfolio_1_1analytics_1_1BayesianPerformanceResult_1abad5a8a5e88da168b94e5ae50a160541" kind="function"><name>is_alpha_significant</name></member>
  </compound>
  <compound refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult" kind="struct"><name>pyfolio::analytics::BayesianRegimeResult</name>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1a9746b9cbaeb4205dd034bcf6750ea68a" kind="variable"><name>regime_sequence</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1a14149cf83190f1266a33aa5a2576252c" kind="variable"><name>regime_probabilities</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1acf22327d3828db461c8a2e795cd8a4ac" kind="variable"><name>transition_probabilities</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1aa0d076850e452f5d91d14984efdb63d4" kind="variable"><name>regime_means</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1a6a23dc8b3c15c3b0b237500556f80155" kind="variable"><name>regime_volatilities</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1a2e0d3fc8867b921ffd13a111557f0e87" kind="variable"><name>num_regimes</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1aab1d32cbd8600db1065c4030eae4316d" kind="function"><name>current_regime_probability</name></member>
    <member refid="d4/d98/structpyfolio_1_1analytics_1_1BayesianRegimeResult_1adb0c1edf065a699e4a5270eecb94b587" kind="function"><name>regime_persistence</name></member>
  </compound>
  <compound refid="dd/dc5/structpyfolio_1_1memory_1_1FixedBlockAllocator_1_1Block" kind="struct"><name>pyfolio::memory::FixedBlockAllocator::Block</name>
    <member refid="dd/dc5/structpyfolio_1_1memory_1_1FixedBlockAllocator_1_1Block_1a401cf0198900a2e7579c59e513034b59" kind="variable"><name>data</name></member>
    <member refid="dd/dc5/structpyfolio_1_1memory_1_1FixedBlockAllocator_1_1Block_1ae0847443807bb2f9b6601a43c73d316d" kind="variable"><name>next</name></member>
  </compound>
  <compound refid="d9/d3f/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Block" kind="struct"><name>pyfolio::memory::VariablePoolAllocator::Block</name>
    <member refid="d9/d3f/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Block_1a65e2be23a5c7061583d94e2bfb8bc0a3" kind="variable"><name>size</name></member>
    <member refid="d9/d3f/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Block_1afd8b026607d51176083b13b9d8ddaa66" kind="variable"><name>next</name></member>
    <member refid="d9/d3f/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Block_1acfd13401926210d9bc28a8b3b62ef166" kind="function"><name>data</name></member>
    <member refid="d9/d3f/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Block_1aed8a748af613e8c313da23536ba3c19a" kind="function"><name>data</name></member>
  </compound>
  <compound refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution" kind="class"><name>pyfolio::attribution::BrinsonAttribution</name>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a0456843543ff4e9f71a9297a6e58b217" kind="variable"><name>symbol_to_sector_</name></member>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1aa75ec97408cf2164bde3fdbb846d7f1f" kind="function"><name>set_sector_mapping</name></member>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" kind="function"><name>calculate_period_attribution</name></member>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1abe02229d1775f669153e6a1ab1d5f86b" kind="function"><name>calculate_sector_attribution</name></member>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" kind="function"><name>calculate_multi_period_attribution</name></member>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ab5332976a407048ae55edc6889681347" kind="function"><name>get_symbol_sector</name></member>
    <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a92e565515ba88f2fc823fcb6057566b7" kind="function"><name>calculate_attribution_effects</name></member>
  </compound>
  <compound refid="dc/ddd/classpyfolio_1_1BusinessCalendar" kind="class"><name>pyfolio::BusinessCalendar</name>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a9d56e681101beceefbd2e8a2d5e4a09e" kind="variable"><name>holidays_</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1adcc204f77d7524069f990228bb4a8fb2" kind="variable"><name>name_</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1ad2a498a5b8727d5b243b28831ea75a85" kind="function"><name>BusinessCalendar</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" kind="function"><name>is_business_day</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1aabfb6559b0ab5f76e5bc54bc48bf8280" kind="function"><name>next_business_day</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a3f2c671788b7ecc51164df1d2cba5ac6" kind="function"><name>previous_business_day</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a606d7f0aa04e6d5099608f52c82606b8" kind="function"><name>business_days_between</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a4eb09daeb43ef70ced656afa1b1e8119" kind="function"><name>add_holiday</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a80958bdfc47f0547a79e24c969e67d45" kind="function"><name>remove_holiday</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a37e4f2d036eefb42604b66da39530949" kind="function"><name>is_holiday</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a5711cab9566628674bb976d7d4d71cdf" kind="function"><name>is_holiday</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1aefc7d92eb158b3c500a314814700ca5a" kind="function"><name>is_business_day</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a0177da4553069a3a716fa7376309debf" kind="function"><name>add_holiday</name></member>
    <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a38ab51ec18c93e0ecd469ad39f12b248" kind="function"><name>initialize_default_holidays</name></member>
  </compound>
  <compound refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig" kind="struct"><name>pyfolio::analytics::CacheConfig</name>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1a4faddce55c4ee6327c84fdb52a19d8f8" kind="variable"><name>max_entries</name></member>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1a42427f31d0f98fb8993474473aef9c00" kind="variable"><name>max_age</name></member>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1abfdfe7dfb7e5ae3ec51ac0be07dcf210" kind="variable"><name>cleanup_interval</name></member>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1ae78739b2f1aa8891b3b6b24d05e74fe3" kind="variable"><name>enable_auto_cleanup</name></member>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1a37ff066946135fa797f6133d3c03431d" kind="variable"><name>hit_rate_threshold</name></member>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1ab84e8f6b93c6e69e8affbb6f7ef9a0b5" kind="variable"><name>min_computation_time_basic</name></member>
    <member refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig_1a37def540d675651851498609a4822802" kind="variable"><name>min_computation_time_complex</name></member>
  </compound>
  <compound refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator" kind="class"><name>pyfolio::analytics::CachedPerformanceCalculator</name>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1aaf47e9c401b392c5cdd18995b2a7ce81" kind="variable"><name>scalar_cache_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a6c84cfa89dadc23bc3253b2a8306d6d9" kind="variable"><name>metrics_cache_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1aa092404492d97287434736af53ae61eb" kind="variable"><name>series_cache_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a3adc233d1a67104aa332d69947519c15" kind="variable"><name>cache_mutex_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a13019435f2371b556b7b604872ab73d7" kind="variable"><name>config_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a51e4603ef348fad4ed5a7c6b1cec0500" kind="variable"><name>cache_hits_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a88989780e0a9286e955b9529564e036d" kind="variable"><name>cache_misses_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1affd4a6d6776afeb1bd6e1e5b687fdd07" kind="variable"><name>last_cleanup_</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a8f88547f46993bfdf7276372ce12fcdb" kind="function"><name>calculate_hash</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ab5e86852018bf03b5d0f6c0d1d4fbfcb" kind="function"><name>make_cache_key</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ab94ce9bc51cf62b9d85cb889e9df6b0e" kind="function"><name>check_and_cleanup_cache</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a24665a43d2ad0306b9186da7012b9c98" kind="function"><name>try_get_cached</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a6d746a5181797f6d87f462ac22d28191" kind="function"><name>store_in_cache</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a1548931980f6fa0913d68d8eabc9ee26" kind="function"><name>CachedPerformanceCalculator</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a01e913b9511bc9d0574335cd413e6e10" kind="function"><name>get_cache_stats</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1af10f63228f6a2a851924d47b1e159470" kind="function"><name>clear_cache</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1acf3e4d5df2fb887a5b0a2db11196e475" kind="function"><name>update_config</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a8bc981bc9cbd284d47b40f4ce72c14a5" kind="function"><name>mean</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae2b363deb9d87338d104b96de4ae3a7f" kind="function"><name>std_deviation</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae8d11622fcee575f2c19849d443dbb94" kind="function"><name>correlation</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a86abd7db22a354c6ef057158864d41bf" kind="function"><name>rolling_mean</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a42bf7ecca30cbf723515dc06df7ba678" kind="function"><name>rolling_std</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a0e3a4ce0474850feced4c15ca589cb97" kind="function"><name>calculate_performance_metrics</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a78e06e24b176ddec6dc0640e175bdd1f" kind="function"><name>sharpe_ratio</name></member>
    <member refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae12cd4f5a2e889c8d7ff4ac4ab513f5e" kind="function"><name>max_drawdown</name></member>
  </compound>
  <compound refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry" kind="struct"><name>pyfolio::analytics::CacheEntry</name>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1a723803947e5e3923a5f8992bc2dc091f" kind="variable"><name>value</name></member>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1a1c3e85e7d42af43906d975b76b8f469f" kind="variable"><name>timestamp</name></member>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1a6816238a9c7af74d1394fdeaf1242cbe" kind="variable"><name>data_hash</name></member>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1a2238428097caad990acb3d72cb5045b2" kind="variable"><name>data_size</name></member>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1ae9d9e2767164eff8eeb8f66985b1bf8d" kind="function"><name>CacheEntry</name></member>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1a7ccd8d72c5d69c4560922e02f4a76f96" kind="function"><name>CacheEntry</name></member>
    <member refid="da/dd9/structpyfolio_1_1analytics_1_1CacheEntry_1aa5f1861137121a3e82b5a10816b7e14f" kind="function"><name>is_valid</name></member>
  </compound>
  <compound refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats" kind="struct"><name>pyfolio::analytics::CachedPerformanceCalculator::CacheStats</name>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1a20da6a10e4620f8d88f0cc6ecdf5b95d" kind="variable"><name>total_hits</name></member>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1a45e28a43350b8c2c70ab2b6a0d4dda0d" kind="variable"><name>total_misses</name></member>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1ad74e6fc22b1ba0f234b8a6c1faca76f1" kind="variable"><name>hit_rate</name></member>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1a22d54df54efba0d90cfe00b32562905f" kind="variable"><name>scalar_cache_size</name></member>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1a7635bcf75f835c83eea402e5d12d146d" kind="variable"><name>metrics_cache_size</name></member>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1a18492e429c314ca9a7f37686123edef3" kind="variable"><name>series_cache_size</name></member>
    <member refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats_1aa66a6779a02ae1848c91d899c38f2bb0" kind="variable"><name>total_cache_size</name></member>
  </compound>
  <compound refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer" kind="class"><name>pyfolio::capacity::CapacityAnalyzer</name>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a67a1cd462fa7c92507ce3f725c7af916" kind="variable"><name>constraints_</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a1c2565b19c6e5340e27b3579684b8810" kind="variable"><name>market_data_</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1af3a8ddeb3205318d3f2dd680744b2535" kind="variable"><name>impact_model_</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a65533c7e82c1834b4dca14495689ccd3" kind="function"><name>CapacityAnalyzer</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a32ea7df8cd129b97da3e5c0353a16a66" kind="function"><name>CapacityAnalyzer</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1adef17e1c3d7e502c966f1c94ae485807" kind="function"><name>set_market_data</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a694cef8e19c011f3d8df240f87122128" kind="function"><name>set_constraints</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a520ddf5e6d98e79e3db51abca6520e6f" kind="function"><name>analyze_security_capacity</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" kind="function"><name>analyze_portfolio_capacity</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1af897e871af916ea97b6e63d64d016be8" kind="function"><name>calculate_capacity_decay</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a52e0e4938b3ac0b5f51fbce2ca91fe6b" kind="function"><name>simulate_trading_impact</name></member>
    <member refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a77819b69d0317b6fe5e7b1262afaaca0" kind="function"><name>optimize_position_size</name></member>
  </compound>
  <compound refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints" kind="struct"><name>pyfolio::capacity::CapacityConstraints</name>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1ac4d1061077109d0c93f3cec8e023476c" kind="variable"><name>max_adv_participation</name></member>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1ab22eee1117a38f97432c8b06598a8a8c" kind="variable"><name>max_single_day_volume</name></member>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1a52206f2f8dc68b9e86e2bc1195dca461" kind="variable"><name>max_market_cap_percent</name></member>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1a23d25b4bb62bed83df767184da9fbf81" kind="variable"><name>max_spread_cost_bps</name></member>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1a0d439859ed3d5e065222a9558f3a98ae" kind="variable"><name>max_impact_bps</name></member>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1a6423ee52a316af41d4da5f27bca7a177" kind="variable"><name>max_trading_days</name></member>
    <member refid="d8/de4/structpyfolio_1_1capacity_1_1CapacityConstraints_1aba354d2793b7956393ceef1cc8507961" kind="function"><name>is_violated</name></member>
  </compound>
  <compound refid="d9/d17/structpyfolio_1_1PerformanceMetrics_1_1CaptureRatioResult" kind="struct"><name>pyfolio::PerformanceMetrics::CaptureRatioResult</name>
    <member refid="d9/d17/structpyfolio_1_1PerformanceMetrics_1_1CaptureRatioResult_1a1ab7bc92a3c7d720df2b4b0964e8bdb0" kind="variable"><name>up_capture</name></member>
    <member refid="d9/d17/structpyfolio_1_1PerformanceMetrics_1_1CaptureRatioResult_1ac54d2dd45243b8be558a5cee6e96ddc6" kind="variable"><name>down_capture</name></member>
  </compound>
  <compound refid="de/df7/structpyfolio_1_1positions_1_1ConcentrationMetrics" kind="struct"><name>pyfolio::positions::ConcentrationMetrics</name>
    <member refid="de/df7/structpyfolio_1_1positions_1_1ConcentrationMetrics_1aef9092acbf2e661d5ce766585c1f0cdb" kind="variable"><name>herfindahl_index</name></member>
    <member refid="de/df7/structpyfolio_1_1positions_1_1ConcentrationMetrics_1a94e6caef55c26cd6cc91605ac149a04e" kind="variable"><name>top_5_concentration</name></member>
    <member refid="de/df7/structpyfolio_1_1positions_1_1ConcentrationMetrics_1a988c0fe83c96a4506846a910f3f1e394" kind="variable"><name>top_10_concentration</name></member>
    <member refid="de/df7/structpyfolio_1_1positions_1_1ConcentrationMetrics_1a6ae7702fb6d128f134c3af603685db6c" kind="variable"><name>gini_coefficient</name></member>
    <member refid="de/df7/structpyfolio_1_1positions_1_1ConcentrationMetrics_1a7fafb6cafd331be51b5d2dc8162e5567" kind="variable"><name>effective_positions</name></member>
  </compound>
  <compound refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis" kind="struct"><name>pyfolio::analytics::statistics::CorrelationAnalysis</name>
    <member refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis_1ad8713c48872972ae637ae4374044d3be" kind="variable"><name>pearson_correlation</name></member>
    <member refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis_1a472cb0941ef9eba1d3d98938feb69823" kind="variable"><name>spearman_correlation</name></member>
    <member refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis_1a50b136d55cd69d3cd162d29a131dc13a" kind="variable"><name>kendall_tau</name></member>
    <member refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis_1ad90ea68b826aa7580a46b1647dc5c888" kind="variable"><name>r_squared</name></member>
    <member refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis_1a2e663c65e53ee6cdea6428a428ebd491" kind="variable"><name>rolling_correlations</name></member>
    <member refid="d9/d9e/structpyfolio_1_1analytics_1_1statistics_1_1CorrelationAnalysis_1a5e26dbc8b020940929edf6b5610ea2ca" kind="variable"><name>window_size</name></member>
  </compound>
  <compound refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig" kind="struct"><name>pyfolio::io::CSVConfig</name>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a9d3a20c426c81a0d096494eac2477aa8" kind="variable"><name>delimiter</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1ae9718c63d1ccefb61b89944c24b4225c" kind="variable"><name>has_header</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a294abfe2c7bb60e6dea746a26e45a421" kind="variable"><name>quote_char</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a17b63431e60347ed6c5d80fef82487b7" kind="variable"><name>escape_char</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a24146c4b3e9e31f25519875bc3bffa20" kind="variable"><name>skip_empty_lines</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a2a16b8a35238775188a6c9058b20a875" kind="variable"><name>date_format</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a3b589fcf9e7fa520378ae7721c1e71ce" kind="variable"><name>date_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a53dcfe4e5a35c4f4df8835926a0db443" kind="variable"><name>return_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a2a5ed0ac8df53b50bd111a8738c522eb" kind="variable"><name>symbol_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1aa65eecaa395d8b4d043192fcde4d53e0" kind="variable"><name>shares_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1ada73434be7f73f95fe92cf394c8438bd" kind="variable"><name>price_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a78cccdfe54c8f8f94a4de0cf2c98d0ce" kind="variable"><name>txn_symbol_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1a67460314f372bf412c38c25fb6a9aa5c" kind="variable"><name>txn_shares_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1acb72f54ce340eee25c6d787edcca6ffe" kind="variable"><name>txn_price_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1ae2e28a3b258dd2a1f5ba0f920f3cb3f0" kind="variable"><name>txn_datetime_column</name></member>
    <member refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig_1ac8bf746b1edddf3f7d38a92214febf3e" kind="variable"><name>txn_side_column</name></member>
  </compound>
  <compound refid="d6/d82/classpyfolio_1_1io_1_1CSVParser" kind="class"><name>pyfolio::io::CSVParser</name>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a40aeabc8971eb34e075180a7b45b8946" kind="variable"><name>config_</name></member>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a33386fd6bcb4e4d9739f845875a4f93a" kind="function"><name>CSVParser</name></member>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab184acf84b7503b50b5e72adfbac2481" kind="function"><name>parse_file</name></member>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a3de47507acd4e4706a24c3794d52c541" kind="function"><name>parse_string</name></member>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab4972ef795c3917b13c5ef9e92c97f1b" kind="function"><name>get_column_index</name></member>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a9e385dadbb00b92d4e55e8f851fd82a5" kind="function"><name>split_csv_line</name></member>
    <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ac448e32a909ad9ae3be883c168034365" kind="function"><name>trim</name></member>
  </compound>
  <compound refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder" kind="class"><name>pyfolio::visualization::dashboard::DashboardBuilder</name>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1a91f05b13db984fd8ffecd01b79a42372" kind="variable"><name>pages_</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1aace44c73af2855b2dd510211ab2ab1c4" kind="variable"><name>navigation_html_</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1a2760fcefe7175afcd6bc2b6e7771c243" kind="variable"><name>global_config_</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1a618ad61b495928344a1a3bfd93f6dfe0" kind="function"><name>DashboardBuilder</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1abda9a6b214b5e07f9dc82e192db9dd96" kind="function"><name>add_page</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1a3139e3885a049538b973d0088121e539" kind="function"><name>add_performance_page</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1aa55b7981826ef1122f38a77732a2b244" kind="function"><name>add_risk_page</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1aa511752aaf88f4f012008e5c1ad8c1ab" kind="function"><name>add_holdings_page</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1ae052141c637f198986804cc2c6d39fd4" kind="function"><name>build</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1afaa2850e2d35337e7657d482d1eb07b2" kind="function"><name>save</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1a2888f10d32ebd3e602eb77d425d9010e" kind="function"><name>generate_navigation</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1a7433056c30d770d4942dbc068246bee9" kind="function"><name>generate_css</name></member>
    <member refid="d5/d2d/classpyfolio_1_1visualization_1_1dashboard_1_1DashboardBuilder_1af0ba1c01b860ad0a2ebe5686e481da6d" kind="function"><name>generate_javascript</name></member>
  </compound>
  <compound refid="da/deb/classpyfolio_1_1DataFrame" kind="class"><name>pyfolio::DataFrame</name>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" kind="typedef"><name>size_type</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a7a58a07008dbcf17c881db8b3694a720" kind="variable"><name>index_</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1aaebbae28115809f15e41103fc475f954" kind="variable"><name>columns_</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1ab65495ed7b54df2b89dbe1664cdf0658" kind="variable"><name>column_names_</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a8c3fd5516478a7b9e7172b02f2b59d6a" kind="function"><name>get_column_data</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a8f93507cc6397e146f3057cd5ce8b485" kind="function"><name>get_column_data</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a754c72a36bab572bb79e952d88e42743" kind="function"><name>validate_consistency</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a6d0c7e61275ff4d25255336657884ad7" kind="function"><name>get_period_start</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1aad9f358a400309a46a3b658b50397e62" kind="function"><name>calculate_correlation</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1" kind="function"><name>DataFrame</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1ab8d09be4f10596ee16590328569c734e" kind="function"><name>DataFrame</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a48b8382c893cf6fcd72586c76699bba0" kind="function"><name>DataFrame</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" kind="function"><name>size</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1ad90daffb1db1c57ff0fd5013e8025b13" kind="function"><name>rows</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1aaa347e5b40e8152b5a20c37fff9a8bef" kind="function"><name>cols</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a0e5773095a5fe8a9791e486ece53177e" kind="function"><name>empty</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a3d97cf3e9836dc3189227e57f8c7511e" kind="function"><name>index</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a46b322a25be8aa4b0bc49169276fde91" kind="function"><name>columns</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" kind="function"><name>add_column</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a92bdc2235a48b8715a1790c9203d08b9" kind="function"><name>remove_column</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a9036e754f3f10bcc2d26d44b14f4950f" kind="function"><name>get_column</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a81cf0052efc5c5dbe0ea46f4ac5d713b" kind="function"><name>set_column</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1ab92a52438cfcc800d23b8e8f12afda77" kind="function"><name>has_column</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a91b2265984269f4a5eb36d8cefcf82cf" kind="function"><name>at</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a49db7f0e6fefba365991ee6dc7bc77a8" kind="function"><name>set_at</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" kind="function"><name>loc</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a00a9bb8b81f58c827f311295bd906022" kind="function"><name>select</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" kind="function"><name>sort_by</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a8a99e258230d74a63fba182a5f1de4db" kind="function"><name>groupby_period</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1a0bf6f736e050db71389e883612335aa4" kind="function"><name>describe</name></member>
    <member refid="da/deb/classpyfolio_1_1DataFrame_1aab195d82ad5f7716bdffe6017cf863a3" kind="function"><name>corr</name></member>
  </compound>
  <compound refid="d5/d98/classpyfolio_1_1DateRange" kind="class"><name>pyfolio::DateRange</name>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1ab64cdbeba00e67611c9729706f9cec66" kind="variable"><name>start_</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1a6f9ad4c214476d1aa7fcf88ad018caad" kind="variable"><name>end_</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1a6f44880445e877b6a9c9a3ca56d6866e" kind="variable"><name>step_</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1a500dd27fc86be2e57fe735a9753e6c4b" kind="variable"><name>business_days_only_</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1a46d19d53dd3792aff610dfd0d433879f" kind="variable"><name>calendar_</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1a0bbab8e37cad391cddf9ff230407c203" kind="function"><name>DateRange</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1a705b1cb8a0992ca1267a65015786ac9b" kind="function"><name>to_vector</name></member>
    <member refid="d5/d98/classpyfolio_1_1DateRange_1aa1ca0c6382944da9092bd54304003c04" kind="function"><name>count</name></member>
  </compound>
  <compound refid="d6/d4f/classpyfolio_1_1DateTime" kind="class"><name>pyfolio::DateTime</name>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1accbfc8dcbad27268dffa00d43f3b8292" kind="variable"><name>time_point_</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a27270e18fd7b3fcba5fcd1ce8533c9e7" kind="variable"><name>default_calendar_</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a140b23c1840e818f12ef46082e8762ba" kind="function"><name>DateTime</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a4f902d49791077ebc15187cd0ca44282" kind="function"><name>DateTime</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1aff7a3b252e6c50d1927434f629875710" kind="function"><name>DateTime</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1aaecd3e0fe88401b0085fbc88727446cb" kind="function"><name>DateTime</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a14bed41e6c19c2dfd9c0d36a5edcd29f" kind="function"><name>to_date</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a0c77abf0a6d6acefcec468e8cf061d5c" kind="function"><name>to_string</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1af46c3e8a096b3ec850297dad97f807b5" kind="function"><name>is_business_day</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1adfa008cc517c78cf148ca50a80e81fb1" kind="function"><name>next_business_day</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1afca583e558a8f0d6cdbd1378eaebaaa7" kind="function"><name>previous_business_day</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1aae730fe2db12407f5eb2af3c11e229e9" kind="function"><name>business_days_until</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a42e5f9cb95823fcd9470be79a65fe8a6" kind="function"><name>add_days</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a8b63d24df7be661ffdb7226aaa07ff4c" kind="function"><name>add_months</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1ad71c05326b79cd5649136cdb6583a7de" kind="function"><name>add_years</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a60af93f70c88c8166eb73a6d9be807f0" kind="function"><name>is_weekday</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a428b9799ba78daaf9caed9e67842b450" kind="function"><name>day_of_week</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a09faae255bfa8251e234441d58e04497" kind="function"><name>days_since</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a43b84b1326b0fca9e1f3c8dc41f8a691" kind="function"><name>add_business_days</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a57c7e6bb70ab1da2fa61ffeb60b08590" kind="function"><name>operator==</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a70cc633c238fd3f8ef8a602bee15b069" kind="function"><name>operator&lt;=&gt;</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1aff6090d26f5c0cd5a74608242c8f3f71" kind="function"><name>time_point</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a98b74d1e113cf1ca215928c0e31ba587" kind="function"><name>year</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1ad5a7201c60d0020d7270f24d8d10325e" kind="function"><name>month</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1ab5864a43c0379f41ed3a2dfc0d9a17f9" kind="function"><name>day</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1adfc972d8ea84c03f9a6d9eb9e661b6cd" kind="function"><name>parse</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1af74c490a9d8ce99c6a18bdbe608d1111" kind="function"><name>now</name></member>
    <member refid="d6/d4f/classpyfolio_1_1DateTime_1a6b980b304349106ebab133e7c947d85b" kind="function"><name>from_time_point</name></member>
  </compound>
  <compound refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis" kind="struct"><name>pyfolio::analytics::statistics::DistributionAnalysis</name>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1af6bc7353125dc8d0387eb1e6e3a3a752" kind="variable"><name>jarque_bera_statistic</name></member>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1a63871984489bf56c33cb6ac9119beed3" kind="variable"><name>jarque_bera_p_value</name></member>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1a8eedae00048da538d2dbbb9766577d0a" kind="variable"><name>is_normal</name></member>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1aa3bd0268e4db8a8ff771c3673ee70db7" kind="variable"><name>anderson_darling_statistic</name></member>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1a623970ffc8428f625d078e72dac8dc06" kind="variable"><name>kolmogorov_smirnov_statistic</name></member>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1abb1c93e66e1cacdecf1a108f1e71cbc3" kind="variable"><name>histogram_bins</name></member>
    <member refid="d5/de0/structpyfolio_1_1analytics_1_1statistics_1_1DistributionAnalysis_1a120a6e19201d54ddd777a1ac6fc22a3f" kind="variable"><name>histogram_counts</name></member>
  </compound>
  <compound refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo" kind="struct"><name>pyfolio::performance::DrawdownInfo</name>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1a4acd89d9458206e5bda7a029df0a502b" kind="variable"><name>max_drawdown</name></member>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1abee8991659c8de98cbad0d8ee5059f7f" kind="variable"><name>start_date</name></member>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1a171131dddfae58f164b513435ddf2c26" kind="variable"><name>end_date</name></member>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1a8e8670f62f7852e69238e2e6e3e312dc" kind="variable"><name>recovery_date</name></member>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1a510999b336c0c1be5780517eb1fc96ca" kind="variable"><name>duration_days</name></member>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1a0dff274bb20dfb1c3b4b35dccf2c02bd" kind="variable"><name>recovery_days</name></member>
    <member refid="d4/d65/structpyfolio_1_1performance_1_1DrawdownInfo_1a6da3d2f51f2a7c4a9622944f341f8d7f" kind="variable"><name>recovered</name></member>
  </compound>
  <compound refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer" kind="class"><name>pyfolio::analytics::EnhancedTurnoverAnalyzer</name>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1afdd574756c49ab5f3f55f6a52e77d8b6" kind="function"><name>calculate_enhanced_turnover</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a456bf14aeddaeeff3b9d5624b6ae6210" kind="function"><name>calculate_comprehensive_turnover_metrics</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1afec255239ef5e1d2e1ef5d3cbbaee3d2" kind="function"><name>calculate_rolling_agb</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a93470345dde025d280e0a58bb98bba53" kind="function"><name>calculate_net_position_changes</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a2698ae3aadc008c809d8ed452e1a5be7" kind="function"><name>decompose_turnover</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1ae40f3f4ca2d8be9e1711162081231ddb" kind="function"><name>calculate_agb_for_date</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a6aa9b4840d55c45a65038607b1024182" kind="function"><name>rolling_mean</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a2e42b07fc918fa7b1bb2ea5a131dbe99" kind="function"><name>calculate_turnover_with_denominator</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1aa7c6e9ce5e8072f7b8e802940151c8d4" kind="function"><name>calculate_symbol_position_changes</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a19eaeef9f566b5a37991625ca750149d" kind="function"><name>aggregate_monthly_turnover</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a59eb955400bef48d30d622cfeb4b327a" kind="function"><name>calculate_correlation</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1a7c8e675bf91f5fed726bf4af7380257b" kind="function"><name>validate_turnover_inputs</name></member>
    <member refid="d8/d97/classpyfolio_1_1analytics_1_1EnhancedTurnoverAnalyzer_1aa63e837ba0a629030dc7e608d713f359" kind="function"><name>handle_turnover_edge_cases</name></member>
  </compound>
  <compound refid="d0/da5/structpyfolio_1_1Error" kind="struct"><name>pyfolio::Error</name>
    <member refid="d0/da5/structpyfolio_1_1Error_1af7f5461a5155dd458e8078aac4e0dd94" kind="variable"><name>code</name></member>
    <member refid="d0/da5/structpyfolio_1_1Error_1ac0c20d9d7c8f14406ef4e5719566ac19" kind="variable"><name>message</name></member>
    <member refid="d0/da5/structpyfolio_1_1Error_1afa48dfb559e3b67207bedfffc78c8ce6" kind="variable"><name>context</name></member>
    <member refid="d0/da5/structpyfolio_1_1Error_1a02c99bee036974256bf64873e7063a87" kind="variable"><name>location</name></member>
    <member refid="d0/da5/structpyfolio_1_1Error_1acb8bf4bca58572a5f01af5009d97137d" kind="function"><name>Error</name></member>
    <member refid="d0/da5/structpyfolio_1_1Error_1a9b2ac69b2cea6034df315929765e336b" kind="function"><name>Error</name></member>
    <member refid="d0/da5/structpyfolio_1_1Error_1a7c0e5b9a9056b9e8f59ac6745d31e07b" kind="function"><name>to_string</name></member>
  </compound>
  <compound refid="dc/dcf/structpyfolio_1_1positions_1_1HoldingsSeries_1_1ExposureSeries" kind="struct"><name>pyfolio::positions::HoldingsSeries::ExposureSeries</name>
    <member refid="dc/dcf/structpyfolio_1_1positions_1_1HoldingsSeries_1_1ExposureSeries_1add76d07ec2b5eef7d3faf239f6c09478" kind="variable"><name>gross_exposure</name></member>
    <member refid="dc/dcf/structpyfolio_1_1positions_1_1HoldingsSeries_1_1ExposureSeries_1a76f712e799fd60820a5c74990c20edf8" kind="variable"><name>net_exposure</name></member>
    <member refid="dc/dcf/structpyfolio_1_1positions_1_1HoldingsSeries_1_1ExposureSeries_1a20968a0f8817c438bc0b6bee75f6eb59" kind="variable"><name>long_exposure</name></member>
    <member refid="dc/dcf/structpyfolio_1_1positions_1_1HoldingsSeries_1_1ExposureSeries_1a4a7140c18b9aa8986eb1ccdf1a2e89fe" kind="variable"><name>short_exposure</name></member>
  </compound>
  <compound refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures" kind="struct"><name>pyfolio::attribution::FactorExposures</name>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1aca7d631b073b924d7f89efd6d4b9668f" kind="variable"><name>market_beta</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1a1eca32accfb23f23f3c8cf188d60f5ad" kind="variable"><name>size_factor</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1abf25d702c370cb2b14834d493d88bdd3" kind="variable"><name>value_factor</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1a141f158c067e9bfbe3e7fa4edb77423e" kind="variable"><name>momentum_factor</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1a8315ff133f67f56909bcca3f0cea639b" kind="variable"><name>quality_factor</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1ade09d65d7207dcd41d6abafebfdb580b" kind="variable"><name>low_volatility_factor</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1aac5cca4b037ee818911fbd64ec8f02ac" kind="function"><name>FactorExposures</name></member>
    <member refid="df/da4/structpyfolio_1_1attribution_1_1FactorExposures_1ab909e4fe32a300b587bbd8862507ba31" kind="function"><name>FactorExposures</name></member>
  </compound>
  <compound refid="db/df7/classpyfolio_1_1risk_1_1FactorModel" kind="class"><name>pyfolio::risk::FactorModel</name>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1aff005fd5594c5741a73248a80c36bbaf" kind="variable"><name>factor_returns_</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a8ae285cce917e7501d3ac559e0b9582c" kind="variable"><name>security_exposures_</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1afe03030c789c2f6f8dffa759be32f283" kind="variable"><name>factor_covariance_</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1ab47ec1573cc2eb568c198cbe58f758c3" kind="function"><name>set_factor_returns</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a45fa830d20150934e8834d672d02498a" kind="function"><name>set_security_exposures</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a63418904140fddd6168227df6de38b6c" kind="function"><name>set_factor_covariance</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a09ee4dd1527b8f346c534067c73b1bf8" kind="function"><name>calculate_portfolio_exposures</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a1be5f385fc69e12ffd0bc18517b8a2ca" kind="function"><name>calculate_risk_attribution</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a2037fe5fd8045ce1118e252a1e0e890d" kind="function"><name>estimate_expected_returns</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1aaf71a64adbbb2d03160482b25929baae" kind="function"><name>get_available_factors</name></member>
    <member refid="db/df7/classpyfolio_1_1risk_1_1FactorModel_1a0df8912e583fe6141d76b4a417751f39" kind="function"><name>get_factor_covariance</name></member>
  </compound>
  <compound refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns" kind="struct"><name>pyfolio::attribution::FactorReturns</name>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1a954b8d6f9127b22378224c3913000ffc" kind="variable"><name>market_return</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1a8d871460c8fa735b641fb273061e5a89" kind="variable"><name>size_return</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1af01832d5d63e7186c7155ed7b18620f2" kind="variable"><name>value_return</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1a2e0ef896d33b4c75f7788a29993d195d" kind="variable"><name>momentum_return</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1ae47ee072b4df916d484e83b929130a37" kind="variable"><name>quality_return</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1a36a07b2b8c415b9d556611cbbb87dc63" kind="variable"><name>low_volatility_return</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1ab24bf57f17c74ddb93fe0465c74551d7" kind="function"><name>FactorReturns</name></member>
    <member refid="d2/d09/structpyfolio_1_1attribution_1_1FactorReturns_1a1b5599c865c9fce71fe63e5a782dd758" kind="function"><name>FactorReturns</name></member>
  </compound>
  <compound refid="d1/da5/structpyfolio_1_1risk_1_1FactorRiskAttribution" kind="struct"><name>pyfolio::risk::FactorRiskAttribution</name>
    <member refid="d1/da5/structpyfolio_1_1risk_1_1FactorRiskAttribution_1a13bd73b126bb4d28b0a56c831f6f0db1" kind="variable"><name>factor_contributions</name></member>
    <member refid="d1/da5/structpyfolio_1_1risk_1_1FactorRiskAttribution_1a9fb751c9e775b512d7f7eb93dbde37cf" kind="variable"><name>specific_risk_contribution</name></member>
    <member refid="d1/da5/structpyfolio_1_1risk_1_1FactorRiskAttribution_1a918c4a64ed16e168442c55570c4efaae" kind="variable"><name>total_risk</name></member>
    <member refid="d1/da5/structpyfolio_1_1risk_1_1FactorRiskAttribution_1abd838042317d89372b54e1264b941d17" kind="function"><name>get_factor_contribution</name></member>
    <member refid="d1/da5/structpyfolio_1_1risk_1_1FactorRiskAttribution_1ae34a81255d6b65ad684c1b53ca1b8754" kind="function"><name>get_factor_contribution_pct</name></member>
  </compound>
  <compound refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator" kind="class"><name>pyfolio::memory::FixedBlockAllocator</name>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1af480ab4a60322ee90d98d07f1bed1bf9" kind="variable"><name>block_size</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1acbab66c49566794dfda6bd0b5cbd730e" kind="variable"><name>alignment</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a1891fbe2bf64f6813d19ebfbce26dc2d" kind="variable"><name>pool_size</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a75d212ea3422ceac3b0f3657948a3661" kind="variable"><name>memory_pool_</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a192d5203bedd9fab31a8854232093790" kind="variable"><name>free_list_</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a13ab3f69ff3b71829b277b9d83a70550" kind="variable"><name>allocated_count_</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a04ac150e3667638c7497c0b67fe9c8ba" kind="variable"><name>total_allocations_</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1ab107d016cd2e0e85a50a6ec658e94811" kind="variable"><name>mutex_</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a6412162b949de97a0f85c4bfe278e49c" kind="function"><name>FixedBlockAllocator</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a343e1eff335829ac597b4b98e8f074a3" kind="function"><name>~FixedBlockAllocator</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a7f07fb55cf880a9ed817753d1214a3d8" kind="function"><name>FixedBlockAllocator</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a109407ef3247fa16e47bbde830f54b88" kind="function"><name>operator=</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a6ce9b3915d947672d24b562cfc98012d" kind="function"><name>FixedBlockAllocator</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a03565ceecf81b3f4d599d5f055327f64" kind="function"><name>operator=</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1afd537f2de03df9a9385a5accb3ef1ff1" kind="function"><name>allocate</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a42123e2ef7b51a74ce614d0fcbaf8454" kind="function"><name>deallocate</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1ae6b661cfac6f86cef0c27d3a0acd0010" kind="function"><name>owns</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1afa2e77d5ecac76ac373620dee3818fe0" kind="function"><name>get_stats</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1ac620ad08d96340f5a9d763f1bad4b844" kind="function"><name>available_blocks</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1a042c2d5c6927a8a6e395a904a77fee3e" kind="function"><name>is_full</name></member>
    <member refid="d6/d0f/classpyfolio_1_1memory_1_1FixedBlockAllocator_1ac920fc5421b5a0271f8f24c2a306f71f" kind="function"><name>initialize_free_list</name></member>
  </compound>
  <compound refid="d9/d1a/structpyfolio_1_1positions_1_1Holding" kind="struct"><name>pyfolio::positions::Holding</name>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1a8609bad54aebda965cde6d257d925f00" kind="variable"><name>symbol</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1afb91f4863892053ef84d3c025d01d94e" kind="variable"><name>shares</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1afca6e9d9e4a225a935ab809bfddf0b8a" kind="variable"><name>average_cost</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1a01a3464efdc74a64e3ea3f9f9569052d" kind="variable"><name>current_price</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1adf0e54d1d9c3320543a9d2f11a0319ca" kind="variable"><name>market_value</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1a2ffc9a1035916ed4b82ad8ad67d42a42" kind="variable"><name>cost_basis</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1af2a4a0537013f5e5a57838af3a84dcc0" kind="variable"><name>unrealized_pnl</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1aef668dc4cf670308c18e00462f5751b7" kind="variable"><name>weight</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1aaa1c01140aa136014490c10ec0cf6379" kind="function"><name>calculate_metrics</name></member>
    <member refid="d9/d1a/structpyfolio_1_1positions_1_1Holding_1ae77c2a03f87915a68d5b3bccd5c85256" kind="function"><name>return_pct</name></member>
  </compound>
  <compound refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries" kind="class"><name>pyfolio::positions::HoldingsSeries</name>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ace8a6694082bc6d92f53085af50c117e" kind="typedef"><name>iterator</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aedd634c594e4397cd99f9063e3743808" kind="typedef"><name>const_iterator</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aa3410c857be7eacafb774b9688b9ceac" kind="variable"><name>holdings_series_</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1af185b485f9bf5c244d62cdb699ad9b3f" kind="function"><name>sort_by_timestamp</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aace07699e98457394e5e8e824ee73423" kind="function"><name>HoldingsSeries</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab67eeaf77da0b6b17e0d1fdade15aef4" kind="function"><name>HoldingsSeries</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aa339b863f39735db8959a933074a432e" kind="function"><name>size</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a0c3251d7029c4b520ae5050ecf9e6607" kind="function"><name>empty</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a2a7452293176017f8c00c1cadf79070a" kind="function"><name>operator[]</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a0003c0083c0e1fc00ae9c769047eaede" kind="function"><name>operator[]</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a50302653d77a56901dee608eeee20777" kind="function"><name>front</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a103e6e9e0103c7de242d0a376d39b8c7" kind="function"><name>back</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aeb2b724f451ab3a5cc0cc56ad71daa1a" kind="function"><name>begin</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a803e7478632804b7bdd93422af0841dc" kind="function"><name>begin</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a1f98bca19671e87f0b6b0f961b7844d3" kind="function"><name>end</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aae861ee000b05be1fe4c365a335c1d54" kind="function"><name>end</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ad9794673d75326121bcd266772c61f68" kind="function"><name>add_holdings</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a5bc013d5187b88b0f9acf132d7fe7696" kind="function"><name>at_time</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a5e1bf9b3a03e4280c0067784ce67c924" kind="function"><name>portfolio_value_series</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a566c275feb01e5f83234c36b9d13a885" kind="function"><name>exposure_series</name></member>
    <member refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" kind="function"><name>build_from_transactions</name></member>
  </compound>
  <compound refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue" kind="struct"><name>pyfolio::analytics::IndicatorValue</name>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1a14deb59b91ecf924c081974fdcfdd6e2" kind="variable"><name>value</name></member>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1ab4bf3bdfae41bcfbc0112511b12d7e65" kind="variable"><name>timestamp</name></member>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1a33cd9e8f14762fb44a7673af82a47113" kind="variable"><name>type</name></member>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1a2470207f73b77442caab50b2bc6a217e" kind="variable"><name>percentile</name></member>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1ab6c1d94ffc616abbe6614a2765c7b120" kind="variable"><name>regime</name></member>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1a5c8ab185a7789dbd1a1cdc885b3d754f" kind="function"><name>indicates_stress</name></member>
    <member refid="df/dcf/structpyfolio_1_1analytics_1_1IndicatorValue_1a79a8ae469bab53fe4aedd211b49d9a5a" kind="function"><name>signal_strength</name></member>
  </compound>
  <compound refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig" kind="struct"><name>pyfolio::visualization::InteractivePlotConfig</name>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a4a7d7d7ed965a0490863e43c83323d26" kind="variable"><name>enable_zoom</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a2411662f26d358955c2fc6eb9d231ab3" kind="variable"><name>enable_pan</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a08031736c50d0757a6041272b71c9090" kind="variable"><name>enable_hover</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1ab27e67acd340dd33df282a136eb61de5" kind="variable"><name>enable_crossfilter</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1af09aab73a495972af4aa113dfaf5b732" kind="variable"><name>enable_rangeslider</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a40427885f386818cc69e47b487334491" kind="variable"><name>enable_rangeselector</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1af42b93b1d5bd87dc0957c97ffcb9f6c7" kind="variable"><name>theme</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a0b272f8a1d5e9a3111671dbc3cfb9021" kind="variable"><name>responsive</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a56f5b8f2800f172cd5afff91d1dd228d" kind="variable"><name>custom_config</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a2a9971ba12cb0658584db9d8091fc489" kind="variable"><name>enable_animation</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a11e5a0a4c81deaf09ec8c464832e32d3" kind="variable"><name>animation_duration</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a0f479937a4251f73f3b10ddbed383849" kind="variable"><name>margin</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1aac9a5437c52eaeaeccfe0ed3aba6d20c" kind="variable"><name>font_family</name></member>
    <member refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a443ab8e1949183657a27888170deed9d" kind="variable"><name>font_size</name></member>
  </compound>
  <compound refid="d7/d42/structpyfolio_1_1reporting_1_1InterestingPeriod" kind="struct"><name>pyfolio::reporting::InterestingPeriod</name>
    <member refid="d7/d42/structpyfolio_1_1reporting_1_1InterestingPeriod_1a936e50a47f502dd0536bc38eb14fd72b" kind="variable"><name>name</name></member>
    <member refid="d7/d42/structpyfolio_1_1reporting_1_1InterestingPeriod_1ae437993dc31fa487027578e44a79b1ad" kind="variable"><name>start</name></member>
    <member refid="d7/d42/structpyfolio_1_1reporting_1_1InterestingPeriod_1a96e28c244bfea009580c3815ce4b96d0" kind="variable"><name>end</name></member>
    <member refid="d7/d42/structpyfolio_1_1reporting_1_1InterestingPeriod_1ad080072965ae64113b9038accb059c72" kind="variable"><name>description</name></member>
    <member refid="d7/d42/structpyfolio_1_1reporting_1_1InterestingPeriod_1a649f3550c954a7869c9b15a41750b9e9" kind="function"><name>InterestingPeriod</name></member>
  </compound>
  <compound refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods" kind="class"><name>pyfolio::reporting::InterestingPeriods</name>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a3a568f833699bbbb64099465298bc30b" kind="variable"><name>custom_periods_</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a285b35b17a8c520ddce7072c45929735" kind="function"><name>get_all_periods</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a9a2eceeb6bf137d299ecbe65d5a91098" kind="function"><name>get_periods_by_category</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a9546c510e3396ef958efc7ac420a0193" kind="function"><name>get_recent_periods</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a5ab93e73552d5d476c62c9424c743e95" kind="function"><name>get_overlapping_periods</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a7b8a85fdecc91fa8602258fa3469690b" kind="function"><name>add_custom_period</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1a15e621144c077805cb02b89887d4efdb" kind="function"><name>get_all_including_custom</name></member>
    <member refid="d0/dd1/classpyfolio_1_1reporting_1_1InterestingPeriods_1af165f22df36b6223c47e6e98395a5dbc" kind="function"><name>clear_custom_periods</name></member>
  </compound>
  <compound refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer" kind="class"><name>pyfolio::intraday::IntradayAnalyzer</name>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a55e4461ef8ea907d50c4a3e83bee9872" kind="function"><name>detect_intraday</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1ad5f70c82e839ca853a0ab7132e4c7259" kind="function"><name>estimate_intraday_positions</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1acadbdac004b215eef082e50ea5341667" kind="function"><name>check_and_process_intraday</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a2319d52bbe889caa4d9a0f962cc428e6" kind="function"><name>find_peak_exposure_time</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1acf89e86481a317130a204a6fb61b2aa3" kind="function"><name>calculate_position_transaction_ratio</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1aed7f181bdd5f8b05cdcad5939959b78d" kind="function"><name>calculate_symbol_ratio</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1aced604eff0abe9ec402678efa745b7e2" kind="function"><name>get_transactions_for_date</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1af79bdf1922a99676226b0cf62edcfb15" kind="function"><name>calculate_rolling_max_exposure</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a2fd03b3c01b2517bb7f580ab2a9e47eb" kind="function"><name>group_transactions_by_hour</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a80f9b887d47cb8c57e1b2d2c15da13a3" kind="function"><name>estimate_eod_positions</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1afb34b07468e4584e16b7ef10c69a9bcb" kind="function"><name>validate_detection_results</name></member>
    <member refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a3ffd3b3b0fbbeffc108c2a010dfa7937" kind="function"><name>calculate_confidence_score</name></member>
  </compound>
  <compound refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult" kind="struct"><name>pyfolio::intraday::IntradayDetectionResult</name>
    <member refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult_1aae5c2c6dacab4652fcc2b8330899aae7" kind="variable"><name>is_intraday</name></member>
    <member refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult_1a58ac6694274312bcda229bbcc80e47fa" kind="variable"><name>threshold_ratio</name></member>
    <member refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult_1a07a751f7dbd28aa9956dfb6cea8db6ce" kind="variable"><name>optimal_sampling_time</name></member>
    <member refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult_1ad3006e5b86c770eebdc956ee48c49b81" kind="variable"><name>detection_method</name></member>
    <member refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult_1a3699ab0a2900e8f898c79299c6b3bc9c" kind="variable"><name>confidence_score</name></member>
    <member refid="d4/db5/structpyfolio_1_1intraday_1_1IntradayDetectionResult_1ab13f1e20815ee29a65da7f4703fc1579" kind="variable"><name>symbol_ratios</name></member>
  </compound>
  <compound refid="d1/d68/structpyfolio_1_1intraday_1_1IntradayEstimationConfig" kind="struct"><name>pyfolio::intraday::IntradayEstimationConfig</name>
    <member refid="d1/d68/structpyfolio_1_1intraday_1_1IntradayEstimationConfig_1a582325571e06b55a323ee399fe924b16" kind="variable"><name>eod_hour</name></member>
    <member refid="d1/d68/structpyfolio_1_1intraday_1_1IntradayEstimationConfig_1aa5c62f132e54b94551f0af7434b52a18" kind="variable"><name>eod_minute</name></member>
    <member refid="d1/d68/structpyfolio_1_1intraday_1_1IntradayEstimationConfig_1af0292160d5cdbf623184bd4741697f84" kind="variable"><name>position_threshold</name></member>
    <member refid="d1/d68/structpyfolio_1_1intraday_1_1IntradayEstimationConfig_1adf8f99c12297211c4ff93d1af37de26a" kind="variable"><name>use_rolling_max</name></member>
    <member refid="d1/d68/structpyfolio_1_1intraday_1_1IntradayEstimationConfig_1a411b192cd0ca33d5d0f6b4c5239ee971" kind="variable"><name>rolling_window</name></member>
  </compound>
  <compound refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer" kind="class"><name>pyfolio::web::JsonSerializer</name>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a2af72b0ed0ffccd71321216cd4133df6" kind="function"><name>serialize_datetime</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a7adc5b913cadb3d0cc93d5ad7b2b93fd" kind="function"><name>serialize_time_series</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1afcf41eac95ec7e179f6ab359e458141b" kind="function"><name>serialize_performance_metrics</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a8cd9c946ef3693eea5d52e9cf56b8485" kind="function"><name>serialize_holding</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1add2a42fe9dcd980105be0a758134a10a" kind="function"><name>serialize_portfolio_holdings</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a9f33a35a5b19824c6d91fe007c43453c" kind="function"><name>serialize_transaction_record</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1ae12c7f18031cb7d03ec2756e85b2bb6d" kind="function"><name>serialize_result</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a8fdf4769c763923ab88120b69bfa04b1" kind="function"><name>create_api_response</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a06f9602cb83b6063ee0f7fa8baae7e49" kind="function"><name>create_error_response</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1a939bc654f97aca0244439bf4b2e6ec47" kind="function"><name>parse_time_series</name></member>
    <member refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1af5ccaefdc7c758341967765eae7e199b" kind="function"><name>parse_transaction_record</name></member>
  </compound>
  <compound refid="d3/dfe/classpyfolio_1_1transactions_1_1LinearImpactModel" kind="class"><name>pyfolio::transactions::LinearImpactModel</name>
    <member refid="d3/dfe/classpyfolio_1_1transactions_1_1LinearImpactModel_1ae5e3e24a5897d0483acd90aa11d5428b" kind="variable"><name>impact_coefficient_</name></member>
    <member refid="d3/dfe/classpyfolio_1_1transactions_1_1LinearImpactModel_1a1c4a04fbcc3f8d6cd78c1a8062943f9f" kind="function"><name>LinearImpactModel</name></member>
    <member refid="d3/dfe/classpyfolio_1_1transactions_1_1LinearImpactModel_1a0ae2c615c8dbcb621f4f4fc28e71caf6" kind="function"><name>calculate_impact</name></member>
  </compound>
  <compound refid="d9/d8b/classpyfolio_1_1visualization_1_1dashboard_1_1LiveDashboard" kind="class"><name>pyfolio::visualization::dashboard::LiveDashboard</name>
    <member refid="d9/d8b/classpyfolio_1_1visualization_1_1dashboard_1_1LiveDashboard_1a57103389d19957cb96ad149515afbd19" kind="variable"><name>websocket_endpoint_</name></member>
    <member refid="d9/d8b/classpyfolio_1_1visualization_1_1dashboard_1_1LiveDashboard_1afe30b2240378063ff8566cc5eb362414" kind="variable"><name>update_interval_ms_</name></member>
    <member refid="d9/d8b/classpyfolio_1_1visualization_1_1dashboard_1_1LiveDashboard_1af13ceda04a18d42e282d8bd6af578028" kind="function"><name>LiveDashboard</name></member>
    <member refid="d9/d8b/classpyfolio_1_1visualization_1_1dashboard_1_1LiveDashboard_1acfb6bc448d410bea1c6fe2387cde85ef" kind="function"><name>generate_websocket_client</name></member>
    <member refid="d9/d8b/classpyfolio_1_1visualization_1_1dashboard_1_1LiveDashboard_1a04e78630460c737a5dd64b9565509db7" kind="function"><name>create_live_dashboard</name></member>
  </compound>
  <compound refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult" kind="struct"><name>pyfolio::risk::MarginalVaRResult</name>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1a74801c08776f661a20bbd11a01df5f00" kind="variable"><name>marginal_var</name></member>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1abf7b12ae9287b14b07499e7d5e28fc85" kind="variable"><name>component_var</name></member>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1aad0cf9052ae97ce29ff2b3656809de8f" kind="variable"><name>percentage_contribution</name></member>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1a41d79dec711c21363bd752baa2084967" kind="variable"><name>total_var</name></member>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1ac192d1b07ee9e830d37bf329b0958145" kind="function"><name>get_marginal_var</name></member>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1a12b4645d3c60694450b2e7e4990befeb" kind="function"><name>get_component_var</name></member>
    <member refid="d0/dda/structpyfolio_1_1risk_1_1MarginalVaRResult_1a17cefb35424c1a8c2e1fbd88ac2bfb31" kind="function"><name>get_percentage_contribution</name></member>
  </compound>
  <compound refid="de/d03/structpyfolio_1_1MarketData" kind="struct"><name>pyfolio::MarketData</name>
    <member refid="de/d03/structpyfolio_1_1MarketData_1a4d23eba647782cb3ad3afe55a8b89143" kind="variable"><name>prices</name></member>
    <member refid="de/d03/structpyfolio_1_1MarketData_1a2a7074ad7546205839db4e7ec9a168e3" kind="variable"><name>volumes</name></member>
    <member refid="de/d03/structpyfolio_1_1MarketData_1a1529be0962f66cccb9d489302e1435fe" kind="variable"><name>timestamps</name></member>
    <member refid="de/d03/structpyfolio_1_1MarketData_1a0acc03e3574fcacaa068077cf8304f0e" kind="variable"><name>symbol</name></member>
    <member refid="de/d03/structpyfolio_1_1MarketData_1aa6886729a9295cdf415e75fe231286d6" kind="variable"><name>currency</name></member>
  </compound>
  <compound refid="d7/d7e/classpyfolio_1_1transactions_1_1MarketImpactModel" kind="class"><name>pyfolio::transactions::MarketImpactModel</name>
    <member refid="d7/d7e/classpyfolio_1_1transactions_1_1MarketImpactModel_1a7ec87980cbc5949bf03fb228eed1a119" kind="function"><name>~MarketImpactModel</name></member>
    <member refid="d7/d7e/classpyfolio_1_1transactions_1_1MarketImpactModel_1a8f0433f6a155466928c8483b64509d12" kind="function"><name>calculate_impact</name></member>
  </compound>
  <compound refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators" kind="struct"><name>pyfolio::analytics::MarketIndicators</name>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a81e6347dc2afa96074c9ab46c8e0e669" kind="variable"><name>vix_levels</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a93a3e415aebbd0725c082e4133bdd2be" kind="variable"><name>term_spreads</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a063db98c2729ff651b0b25063152549e" kind="variable"><name>credit_spreads</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1abb4cbed0913259fc6f437e554ddf0866" kind="variable"><name>yield_curve_slopes</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a5a757b9d33575e364c9b7b96db5888c8" kind="variable"><name>put_call_ratios</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a099e754109930343745543edba0bec89" kind="variable"><name>high_yield_spreads</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1aafb884da28ef43edfa79139b10edcdd8" kind="variable"><name>dollar_index</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a16083d9552957805fcc2d50e0358fdd8" kind="variable"><name>commodity_index</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a43f40f01d24cda780af90dc04a2a97fa" kind="function"><name>size</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a2a9400a6dbb4863539776335a1338e13" kind="function"><name>empty</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a7b24460ee0e6ded74ee38374827c286e" kind="function"><name>resize</name></member>
    <member refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a3472ae4a6b393649294553e755691488" kind="function"><name>get_indicator</name></member>
  </compound>
  <compound refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer" kind="class"><name>pyfolio::analytics::MarketIndicatorsAnalyzer</name>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1ae53baae6a9a58aa8de48d7ccc305aace" kind="variable"><name>historical_data_</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1af82076d2f5c99a5521fe978cb8721076" kind="variable"><name>percentile_bounds_</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a9f785143f2c1c52c746ed3e8b4214d59" kind="function"><name>MarketIndicatorsAnalyzer</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1ae004675f51aba00cec17917cb7386fb1" kind="function"><name>set_historical_data</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a360e26609fdcd35ddfb586b19864b435" kind="function"><name>calculate_vix_regime</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a53249535e8c8f38e79c77105fb7e5728" kind="function"><name>calculate_yield_curve_slope</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a48fd089e90d09096a868303d8223348d" kind="function"><name>calculate_credit_spreads</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1aced12b9d93e86d925c9259daeb0d65fc" kind="function"><name>analyze_regime_indicators</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1acaab80ec9422b4295fa59061cfba1f9e" kind="function"><name>calculate_indicator_correlations</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a4901a40e67d8b042f343095819150e40" kind="function"><name>get_current_stress_level</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a017079d84faed9b9eb1e2893900be5b3" kind="function"><name>calculate_percentile_bounds</name></member>
    <member refid="d3/d3c/classpyfolio_1_1analytics_1_1MarketIndicatorsAnalyzer_1a49dfe477880a827942c032610def5b3d" kind="function"><name>calculate_percentile</name></member>
  </compound>
  <compound refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure" kind="struct"><name>pyfolio::capacity::MarketMicrostructure</name>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1aff94da91b6c4906c5f03af6701cf73e3" kind="variable"><name>symbol</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1ae03c3145dcf42d1ff6722eb2eb39bcce" kind="variable"><name>average_daily_volume</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1a0d47d19b128d51f8bb3a4e0a9a055ab3" kind="variable"><name>average_dollar_volume</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1a6ccc24afaf2583efe2469b1404485ceb" kind="variable"><name>market_cap</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1a75a7e05e4c6e197fb42cf15527d3ff32" kind="variable"><name>typical_spread_bps</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1a4960c821ac314498fb012f2138c9fa0a" kind="variable"><name>price_impact_coefficient</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1ad00faced83e001841adf0d58c788109d" kind="variable"><name>volatility</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1a53241cf8a782fedd01a9ac1db8de5231" kind="function"><name>calculate_spread_cost</name></member>
    <member refid="dc/d43/structpyfolio_1_1capacity_1_1MarketMicrostructure_1a2f210c523c597ac1e83dd0afa744ef52" kind="function"><name>estimate_price_impact</name></member>
  </compound>
  <compound refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager" kind="class"><name>pyfolio::memory::MemoryPoolManager</name>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a71a88e07d1586bf47925d7fd7822b48f" kind="variable"><name>variable_pool_</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a2687d0ad2332966be5fbb351a8db4364" kind="variable"><name>stats_mutex_</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a780380ccd601c87f61c0bd4293fa6379" kind="function"><name>instance</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a2ccfb65150228589dd78cbab12404d63" kind="function"><name>allocate</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a518dcdea43306207e23136e4a43ef800" kind="function"><name>deallocate</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a1d936f11f9dc11b3b97940c47f932e59" kind="function"><name>get_global_stats</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1a7da9c2c88f5eb651b736bbdc4386d2b0" kind="function"><name>defragment</name></member>
    <member refid="dc/d0b/classpyfolio_1_1memory_1_1MemoryPoolManager_1af2492feb881bdb7cd93cc3d51e92b11b" kind="function"><name>MemoryPoolManager</name></member>
  </compound>
  <compound refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData" kind="struct"><name>pyfolio::visualization::OHLCData</name>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1af5d5eaa1692536b54470f0affe66e8cd" kind="variable"><name>timestamps</name></member>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1afefabff710d7cffeeae1659544b4fb10" kind="variable"><name>open</name></member>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1acd227169fd0c2a9bf765ae25bec96b6b" kind="variable"><name>high</name></member>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1a708ac8fd1d5b4fb1ce9da9679c4b2f49" kind="variable"><name>low</name></member>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1a115b2bdfbbd0648a15a707113b324422" kind="variable"><name>close</name></member>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1a612322c0495b27685c623a04e9b978a5" kind="variable"><name>volume</name></member>
    <member refid="d4/d9e/structpyfolio_1_1visualization_1_1OHLCData_1a01ef6dae7a8dd38e55c3bb59b2ce2b32" kind="variable"><name>name</name></member>
  </compound>
  <compound refid="d4/d3e/structpyfolio_1_1OHLCVData" kind="struct"><name>pyfolio::OHLCVData</name>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1ab85ef732a84134465a2ec3960651ff6e" kind="variable"><name>open</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1a5323b6c05a97f2f1afe9626c1ffd74a0" kind="variable"><name>high</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1aed7a6499b6725375c345c2bf1de086c1" kind="variable"><name>low</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1aa58c6408e02f8b4d931456756b77a05c" kind="variable"><name>close</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1a0f63ae681c7824d79deee446f7caa87e" kind="variable"><name>volume</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1a986489e73a2d8c6229c3b9e2d0861dfc" kind="variable"><name>timestamp</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1adc9c8e37314266fd06c4bca87a4ca7de" kind="variable"><name>symbol</name></member>
    <member refid="d4/d3e/structpyfolio_1_1OHLCVData_1ac37a0d88d187311a04eb2a6e27a57281" kind="variable"><name>currency</name></member>
  </compound>
  <compound refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition" kind="struct"><name>pyfolio::transactions::OpenPosition</name>
    <member refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition_1a6f6b0e7c0544fbeba7d3b21d22b46c81" kind="variable"><name>timestamp</name></member>
    <member refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition_1a340c5e8e4295cb795babd34c38f8fa1f" kind="variable"><name>shares</name></member>
    <member refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition_1a331e5a2a57b1e7193c624b3001245481" kind="variable"><name>price</name></member>
    <member refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition_1aa84a93cfae39f40417725844fa1cdbd0" kind="variable"><name>commission</name></member>
    <member refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition_1ae19c81c00748b0480784c436a5c2e6ba" kind="variable"><name>slippage</name></member>
    <member refid="d4/d46/structpyfolio_1_1transactions_1_1OpenPosition_1a9c7d26b6ef38c247ac1d9b537358162d" kind="function"><name>OpenPosition</name></member>
  </compound>
  <compound refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms" kind="class"><name>pyfolio::parallel::ParallelAlgorithms</name>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1ab17bd65d91ed6e334eba8d8763530aac" kind="variable"><name>config_</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a6bea99f7e0e5a82e2c734bfe06fdf999" kind="function"><name>calculate_chunk_size</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a8eb40b8849fa459988d63af2fc9dea54" kind="function"><name>should_use_parallel</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1ac2b310cf9bed4c215ec4ca1b3bb74b7f" kind="function"><name>ParallelAlgorithms</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a43b6ea31d4d8a3f7a81b6d240df54e06" kind="function"><name>parallel_map</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a3ba756e53e41ef4d081bd813d026afeb" kind="function"><name>parallel_reduce</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1af891348d5d6cc6b7f50308ef2e29201c" kind="function"><name>parallel_mean</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1ad92d62a79d4044197fdf6532ea08eb8f" kind="function"><name>parallel_std_deviation</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a92b8d67fd5072f6ff834101212b172fa" kind="function"><name>parallel_correlation</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a108b4651f0cd7b9335eb935f57b67ad3" kind="function"><name>parallel_rolling_operation</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a939ab533a457be119754167123f517af" kind="function"><name>parallel_rolling_mean</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a0a09b4946bd7396bb9e4052bd461be4d" kind="function"><name>parallel_rolling_std</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a1a4a8abf10f5a66bae10390c28d8bff2" kind="function"><name>get_config</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1abda22add4672c19171434f6c700cbfe9" kind="function"><name>update_config</name></member>
    <member refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1aab77141b644135a3d126b10d3cdfe7f6" kind="function"><name>get_performance_stats</name></member>
  </compound>
  <compound refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig" kind="struct"><name>pyfolio::parallel::ParallelConfig</name>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a3d74802291042117f504164059959889" kind="variable"><name>max_threads</name></member>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a7aba9ff6fb77c6873bf72c0875e845f6" kind="variable"><name>min_chunk_size</name></member>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1ae6da3878588bf110f50d7e0f17294597" kind="variable"><name>chunk_size_factor</name></member>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1aebb7407d3ed1a4be58830e89c9fe3ed0" kind="variable"><name>enable_vectorization</name></member>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a156c389a8863e3a284d5a092c8c81998" kind="variable"><name>adaptive_chunking</name></member>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1ab7e168a26862d921a812188ec62198f6" kind="variable"><name>parallel_threshold</name></member>
    <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a2eeb8828b4a98b8c96cc510196797900" kind="variable"><name>cpu_utilization_target</name></member>
  </compound>
  <compound refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite" kind="class"><name>pyfolio::analytics::ParallelPerformanceAnalysisSuite</name>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1ac22076f0f34ad1ac11833e60c480fe4a" kind="variable"><name>parallel_algo_</name></member>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1a256e3da16fbe1502c0fd7c87a06dee61" kind="function"><name>calculate_risk_metrics_parallel</name></member>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1a1232e7865222475edf8ed85354ecc46f" kind="function"><name>calculate_rolling_metrics_parallel</name></member>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1aafe8a53960915841b45d38261a2c71a1" kind="function"><name>ParallelPerformanceAnalysisSuite</name></member>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1a7c39e9da13b225d9186ed324da6514d5" kind="function"><name>analyze_performance_parallel</name></member>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1aca25081e97592337b65af38c858e1a03" kind="function"><name>get_parallel_stats</name></member>
    <member refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1abb2304530ba3490f6ce5bb6f6e56353f" kind="function"><name>update_parallel_config</name></member>
  </compound>
  <compound refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite" kind="class"><name>pyfolio::analytics::PerformanceAnalysisSuite</name>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a5b47576975b0f429173695c5e9868f33" kind="variable"><name>cache_calculator_</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ad5d03190e82eefb8e0e1d7cee1e3746f" kind="variable"><name>config_</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a4a40fd9252a8c8fb37d42236501a3f69" kind="variable"><name>last_analysis_time_</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1aa5b7af14119db440ebea535b19021ae4" kind="variable"><name>total_analyses_performed_</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a0bbe1f5e3530e021ce882daffddc092f" kind="variable"><name>total_computation_time_</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a35170357258e14e8cf2595080c92fcb9" kind="function"><name>calculate_risk_metrics</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a575e41e0554cd29223d56ab53bad96ae" kind="function"><name>calculate_rolling_metrics</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a53f9db0601659f95be60af59e57af838" kind="function"><name>perform_risk_analysis</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ac5e98814fe2f4a8f987a8c300f09e495" kind="function"><name>PerformanceAnalysisSuite</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a2a89a113f35927f33af40fa23ed44a70" kind="function"><name>analyze_performance</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a6b9722354403aaccf8862317429bb32a" kind="function"><name>get_performance_stats</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ab34d166961357e7173775299f6994bcf" kind="function"><name>update_config</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a5eafaa5c5624cb9b40b16bbe944489a6" kind="function"><name>clear_cache</name></member>
    <member refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a9198fb2924ab75dae4386bab25d050a0" kind="function"><name>get_config</name></member>
  </compound>
  <compound refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics" kind="struct"><name>pyfolio::analytics::PerformanceMetrics</name>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a3e502eb4760ff637704b95fc0cf4add1" kind="variable"><name>total_return</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a2d32e78155a9e0434d5beffda4fb2bec" kind="variable"><name>annual_return</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a0f0a580e22b9f38fee7222d2d3f1f646" kind="variable"><name>annual_volatility</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a2252369fd5a1d4f13476e6f68bec085e" kind="variable"><name>sharpe_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1aee0f94a36cb88d38dcc2d8f755bd359c" kind="variable"><name>sortino_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a7f7e2b17c39585f1a5869ca5ef8c8724" kind="variable"><name>max_drawdown</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a714269105c1cacb42e4170fdbae4918e" kind="variable"><name>calmar_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a0c337f6982ecd7f7c790a12893ee77b5" kind="variable"><name>skewness</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a2a26804a2b0f39cfe38af3f7d9d4fca1" kind="variable"><name>kurtosis</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a0b08a5e0348465a0a66cc54f95580373" kind="variable"><name>var_95</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a96cea1b61c0d9b29916d53409d3c612c" kind="variable"><name>var_99</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1ab50d8bd93cdab494c0971c3503b4dcef" kind="variable"><name>beta</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a8ae8364d4a6c1b763174571da30b46a6" kind="variable"><name>alpha</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a37817089e17da1751be43cf33bdd0dc7" kind="variable"><name>information_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a9ba502d1c94fa9c7a2d6102871e66882" kind="variable"><name>omega_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1ab26014d4fe883ea438f4b82f936d6684" kind="variable"><name>tail_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a0ec8fa97f4c65bacbafaafcdeab43927" kind="variable"><name>common_sense_ratio</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1af7be3b9d9bfe9171e7e0fb2f709226e7" kind="variable"><name>stability</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1a504222caaea5e4cd84f461b490c1401d" kind="variable"><name>downside_deviation</name></member>
    <member refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics_1ae60da18336ca95f60db5d1b5392cb916" kind="variable"><name>tracking_error</name></member>
  </compound>
  <compound refid="d7/d98/classpyfolio_1_1PerformanceMetrics" kind="class"><name>pyfolio::PerformanceMetrics</name>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a98139e1c2481720f61ac7a7f2959d9af" kind="function"><name>annual_return</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a6f7e64c2f975ec5facdf779b6d27533a" kind="function"><name>annual_volatility</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a5b09b3706a11359c2364d3d6149eba17" kind="function"><name>sharpe_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a904b5c53def9cd48ffb1be5fb776480e" kind="function"><name>sortino_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a205605b4205561b43b0b8e052999ec55" kind="function"><name>calmar_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a74e8559b754a6682d584e5083a97742e" kind="function"><name>max_drawdown</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a992b93ae03ec1d0da0fb55c985b70465" kind="function"><name>alpha_beta</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1ab87361fe59e60bb0b0de03856beb1ed5" kind="function"><name>information_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a9fdc757f9aed9be60ee1beb1bc1d0e6f" kind="function"><name>tracking_error</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a73f78d1e5ebebe459b1e9b8c2f5c695f" kind="function"><name>up_down_capture_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1ac6c146bcc32eea3eca50844ceb910a9b" kind="function"><name>tail_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a411a637e64ea20e90ff6ad18248fbc4d" kind="function"><name>common_sense_ratio</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a5784ddc0d8e243ae533e21f2f9b5054a" kind="function"><name>stability_of_timeseries</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1af08f7acfb54afc6584e949d822c895ce" kind="function"><name>calculate_comprehensive_metrics</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a535ca9f451f9d1ab1a2b96bb77a9b717" kind="function"><name>cumulative_returns</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1ac8fe98c7b6ddff19757e5d534aa15844" kind="function"><name>drawdown_series</name></member>
    <member refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1ad2969f9a4fbc7c5670a4916854ed97b0" kind="function"><name>rolling_sharpe</name></member>
  </compound>
  <compound refid="d7/dd3/structpyfolio_1_1parallel_1_1ParallelAlgorithms_1_1PerformanceStats" kind="struct"><name>pyfolio::parallel::ParallelAlgorithms::PerformanceStats</name>
    <member refid="d7/dd3/structpyfolio_1_1parallel_1_1ParallelAlgorithms_1_1PerformanceStats_1adc87d3fa3b84bcada89aa8fffeeeb999" kind="variable"><name>available_threads</name></member>
    <member refid="d7/dd3/structpyfolio_1_1parallel_1_1ParallelAlgorithms_1_1PerformanceStats_1ae766dc9074d79f7f9ef9e3e4765a5d06" kind="variable"><name>active_threads</name></member>
    <member refid="d7/dd3/structpyfolio_1_1parallel_1_1ParallelAlgorithms_1_1PerformanceStats_1a269c20efc86dd39afdaf2d587e1a0406" kind="variable"><name>cpu_utilization</name></member>
    <member refid="d7/dd3/structpyfolio_1_1parallel_1_1ParallelAlgorithms_1_1PerformanceStats_1a147c5d6af70d361837334aeab6ae6d4d" kind="variable"><name>tasks_completed</name></member>
  </compound>
  <compound refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary" kind="struct"><name>pyfolio::reporting::TearSheetResult::PerformanceSummary</name>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ab4b618173c3cfa6a39578cdd3720b5f0" kind="variable"><name>total_return</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a2eec1ff15d47cfb19cf02e60e8bc6e21" kind="variable"><name>annual_return</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6c5d0224bd93f03335ad6e6665a761b4" kind="variable"><name>annual_volatility</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1afd208ddaf20d66eb8e573aba03c1bd0d" kind="variable"><name>sharpe_ratio</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a54f925bf1a9afcf4db0db2fa962ad872" kind="variable"><name>sortino_ratio</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa93b7cc6b807d1d02970b7560669055e" kind="variable"><name>max_drawdown</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa8f6e8acc5031b9fd80af74fbad37be0" kind="variable"><name>calmar_ratio</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a8e12aad10f555158dadea14e5f4b5b8a" kind="variable"><name>omega_ratio</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ae61b4834953dbb1a4c7e11a523279e7a" kind="variable"><name>skewness</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ac8122816c643d8cfbde848c1c04d0574" kind="variable"><name>kurtosis</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a0479796f98b7be4cd19e0517251c240b" kind="variable"><name>tail_ratio</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a12860d372ce266b2bb06ea53c0efd631" kind="variable"><name>value_at_risk</name></member>
    <member refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6cb8533f9f82ec86b68d282323d211fc" kind="variable"><name>conditional_value_at_risk</name></member>
  </compound>
  <compound refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig" kind="struct"><name>pyfolio::visualization::PlotConfig</name>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a70ac2fc42d0fc426c0ce00473ca894de" kind="variable"><name>title</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1aac6d45d5833db9d5b105f760f0e05a84" kind="variable"><name>xlabel</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a42d5d06dbac29ff010c49f24f45b447c" kind="variable"><name>ylabel</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a2fce82f644e824bd42057029da3a02ac" kind="variable"><name>figsize</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a537815dac556348f94c1522e113095ba" kind="variable"><name>grid</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a8666fc50641d9c5d727b6d44bf33fba8" kind="variable"><name>legend</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a2fb8dc31ea6abfd04d65dda17311d59d" kind="variable"><name>save_plot</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a129faf65f83eccdf48eaae22cb82f413" kind="variable"><name>save_path</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1ab98d29cc7993028b72c9c0cd03a8bf9b" kind="variable"><name>dpi</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1a632ce378e5a2070c34e01f1e10d02470" kind="variable"><name>colors</name></member>
    <member refid="d2/d44/structpyfolio_1_1visualization_1_1PlotConfig_1ab3676feee9db68cef97d34f9769bcec3" kind="variable"><name>format</name></member>
  </compound>
  <compound refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData" kind="struct"><name>pyfolio::visualization::PlotData</name>
    <member refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1a5e2010a240ef83490301d4066ae046ed" kind="variable"><name>timestamps</name></member>
    <member refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1a23b96cef40eacdf7d2a91443cebd37b4" kind="variable"><name>values</name></member>
    <member refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1afa8a89392828441a337028a4b1f13fac" kind="variable"><name>label</name></member>
    <member refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1a645c7b31e09995d482914d274dc25958" kind="variable"><name>color</name></member>
    <member refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1aa30be95d00e251fe62bf4a9703fd3363" kind="variable"><name>style</name></member>
  </compound>
  <compound refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine" kind="class"><name>pyfolio::visualization::PlotEngine</name>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1afdbb9f782272250e36fc8e0c26edb49b" kind="function"><name>PlotEngine</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a71f235e929ec020e2ec5ca172d3fe965" kind="function"><name>~PlotEngine</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a0332e0e3176fd46028097be8b096fcb8" kind="function"><name>create_line_plot</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1aa90f63aca35a0e5683aab907e8ad752c" kind="function"><name>create_bar_plot</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a626fccf04da191851c05b860be864f28" kind="function"><name>create_heatmap</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a32df876314171a1f3510ee9775d6da52" kind="function"><name>create_histogram</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a0dbfab3657a16b5f369fe49f9cd296ec" kind="function"><name>datetime_to_string</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a4dc10919be02fcdbfdc6d8dab809876e" kind="function"><name>generate_html_plot</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1ad78ebb6367da17a371c2cc671e266259" kind="function"><name>generate_svg_plot</name></member>
    <member refid="d7/df1/classpyfolio_1_1visualization_1_1PlotEngine_1a257e834933beec615bacf1e105260795" kind="function"><name>save_plot</name></member>
  </compound>
  <compound refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine" kind="class"><name>pyfolio::visualization::PlotlyEngine</name>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a7f27c2da45e23de998fc227316cb0175" kind="variable"><name>default_config_</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a5f556481504d38e16a9b5c5464c4cf76" kind="function"><name>PlotlyEngine</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a0454db76f9fadacf750f627143e7f794" kind="function"><name>PlotlyEngine</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a5188465ed9c3d49b6c3d3f97f44d60f8" kind="function"><name>create_time_series_chart</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a5817805d83c5d938efde57ce50604ea8" kind="function"><name>create_candlestick_chart</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1ae544f8dea4c20084c02e7e3c767d6094" kind="function"><name>create_correlation_heatmap</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1ab9ceddea46b0adf1cd15fbada715d7c7" kind="function"><name>create_3d_surface</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a12121c2d7a3013e7a3ddce11d1a13976" kind="function"><name>create_treemap</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a6f5008f5153cb749751ea01126007de0" kind="function"><name>create_waterfall_chart</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a8eac6556a8862a0eb2cc2463204eec9e" kind="function"><name>create_subplots_dashboard</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1abbea6d385f93dea9019335572b4d2121" kind="function"><name>generate_plotly_config</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1abcedfb3075fc2ec3cea5f1a051ece652" kind="function"><name>generate_layout</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a5274fc868b5e26fe841b227263297deb" kind="function"><name>generate_html_wrapper</name></member>
    <member refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a30db198917007fad5a9e0eafffc7148c" kind="function"><name>datetime_to_plotly_string</name></member>
  </compound>
  <compound refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool" kind="struct"><name>pyfolio::memory::VariablePoolAllocator::Pool</name>
    <member refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool_1a82c0e52f6b0cdc724b8e89f9a3107d97" kind="variable"><name>memory</name></member>
    <member refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool_1ae13fc1fdc5f781ad407bfc9772070756" kind="variable"><name>size</name></member>
    <member refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool_1a69eec9148d31e4c278791efa12f225d2" kind="variable"><name>used</name></member>
    <member refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool_1a3fe53f0338139a6243d535bdac48e418" kind="variable"><name>free_list</name></member>
    <member refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool_1a23317499f8e7e7c826d498cd7cfd87a3" kind="function"><name>Pool</name></member>
  </compound>
  <compound refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator" kind="class"><name>pyfolio::memory::PoolAllocator</name>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1aeffb002b085a52e575145c760cb4efc7" kind="typedef"><name>value_type</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a1d70e05e7595f0ca21eab1a784dc0466" kind="typedef"><name>pointer</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a74fbb7499f18faf1d2aaad9849b62bfb" kind="typedef"><name>const_pointer</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1af7fed2e3f51602b9444436f77e07a6d4" kind="typedef"><name>reference</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1aa2a5018f057a519d7c4eef3161addb0d" kind="typedef"><name>const_reference</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a0751964ae34305e80dcdaab0dc5fb11d" kind="typedef"><name>size_type</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a0deb57f0de6b8996336d51a8ba65ea1b" kind="typedef"><name>difference_type</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a69a7be23c86f826334ca140ce9fd9ebb" kind="function"><name>get_allocator</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1aef16a324c2daa87d42faa8f4aa93ef24" kind="function"><name>PoolAllocator</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a950ca2fe7cb24c98771d40af0a5127bf" kind="function"><name>PoolAllocator</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a318fe95fe7bcc00259248e03d4d5e945" kind="function"><name>allocate</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1ae0c0cf21cc43f5fce701c4b677ed3700" kind="function"><name>deallocate</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a8f36e035226f7995b8d17dbf1160d453" kind="function"><name>operator==</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1a30dc7b4f0332f467a8fce8f6f9a97fa5" kind="function"><name>operator!=</name></member>
    <member refid="da/ddf/classpyfolio_1_1memory_1_1PoolAllocator_1aa6f8c80e775c89f60162e13f0550fda9" kind="function"><name>get_stats</name></member>
  </compound>
  <compound refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr" kind="class"><name>pyfolio::memory::PoolPtr</name>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a4319d8395e704f271671bd928cc4ca22" kind="variable"><name>ptr_</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1af2861f740e11b4bb357eae4e6f77c965" kind="function"><name>PoolPtr</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a4d1cc9eab9de7fa11fcd14874ab99d28" kind="function"><name>~PoolPtr</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a1fdc960752134adf3516b2f954842b82" kind="function"><name>PoolPtr</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a8dd88b3a8347e4a4e2b9ddf8cd97b4c4" kind="function"><name>operator=</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1abad666a69759a8c541a5b50844e43f92" kind="function"><name>PoolPtr</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1abdc68ce49d8b8c890ee5f71ae71f0afd" kind="function"><name>operator=</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1ac8ae346f9855105f76207847b78f9b0a" kind="function"><name>get</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a4cc5e3279ab6e53955ce969593f1cbbd" kind="function"><name>operator*</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a7042a6a1d0791a549278515ee41e37c8" kind="function"><name>operator-&gt;</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a3008d2ef3de3a2a60a9954434cb4a3fe" kind="function"><name>operator bool</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a529d5bd4e9d03a84b917ec8ab1edc7c1" kind="function"><name>release</name></member>
    <member refid="d5/d9f/classpyfolio_1_1memory_1_1PoolPtr_1a1fc571c0b1d565f00c401d342bc42441" kind="function"><name>reset</name></member>
  </compound>
  <compound refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats" kind="struct"><name>pyfolio::memory::PoolStats</name>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a1a7605bc4ca140295ea793b7f8ee0f48" kind="variable"><name>total_allocated_bytes</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1ad0a07585188b87e53aab755eb2587e35" kind="variable"><name>used_bytes</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a5dfd0b66da676d53cd8fddd5c847b552" kind="variable"><name>free_bytes</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1ae98238f8775b0e919c6b4d8215d4e74e" kind="variable"><name>num_allocations</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a6a6ccdc9194e596a04a5a081ddd46fba" kind="variable"><name>num_deallocations</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a69f137bcce1d66f2627342ae67c6201c" kind="variable"><name>num_pools</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a110ba406e14dfb0957a33b1b3fb8f6ba" kind="variable"><name>largest_allocation</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a1059a26d60f94bb7296623ca71a3c257" kind="variable"><name>fragmentation_ratio</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1a162063f9d304ff29a684bc75a260e8ea" kind="function"><name>efficiency</name></member>
    <member refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats_1af8e4dca54a125eb3ec577f95dd5b050b" kind="function"><name>needs_cleanup</name></member>
  </compound>
  <compound refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult" kind="struct"><name>pyfolio::capacity::PortfolioCapacityResult</name>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aafe774082562f921d30c23d914a94cb1" kind="variable"><name>security_results</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a2f46c37a8471bee6936b396b02b2cba2" kind="variable"><name>total_portfolio_capacity</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a54cb8b43d5e9bfa608c398795c6ae3e0" kind="variable"><name>current_portfolio_size</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a750cc6109d3ed0951ad2146f3f9bc294" kind="variable"><name>capacity_utilization</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1ac591b48910113cee1fd214b9b0895d60" kind="variable"><name>total_estimated_costs</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a74f91f94495bef5ef107b05807bc2fa6" kind="variable"><name>average_trading_days</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aeb03b7c4e0abf3cf5bd0407ebcb5ba7b" kind="variable"><name>capacity_constrained_securities</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aa32bdba4b7c844f4abd501601ca799e3" kind="function"><name>get_security_result</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a5b32ae6da80540da5d8395ccab7564ca" kind="function"><name>capacity_headroom</name></member>
    <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1add190213762cc4dc650cd113fdb11a9c" kind="function"><name>is_near_capacity_limit</name></member>
  </compound>
  <compound refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure" kind="struct"><name>pyfolio::risk::PortfolioFactorExposure</name>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1ad384c24da3bbdb967b4cf40de68e11c8" kind="variable"><name>net_exposures</name></member>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1ab458020cbc4e459b36832ddf4e29ed6e" kind="variable"><name>gross_exposures</name></member>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1afba0a238f439f63bf056fd4dfb0c92b7" kind="variable"><name>active_exposures</name></member>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1a9ea6f79ffe09e3c4f2f388467ae7a78f" kind="variable"><name>exposure_concentrations</name></member>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1a9ccbba62f2c79a983cae878f0f5ed345" kind="function"><name>get_net_exposure</name></member>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1a78cee16c5fd9e842d0160d55a2847b21" kind="function"><name>get_gross_exposure</name></member>
    <member refid="de/d0a/structpyfolio_1_1risk_1_1PortfolioFactorExposure_1a22b86622b04bdc7c04819de4cde54fa4" kind="function"><name>get_active_exposure</name></member>
  </compound>
  <compound refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings" kind="class"><name>pyfolio::positions::PortfolioHoldings</name>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1afc6b25dab6ac0f593340da7fe6ff3907" kind="variable"><name>timestamp_</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1aced72b819f7022d8687d3cd7bbed4465" kind="variable"><name>holdings_</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a08c91e5877299e723171ec7c94e2a169" kind="variable"><name>cash_balance_</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ae315f0e76c6fa2965c53740b9312ddb3" kind="variable"><name>total_value_</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a39f0c0ed9969e318c65be18a5f47179e" kind="function"><name>update_total_value</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a12240fa107ef7d3996ced4e0d40f03ca" kind="function"><name>PortfolioHoldings</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ae6d65bfe733f0302cd61c10f4b5bd75f" kind="function"><name>timestamp</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a66d1c0d19b6584c4232972da8fe0a44e" kind="function"><name>cash_balance</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a024425899ff9486a38f8a209c4369924" kind="function"><name>total_value</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a315a3a6f55a4101a289ab1bf2003762a" kind="function"><name>holdings</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a0c59b8f0beeee1bb17e014379bae75aa" kind="function"><name>set_cash_balance</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a49248a12c768f69751c468d8d331b0aa" kind="function"><name>update_holding</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a0d055a35906794c27b9136229a063a65" kind="function"><name>get_holding</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1aa3f912ec1af68d7d6b1be99ed66c5cff" kind="function"><name>calculate_metrics</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a71b40b9593b45153165ee179336959fe" kind="function"><name>top_holdings</name></member>
    <member refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ab0309859ab0f7c06dd583111fc9ae8d6" kind="function"><name>to_dataframe</name></member>
  </compound>
  <compound refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics" kind="struct"><name>pyfolio::positions::PortfolioHoldings::PortfolioMetrics</name>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1aad68d0b831475f56fdbf321a927d156c" kind="variable"><name>gross_exposure</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1ae3fcc3413d9f7bf39384fa7f607977ec" kind="variable"><name>net_exposure</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1abe9567804e74b718dcd84be3b9cdd8b5" kind="variable"><name>long_exposure</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1a75e67f66624f702ca15ceb502d0c8d41" kind="variable"><name>short_exposure</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1aba6836f3b039955787a46a19da0d7902" kind="variable"><name>cash_weight</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1ae5adcaec966acfe0ee485900e53b844b" kind="variable"><name>num_positions</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1afcb274265ef457d6c2a6d44c39239303" kind="variable"><name>num_long_positions</name></member>
    <member refid="d2/d0b/structpyfolio_1_1positions_1_1PortfolioHoldings_1_1PortfolioMetrics_1af921c4e12b8ee017d450738e76a73ef9" kind="variable"><name>num_short_positions</name></member>
  </compound>
  <compound refid="d6/df6/structpyfolio_1_1Position" kind="struct"><name>pyfolio::Position</name>
    <member refid="d6/df6/structpyfolio_1_1Position_1a65c89d1989617ff5a48b7dccc42ade60" kind="variable"><name>symbol</name></member>
    <member refid="d6/df6/structpyfolio_1_1Position_1ad9d09358cc73817f7bd64e74b642285d" kind="variable"><name>shares</name></member>
    <member refid="d6/df6/structpyfolio_1_1Position_1a00af48d137fbc0bc89ef114232cf829a" kind="variable"><name>price</name></member>
    <member refid="d6/df6/structpyfolio_1_1Position_1ab77b33188ab69c1548adbdaa6496b71e" kind="variable"><name>weight</name></member>
    <member refid="d6/df6/structpyfolio_1_1Position_1aa67adcc363a83b5dae028dcfb6e0aea3" kind="variable"><name>timestamp</name></member>
    <member refid="d6/df6/structpyfolio_1_1Position_1a52e1fd704ef203bedab25b64f87aa3f8" kind="function"><name>Position</name></member>
    <member refid="d6/df6/structpyfolio_1_1Position_1ae5dff5091c5f0fb77b4cfd0cc6eabbda" kind="function"><name>Position</name></member>
  </compound>
  <compound refid="d0/dae/classpyfolio_1_1positions_1_1PositionAnalyzer" kind="class"><name>pyfolio::positions::PositionAnalyzer</name>
    <member refid="d0/dae/classpyfolio_1_1positions_1_1PositionAnalyzer_1af5a4ea0fbd055859a71de2a7b5d622b8" kind="function"><name>calculate_total_value</name></member>
    <member refid="d0/dae/classpyfolio_1_1positions_1_1PositionAnalyzer_1a1856203bcfb0cf1ea6aaab2003369056" kind="function"><name>calculate_exposures</name></member>
    <member refid="d0/dae/classpyfolio_1_1positions_1_1PositionAnalyzer_1afddd94f488fc55a46472ee6981a5f2b8" kind="function"><name>calculate_leverage</name></member>
    <member refid="d0/dae/classpyfolio_1_1positions_1_1PositionAnalyzer_1a482ffb50288fbf81895adeb28e5aeb46" kind="function"><name>get_top_positions</name></member>
    <member refid="d0/dae/classpyfolio_1_1positions_1_1PositionAnalyzer_1a68c4c5bdb9b38b5ec86322a4b9b093b6" kind="function"><name>count_holdings</name></member>
  </compound>
  <compound refid="dc/d5c/structpyfolio_1_1PriceTag" kind="struct"><name>pyfolio::PriceTag</name>
  </compound>
  <compound refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution" kind="struct"><name>pyfolio::analytics::PriorDistribution</name>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1a3cdcdc8549493ee7b600ec3431698733" kind="variable"><name>type</name></member>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1acbe53f91ced47a24c059d181ac3eeb06" kind="variable"><name>mean</name></member>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1acede57bf5f0c40f07021aa25fcb97b50" kind="variable"><name>variance</name></member>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1a0a11fb0a4bcd3ddedb20bed3acfa4ade" kind="variable"><name>degrees_of_freedom</name></member>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1a8641699e8af9f8f2c1cf59ab7a5c70dd" kind="function"><name>uniform</name></member>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1aa6427e598ec8848c1e993569667eeece" kind="function"><name>normal</name></member>
    <member refid="da/d0f/structpyfolio_1_1analytics_1_1PriorDistribution_1a4f5bd8305372649f84a01569b8876f62" kind="function"><name>student_t</name></member>
  </compound>
  <compound refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter" kind="class"><name>pyfolio::visualization::PyfolioPlotter</name>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1ae3503ac47605a016663c1d05e74a4fa4" kind="variable"><name>matplotlib_initialized_</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a0ae64f2c21b83d2611353198506940f4" kind="variable"><name>default_config_</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a1451070a9ec49ac1dfd931ba3e0524d9" kind="variable"><name>style_settings_</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1ab8ec3f2cb4a638852a31a9346aea7a5d" kind="function"><name>PyfolioPlotter</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a601cca68c08361555397f432c231b1b9" kind="function"><name>~PyfolioPlotter</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a8758ac61c4a842308792b63b9857f0f1" kind="function"><name>plot_cumulative_returns</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1ab82abf9b86f95be5a637c7885e7a94ed" kind="function"><name>plot_drawdown_underwater</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a917e3ea51acad4567732740848626bff" kind="function"><name>plot_monthly_returns_heatmap</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a31ad398d6730a3c02fb35d679ec66986" kind="function"><name>plot_annual_returns</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a8f4dbd5480c2e068870d3a07615d1eb2" kind="function"><name>plot_rolling_sharpe</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a9b2a95c219321f8b657e47a106e3493c" kind="function"><name>plot_rolling_volatility</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a5e544a07e3cbd610e476878dd06dfa74" kind="function"><name>plot_rolling_beta</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1ade2701a753a2768cbe52dea98542c260" kind="function"><name>plot_return_distribution</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a7f1fe5094fa89bf68418dd3d2f8e47df" kind="function"><name>plot_return_quantiles</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a7766b1e4efae79e3f3bf043745f8402c" kind="function"><name>plot_exposures</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a90478512cccde322c29598162f91a289" kind="function"><name>plot_holdings</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1afe69a7dcf15011cd2140426c89ae2244" kind="function"><name>plot_top_holdings</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a36379ad7618d30c35676cb6d9a1227bc" kind="function"><name>plot_turnover</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a21751ad032c2ca559d299c7815cf2f24" kind="function"><name>plot_round_trip_lifetimes</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a6e3a3bc4fab416276857f111f186ee17" kind="function"><name>create_full_tear_sheet</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a580038f0ac7ec9f51d863fcdaa8cd0a8" kind="function"><name>create_simple_tear_sheet</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a1ef302990a3836dc27bd8f67173c77c9" kind="function"><name>create_returns_tear_sheet</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a5f16eeb638ba2c2e8f0db5318e8ab881" kind="function"><name>initialize_matplotlib</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a3f9b67a86307f504272af2c0bcaa9ac4" kind="function"><name>datetime_to_numeric</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a4b8b2fae079e1768dfd8a0d4f9e88f6f" kind="function"><name>setup_plot</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a21fdfa1c6867745ea86262171d1e0a96" kind="function"><name>save_plot_if_requested</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a24e4955299c439956e4f6b8bdadb9695" kind="function"><name>calculate_monthly_returns_matrix</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a186c0b3bfb0e7ebb42946bbf67586929" kind="function"><name>calculate_drawdown_series</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a0b045c6376fc35b0f8911134a18afc5a" kind="function"><name>calculate_exposures</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a406960b94d7aee4ac445f3bdc98cb8dc" kind="function"><name>get_monthly_labels</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1afaa07f21d8fcd58c8df2b344e60b8529" kind="function"><name>create_subplot_layout</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a70384635e13fb8bea1bd6440ca017c42" kind="function"><name>add_performance_table</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1aff1270a087d8836541e243f68f7ea04b" kind="function"><name>format_axes</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1ad24f0a46e275dad0d8de90bbbf938f08" kind="function"><name>add_recession_shading</name></member>
    <member refid="d9/de0/classpyfolio_1_1visualization_1_1PyfolioPlotter_1a012ce1b34b68d8ff3316b9a57d403011" kind="function"><name>is_matplotlib_available</name></member>
  </compound>
  <compound refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart" kind="class"><name>pyfolio::visualization::interactive::RealTimeChart</name>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1ab8a832d86d03e547879d505c61c210f6" kind="variable"><name>chart_id_</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1a73c32aa0985b37d2a1bc742dbc19b004" kind="variable"><name>current_data_</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1a387459a19be9f04696227629580c803d" kind="variable"><name>layout_</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1adeb70e6c2b9e77efeea1f60ad16cb4b8" kind="function"><name>RealTimeChart</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1a361f1fda860275cf4623bcb241c6b6b3" kind="function"><name>initialize</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1a01372517129832e7ca05701afb49b20c" kind="function"><name>add_data_point</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1a0395dd6dd83ac5837dc63781adfeb0d5" kind="function"><name>update_series</name></member>
    <member refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart_1a0ef27303ccfbcb03c537565f18c240fc" kind="function"><name>generate_update_script</name></member>
  </compound>
  <compound refid="d2/d57/structpyfolio_1_1memory_1_1PoolAllocator_1_1rebind" kind="struct"><name>pyfolio::memory::PoolAllocator::rebind</name>
    <member refid="d2/d57/structpyfolio_1_1memory_1_1PoolAllocator_1_1rebind_1aefe55c3a8d01652990d2f10b74a637bb" kind="typedef"><name>other</name></member>
  </compound>
  <compound refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics" kind="struct"><name>pyfolio::analytics::RegimeCharacteristics</name>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a68d7c8457fa04323ae9eafcdceaeafab" kind="variable"><name>type</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1aa4b5f00a7d71ab55594e84eccef15807" kind="variable"><name>mean_return</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a001bb9cbf652aa442ad8ddc0b62f7922" kind="variable"><name>volatility</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a275b2e509dc42fd85061e8511b25df8e" kind="variable"><name>persistence</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a0e53373af47735bc65d93974617b8d79" kind="variable"><name>probability</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a9c7e46b8c57497e0e606c5332749ba3b" kind="variable"><name>description</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a2bc2ce2db67449b94f0204b72d25d16f" kind="function"><name>name</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1ac67ab3a9b6f4b6fbeab9ddb4b64d852c" kind="function"><name>is_favorable_for_long</name></member>
    <member refid="d1/d57/structpyfolio_1_1analytics_1_1RegimeCharacteristics_1a41e70a9cd772e4e31d8a18a46a6ba8a7" kind="function"><name>risk_level</name></member>
  </compound>
  <compound refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult" kind="struct"><name>pyfolio::analytics::RegimeDetectionResult</name>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1a1734b705db8aa6183cd6938c2ec211cf" kind="variable"><name>regime_sequence</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1ae5a51f4414bcc30ef37d3a2e8b03dd07" kind="variable"><name>dates</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1a0df6daddfa9febd7a41aecc6f8db2153" kind="variable"><name>regime_probabilities</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1adfa6549decd926dbda5c7a12969f9067" kind="variable"><name>regime_characteristics</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1aa7c5a0bba72b40154162f0a71af3f816" kind="variable"><name>transitions</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1a973b64a79a254c06402eaa329877c2cf" kind="variable"><name>current_regime</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1acc6170253131e2497a8bb27454d71d6f" kind="variable"><name>current_regime_confidence</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1a3e4e5cef48523f1f6ceb2c563bfea5ba" kind="variable"><name>current_regime_duration</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1aa6dfd8d6ee36df5dd44c90ca75e53197" kind="function"><name>get_regime_at_date</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1ac65a96bf248c3ed4dd67b47eafa1d555" kind="function"><name>get_regime_statistics</name></member>
    <member refid="d1/d87/structpyfolio_1_1analytics_1_1RegimeDetectionResult_1aa33c9391da4b0404a8badcbe6ad4d1a9" kind="function"><name>get_recent_changes</name></member>
  </compound>
  <compound refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector" kind="class"><name>pyfolio::analytics::RegimeDetector</name>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a2913cce460a23e6fa5ab1e411b8bebb6" kind="variable"><name>rng_</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a3fa567ecc51cd21b886f8ab9037bc5c3" kind="variable"><name>lookback_window_</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a627db4fc56686d4095258bff02288d0e" kind="variable"><name>volatility_threshold_</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a420b735e57276c471a6186c4beb11b48" kind="variable"><name>return_threshold_</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a901c2dbf5a4d8144cb52d89d9a848c3e" kind="function"><name>RegimeDetector</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a9c8093c0c029935fde2ed5e2a740252d" kind="function"><name>RegimeDetector</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a064970a0664b36d4aaa708d9e749d628" kind="function"><name>detect_regimes</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a1d615e210259da83d7953790e4d5c992" kind="function"><name>classify_current_regime</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1add3a9de12ef6acfc86da8248e9d519df" kind="function"><name>predict_regime_transitions</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1acab079b3feb147fdf26c7d24d5fda009" kind="function"><name>get_regime_recommendations</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a2233d9e06edde686d5b6620a2830130a" kind="function"><name>markov_switching_detection</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a4d59792f45ec60c6e1e4e13123c9a87e" kind="function"><name>hidden_markov_detection</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a774beb5ef6d09f2a32210cda918d25e7" kind="function"><name>structural_break_detection</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1ab8f25fc631e3be5209e6375a9777d9d5" kind="function"><name>volatility_regime_detection</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a6ced1836ebf8dd7b986f026eab5437b9" kind="function"><name>detect_volatility_regimes</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a833150418bb8c772e604056885b44d74" kind="function"><name>detect_trend_regimes</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a29a313c43fca099d6dbf59ec4b156dcd" kind="function"><name>detect_crisis_regimes</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a661817c0a0ed2d907dde3c2a9b40acf3" kind="function"><name>combine_regime_signals</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a44df31fe69ff70c16d69eca346dab7d8" kind="function"><name>calculate_regime_confidence</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a8e7805e159b7f77a1d5522d5e4abbd00" kind="function"><name>calculate_current_regime_duration</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a8bc68f1eef6b14325473a9e11a63a5f7" kind="function"><name>calculate_regime_characteristics</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1abcfd6be90de08136ef560e61806da081" kind="function"><name>calculate_regime_transitions</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1ac43a7a84e0e7da65352f79c42f13a870" kind="function"><name>generate_regime_description</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1afc37690150f3e3dd78af1a6e913b655e" kind="function"><name>estimate_transition_matrix</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a80b6bc6fd362008adcabf694563b6852" kind="function"><name>predict_next_regime</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a7988bd5af5bf4a8ef14dfb8d2e82c682" kind="function"><name>forward_backward_algorithm</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a8eeb92dacca4555e15a2235f633d8990" kind="function"><name>update_markov_parameters</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1ad6e12645d8d14f92d933562252f65eec" kind="function"><name>calculate_likelihood</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1ab7dc19284f35ac8e96251bff3a293904" kind="function"><name>map_regime_index_to_type</name></member>
    <member refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a164d69f3077f11790cc393403381818a" kind="function"><name>gaussian_pdf</name></member>
  </compound>
  <compound refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition" kind="struct"><name>pyfolio::analytics::RegimeTransition</name>
    <member refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition_1a23928d38f545d29cecd7981c92ce34ad" kind="variable"><name>from_regime</name></member>
    <member refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition_1a47e5b2fd358484026c39079b11baaa70" kind="variable"><name>to_regime</name></member>
    <member refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition_1a8afa13ac4b629dea8ee0adbc138fb2b0" kind="variable"><name>probability</name></member>
    <member refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition_1a34eda802b63a2b78ba1bc0925a866a3b" kind="variable"><name>expected_duration</name></member>
    <member refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition_1aa52020e8e5ae718e98dd11ee1e1c921d" kind="function"><name>is_deterioration</name></member>
    <member refid="d2/dcf/structpyfolio_1_1analytics_1_1RegimeTransition_1a2228e592d26b73266d8f3139b427f0c1" kind="function"><name>is_improvement</name></member>
  </compound>
  <compound refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer" kind="class"><name>pyfolio::web::RestApiServer</name>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1acbea03b16d8d69eaa923b6cfa94198d9" kind="variable"><name>server_</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1ac80a5ac24bd4627c7127783f9b15687c" kind="variable"><name>config_</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1aad924c56d1686b1f36275aa87101651f" kind="variable"><name>analysis_suite_</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1aee4003acf7a2efbbfbd2c70a9a00d654" kind="function"><name>setup_cors</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a9aad81380a1088e4b6f5028457240700" kind="function"><name>setup_logging</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a5739f7db5a64e6c6a87b8306518b696a" kind="function"><name>setup_error_handler</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a79595665321dff7d2e02afab6add7ed6" kind="function"><name>RestApiServer</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1ae476ef195dcb76ed671d3428e1d012d9" kind="function"><name>setup_routes</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a65e85df3ae60130213a4d2444ed8dc31" kind="function"><name>handle_performance_analysis</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1ab8b8f36af787039a4748bdc6e4c48530" kind="function"><name>handle_portfolio_analysis</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a84fbbb0329da81e8a4e9718be438dfb0" kind="function"><name>handle_transaction_analysis</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a9f68e2ebdce6df241a8530773503cd69" kind="function"><name>handle_sharpe_calculation</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a9c15c099bbd974a26e4ae9c945b839f0" kind="function"><name>handle_drawdown_calculation</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a301fdf51eddfb64d7213e0547c74b7c9" kind="function"><name>handle_volatility_calculation</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a88e05ed9ca22e2db58d2c23670f8bda4" kind="function"><name>handle_batch_analysis</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a0d5fec86fceeae0930b9a79287630505" kind="function"><name>start</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1aeb4cbc27416c10fbcdf1e47fab4104b6" kind="function"><name>stop</name></member>
    <member refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a8fd6dfbf399920bdac8e8e2e6e7315e7" kind="function"><name>is_running</name></member>
  </compound>
  <compound refid="de/dfa/classpyfolio_1_1Result" kind="class"><name>pyfolio::Result</name>
    <member refid="de/dfa/classpyfolio_1_1Result_1a756495b89dd42029dfa66d87c9a6d614" kind="variable"><name>data_</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" kind="function"><name>is_ok</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" kind="function"><name>is_error</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" kind="function"><name>has_value</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" kind="function"><name>value</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" kind="function"><name>value</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kind="function"><name>error</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" kind="function"><name>value_or</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" kind="function"><name>map</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" kind="function"><name>and_then</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" kind="function"><name>or_else</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kind="function"><name>success</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" kind="function"><name>success</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" kind="function"><name>error</name></member>
  </compound>
  <compound refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4" kind="class"><name>pyfolio::Result&lt; void &gt;</name>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a7a4a794093f41dda1ecf109460f9146d" kind="variable"><name>error_</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a756495b89dd42029dfa66d87c9a6d614" kind="variable"><name>data_</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2b7ad7fd573e128e6c798731bf017c95" kind="function"><name>Result</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a4a3f8274da2ee5cb4743a00b1e825eb8" kind="function"><name>Result</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad69387bf77776f058426bf79d550da37" kind="function"><name>Result</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1aa994010130dc48b53767c6544132d696" kind="function"><name>is_ok</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1a63f47b2146287fb0d8df5edafe2694" kind="function"><name>is_error</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1262dae69a37b0905455ed82b34074e4" kind="function"><name>has_value</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ae94364189cc4ca07a0a96991f330c7ab" kind="function"><name>error</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ac5d7fd944bd9edf7585f9d232a49a9a4" kind="function"><name>and_then</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2e98a8000a9f729b12d8e89507ee82b5" kind="function"><name>or_else</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" kind="function"><name>Result</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kind="function"><name>error</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" kind="function"><name>is_ok</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" kind="function"><name>is_error</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" kind="function"><name>has_value</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" kind="function"><name>value</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" kind="function"><name>value</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" kind="function"><name>value_or</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" kind="function"><name>map</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" kind="function"><name>and_then</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" kind="function"><name>or_else</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad0b16b02baf07c97bf78c8a58d7d0516" kind="function"><name>success</name></member>
    <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a33accfb8898874894de20f905dcd7e76" kind="function"><name>error</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kind="function"><name>success</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" kind="function"><name>success</name></member>
    <member refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" kind="function"><name>error</name></member>
  </compound>
  <compound refid="d3/d9b/structpyfolio_1_1ReturnTag" kind="struct"><name>pyfolio::ReturnTag</name>
  </compound>
  <compound refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip" kind="struct"><name>pyfolio::transactions::RoundTrip</name>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1af520c5ef295cedf9a5dc19a3b96f971b" kind="variable"><name>symbol</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1ac66c57f0f7cf242b6da1a1f6a3326abc" kind="variable"><name>open_date</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a5f1d91c388ffc4da453a698aead486b1" kind="variable"><name>close_date</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a08a200ab0da0327e4e6f84e5d0c69306" kind="variable"><name>shares</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a629a14bbd9a75fa97245856ff284f24d" kind="variable"><name>open_price</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a58c13dc929dd48aadd290c6414eaba62" kind="variable"><name>close_price</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1ada357c8fa2175a5bfd99212e8511a2c3" kind="variable"><name>commission_open</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a4296f9085cfc109794f15083ebf744f8" kind="variable"><name>commission_close</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a6da11aff0109ec8b004c20f2e5b570b7" kind="variable"><name>slippage_open</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1aaa2493769679ea229f87aea2329e037c" kind="variable"><name>slippage_close</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a574a4eed812a75bf25be26cfd50a7a4a" kind="function"><name>pnl</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1ad074c9b422885d050ca3833190b5bdc6" kind="function"><name>return_pct</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a214fcdbdbd193018d1d18329206cf72f" kind="function"><name>duration_days</name></member>
    <member refid="d7/d9d/structpyfolio_1_1transactions_1_1RoundTrip_1a6488e6f1054c792d492208f34644b46b" kind="function"><name>is_win</name></member>
  </compound>
  <compound refid="d7/d9a/classpyfolio_1_1transactions_1_1RoundTripAnalyzer" kind="class"><name>pyfolio::transactions::RoundTripAnalyzer</name>
    <member refid="d7/d9a/classpyfolio_1_1transactions_1_1RoundTripAnalyzer_1ae42c47e5bf2da8e7e8d4ec2c54263433" kind="variable"><name>open_positions_</name></member>
    <member refid="d7/d9a/classpyfolio_1_1transactions_1_1RoundTripAnalyzer_1a591bfc755af64e5c2486b2a3c6532b3a" kind="variable"><name>completed_trips_</name></member>
    <member refid="d7/d9a/classpyfolio_1_1transactions_1_1RoundTripAnalyzer_1a33e1d8cd095e11def52351aefaa3531a" kind="function"><name>process_transaction</name></member>
    <member refid="d7/d9a/classpyfolio_1_1transactions_1_1RoundTripAnalyzer_1a37bcd2764fc38e2c3c0b84b403e5f3c3" kind="function"><name>analyze</name></member>
    <member refid="d7/d9a/classpyfolio_1_1transactions_1_1RoundTripAnalyzer_1a03dffad0aa5b2f105828ecfe0f759c9b" kind="function"><name>get_open_positions</name></member>
  </compound>
  <compound refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics" kind="struct"><name>pyfolio::transactions::RoundTripStatistics</name>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a7f805788f70bda40df60ff7f630414ae" kind="variable"><name>total_trips</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1aee91eb5729911c5a62c70cb315a13a0a" kind="variable"><name>winning_trips</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a97622b9dd1508f55f38ad0989d4312af" kind="variable"><name>losing_trips</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1ab0a12473fca06586078a0317dbea8ce3" kind="variable"><name>win_rate</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1ad2f39a0f12205871bc87eabdcc7d411b" kind="variable"><name>average_pnl</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a6aaccc9ad722ec2e5061b596d7685b58" kind="variable"><name>average_return</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a5fd51af6e2a67334c7eefc1af5b3c345" kind="variable"><name>average_duration_days</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a108b9a180a808f8d4c6e70e6055aab24" kind="variable"><name>total_pnl</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a6db4a1d9397b9357f6c111a9ecdafee9" kind="variable"><name>best_trade_pnl</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1ae3ac363603ce5e312d962c4f2a7cb267" kind="variable"><name>worst_trade_pnl</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a2ef5abe46c585cbe000e59afaf7f2812" kind="variable"><name>profit_factor</name></member>
    <member refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a4c27b81823966c6d5b55fd44a02334cd" kind="function"><name>calculate</name></member>
  </compound>
  <compound refid="d6/d8e/structpyfolio_1_1positions_1_1SectorAllocation" kind="struct"><name>pyfolio::positions::SectorAllocation</name>
    <member refid="d6/d8e/structpyfolio_1_1positions_1_1SectorAllocation_1a4b78c34558021604a74e4b4230a681a4" kind="variable"><name>sector</name></member>
    <member refid="d6/d8e/structpyfolio_1_1positions_1_1SectorAllocation_1a55a597cd426df710e80f6f1ba5c80a69" kind="variable"><name>weight</name></member>
    <member refid="d6/d8e/structpyfolio_1_1positions_1_1SectorAllocation_1a2cde8b81f12161c25c3c757c62d86998" kind="variable"><name>market_value</name></member>
    <member refid="d6/d8e/structpyfolio_1_1positions_1_1SectorAllocation_1a0978697d80a4303c114b97b90349bf58" kind="variable"><name>num_positions</name></member>
    <member refid="d6/d8e/structpyfolio_1_1positions_1_1SectorAllocation_1a90e2ea9c911ff7541104fc69093ce166" kind="variable"><name>symbols</name></member>
  </compound>
  <compound refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution" kind="struct"><name>pyfolio::attribution::SectorAttribution</name>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a43b34f11cd5e42310368439b82b7cbec" kind="variable"><name>sector</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a606a6cedb46d043b756ca9597559c4b4" kind="variable"><name>portfolio_weight</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a3ff23f7ec30f31ce9d1800097993cc65" kind="variable"><name>benchmark_weight</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a34b70828f7c81195b8cbe94cfbfb3896" kind="variable"><name>portfolio_return</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a3e3a02ca2f856f3286bcaf9b8cb2650e" kind="variable"><name>benchmark_return</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a0ce78d884eca80e9bf40fb0b407494de" kind="variable"><name>allocation_effect</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1ac434f3b0290e09dccec73f1af6ba0431" kind="variable"><name>selection_effect</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1ac50e54bafe801c481c2601c856238872" kind="variable"><name>interaction_effect</name></member>
    <member refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1ad5d7458f9910c785d6cd1df8425d492e" kind="variable"><name>total_contribution</name></member>
  </compound>
  <compound refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult" kind="struct"><name>pyfolio::capacity::SecurityCapacityResult</name>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1ae8a14a64fe52370085a62aa505640e40" kind="variable"><name>symbol</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1aa057083e32ff5751ea284ec4c9de98f9" kind="variable"><name>max_position_shares</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1af687e13280acf397f40f6276f025368f" kind="variable"><name>max_position_dollars</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1a2145a89f4266bb8541491b55b28af4c7" kind="variable"><name>max_daily_trade_shares</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1a966e1e155dd9eb03509fa5caeacc5ec2" kind="variable"><name>max_daily_trade_dollars</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1ac8b314f8260631194c00bb76436691be" kind="variable"><name>estimated_impact_cost</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1ab479ef8d4422dd806e80b15e192a9712" kind="variable"><name>estimated_spread_cost</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1a859948af3e6c74ff291b4ec2dfc951aa" kind="variable"><name>total_trading_cost</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1ab252e22ddd9776712d14e3a504258ac7" kind="variable"><name>estimated_trading_days</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1a389a3702a53db9eff776beb706deb4d4" kind="variable"><name>binding_constraint</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1ac211bcf6e84b314a326e61fa57a93d22" kind="function"><name>total_cost_bps</name></member>
    <member refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult_1a6b6906458523bab238692bafd2048a7c" kind="function"><name>is_capacity_constrained</name></member>
  </compound>
  <compound refid="d0/d2f/structpyfolio_1_1risk_1_1SecurityFactorExposure" kind="struct"><name>pyfolio::risk::SecurityFactorExposure</name>
    <member refid="d0/d2f/structpyfolio_1_1risk_1_1SecurityFactorExposure_1a659408e27588aa911f693f5d9661cf33" kind="variable"><name>symbol</name></member>
    <member refid="d0/d2f/structpyfolio_1_1risk_1_1SecurityFactorExposure_1a802f8e4ea4fab208537d40e6c3ccf0af" kind="variable"><name>factor_loadings</name></member>
    <member refid="d0/d2f/structpyfolio_1_1risk_1_1SecurityFactorExposure_1af04dcc8221981f83bfce294aa513824b" kind="function"><name>get_factor_exposure</name></member>
    <member refid="d0/d2f/structpyfolio_1_1risk_1_1SecurityFactorExposure_1a5ef65a20654c689e1ffa82c45869a2ac" kind="function"><name>has_factor</name></member>
  </compound>
  <compound refid="d7/d3b/structpyfolio_1_1simd_1_1detail_1_1SIMDCapabilities" kind="struct"><name>pyfolio::simd::detail::SIMDCapabilities</name>
    <member refid="d7/d3b/structpyfolio_1_1simd_1_1detail_1_1SIMDCapabilities_1aa321bcf12bd1d3a59a83ef1df839d864" kind="variable"><name>has_avx2</name></member>
    <member refid="d7/d3b/structpyfolio_1_1simd_1_1detail_1_1SIMDCapabilities_1aaa6e43419021ceedd382cdccf5a46d13" kind="variable"><name>has_sse2</name></member>
    <member refid="d7/d3b/structpyfolio_1_1simd_1_1detail_1_1SIMDCapabilities_1ae0d7870b43f49c0406f562ed58139f0c" kind="variable"><name>has_neon</name></member>
    <member refid="d7/d3b/structpyfolio_1_1simd_1_1detail_1_1SIMDCapabilities_1a076a6be1e7eaf0603a57f258b5583205" kind="function"><name>SIMDCapabilities</name></member>
    <member refid="d7/d3b/structpyfolio_1_1simd_1_1detail_1_1SIMDCapabilities_1a1e480370fde5176afd3b4ea48bbc7cf4" kind="function"><name>get</name></member>
  </compound>
  <compound refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo" kind="struct"><name>pyfolio::Statistics::SimpleDrawdownInfo</name>
    <member refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo_1a8478e01fbbee42c6dcea037f98108b87" kind="variable"><name>max_drawdown</name></member>
    <member refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo_1ac09db7a3ff5ac1cbb7213436c4c3dc7a" kind="variable"><name>duration_days</name></member>
    <member refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo_1a61d29f1ac187e744d577b6bbda6c9387" kind="variable"><name>peak_date</name></member>
    <member refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo_1aba27036b4dbeaa61f539dcef4703a4e3" kind="variable"><name>valley_date</name></member>
  </compound>
  <compound refid="db/d6c/classpyfolio_1_1transactions_1_1SquareRootImpactModel" kind="class"><name>pyfolio::transactions::SquareRootImpactModel</name>
    <member refid="db/d6c/classpyfolio_1_1transactions_1_1SquareRootImpactModel_1acb2853c623c79b2d3686cf74920efe3f" kind="variable"><name>temporary_impact_coefficient_</name></member>
    <member refid="db/d6c/classpyfolio_1_1transactions_1_1SquareRootImpactModel_1a735d0b4184028d8d7ea27f49ea6336c3" kind="variable"><name>permanent_impact_coefficient_</name></member>
    <member refid="db/d6c/classpyfolio_1_1transactions_1_1SquareRootImpactModel_1a6f0d6ce48920e3473d508438b03d2ac9" kind="function"><name>SquareRootImpactModel</name></member>
    <member refid="db/d6c/classpyfolio_1_1transactions_1_1SquareRootImpactModel_1afcefffea14605e3d1798648ad29cecd9" kind="function"><name>calculate_impact</name></member>
  </compound>
  <compound refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary" kind="struct"><name>pyfolio::analytics::statistics::StatisticalSummary</name>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a87379a8c3c1da5f160dda7bb01b65c37" kind="variable"><name>mean</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a68f8fd7448c4fc00a33f2cf6ad9cae85" kind="variable"><name>median</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1ac7d14cbc905a968a84cfad71465b5d20" kind="variable"><name>std_dev</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a3c3aefbef971393744f6d2e9061f80ba" kind="variable"><name>variance</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a9f423b88da0f32202f9394a9a2b94386" kind="variable"><name>skewness</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a6c8ba30e75b0bad9c7af2696fe891dd1" kind="variable"><name>kurtosis</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1aac90dfbe9ab39c7dab6be80d7bdcf793" kind="variable"><name>min_value</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a1883c524bd3fbeee01b0c3492237234f" kind="variable"><name>max_value</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a306d451f016550d4b46c2a223ce6b405" kind="variable"><name>q25</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a652bff760f4b828847ff897ac5adb646" kind="variable"><name>q75</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1afab7ebad63b2eef66800a4a9cdf6ae54" kind="variable"><name>count</name></member>
    <member refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary_1a4b937cbd0dbbfa26d44e76c2b7db5854" kind="variable"><name>missing_count</name></member>
  </compound>
  <compound refid="da/d0a/classpyfolio_1_1Statistics" kind="class"><name>pyfolio::Statistics</name>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a9c6b1c2cee5eb1b6d0dd8298557b5f22" kind="function"><name>calculate_basic_stats</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1add05d2ec066eecbb3feb17b3ecab1fe8" kind="function"><name>sharpe_ratio</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1ae3abd35508b1c2c76a918a8d58338e41" kind="function"><name>sortino_ratio</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1ad65c7ac81b945bde674200d8ca6b389b" kind="function"><name>calmar_ratio</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" kind="function"><name>max_drawdown</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1ac3ca6d5a593f245b088abe5097c2466d" kind="function"><name>volatility</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1af281becf792a699a5d4fff96339b89e3" kind="function"><name>downside_deviation</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1af30bc2537515dd9bf004768149ace4a4" kind="function"><name>alpha_beta</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a0fd32c54eb1fea5a675633d5f85b7fc0" kind="function"><name>information_ratio</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a2e0bb5b9b5052088b4ec146150811489" kind="function"><name>tracking_error</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1ad472ba19872dc8bba0dbe864dc65d0f9" kind="function"><name>skewness</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a2984e04c4fd9c5c0686ebc586e8499b5" kind="function"><name>kurtosis</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a9ede57ac57b34082eaf024beabbc5304" kind="function"><name>value_at_risk_historical</name></member>
    <member refid="da/d0a/classpyfolio_1_1Statistics_1a9aa2d1314ebd348e3cabf7c294d4b6a3" kind="function"><name>conditional_value_at_risk</name></member>
  </compound>
  <compound refid="d3/dbb/structpyfolio_1_1risk_1_1StressTestScenario" kind="struct"><name>pyfolio::risk::StressTestScenario</name>
    <member refid="d3/dbb/structpyfolio_1_1risk_1_1StressTestScenario_1ae74619f5772f9ca1fcbb8b82ac795e2b" kind="variable"><name>name</name></member>
    <member refid="d3/dbb/structpyfolio_1_1risk_1_1StressTestScenario_1a394080a4b8ed7f08b265d6086700b3f6" kind="variable"><name>shock_factors</name></member>
    <member refid="d3/dbb/structpyfolio_1_1risk_1_1StressTestScenario_1a801de7716d060f8c607b21aadc471d35" kind="variable"><name>market_shocks</name></member>
    <member refid="d3/dbb/structpyfolio_1_1risk_1_1StressTestScenario_1a83aa51748230e0ee9e5f1c8aa7285fc7" kind="variable"><name>probability</name></member>
    <member refid="d3/dbb/structpyfolio_1_1risk_1_1StressTestScenario_1a984bc598c5167125a2eaecb5bb1e066c" kind="function"><name>apply_to_returns</name></member>
  </compound>
  <compound refid="d8/dde/classpyfolio_1_1StrongType" kind="class"><name>pyfolio::StrongType</name>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a6a3647b95e80cb81325b2012f62952f3" kind="variable"><name>value_</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a5e6f6ff8282dd4881ffcf6b663401023" kind="function"><name>StrongType</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a13b4468bf589be9590d0721d3885e822" kind="function"><name>StrongType</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a18e86407a346699ea115f79f0f07da08" kind="function"><name>get</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a2dd5dbb50f0a1b70b13c0b29b16cbc01" kind="function"><name>get</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1aea65949ebee4df7c4acd4cbedbf604ec" kind="function"><name>operator const T &amp;</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a5ed1e49ea9ed1e48e8287295b83efb17" kind="function"><name>operator+</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a56a0df93034f8387c69d9c4f0aa60e08" kind="function"><name>operator-</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a4ed95b9c5e9d13f8c273a5a62ca8dc05" kind="function"><name>operator*</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a7d73e2d68c89e256b95378442ea9329d" kind="function"><name>operator/</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a85cf0c83cac52719fcf9440198d13873" kind="function"><name>operator==</name></member>
    <member refid="d8/dde/classpyfolio_1_1StrongType_1a835913bc2c08b782e3b2f582a7bb46f3" kind="function"><name>operator&lt;=&gt;</name></member>
  </compound>
  <compound refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats" kind="struct"><name>pyfolio::analytics::PerformanceAnalysisSuite::SuitePerformanceStats</name>
    <member refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1a4864fa9c1cdf09108598ec550e4050c1" kind="variable"><name>total_analyses</name></member>
    <member refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1aeb22270fdae600234dbccf475458d3b9" kind="variable"><name>total_computation_time</name></member>
    <member refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ac4d4696eccc24118f24ee42143ba536e" kind="variable"><name>average_analysis_time_ms</name></member>
    <member refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ab87f7519a323a15ef47be8eb8f674d29" kind="variable"><name>cache_stats</name></member>
    <member refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ae5893cd860ff5b33697c3c4daa058e8e" kind="variable"><name>last_analysis_time</name></member>
  </compound>
  <compound refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kind="struct"><name>pyfolio::reporting::TearSheetConfig</name>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a51b2f3b26bc39e3ed52237948142c7e6" kind="variable"><name>show_plots</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a895394099f268e428a39e8ae8e2be802" kind="variable"><name>save_plots</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5a53d80ecbf30fce8a35da55afbcb338" kind="variable"><name>output_directory</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a2ebf5cc342300c59893ced3dfe5b8962" kind="variable"><name>output_format</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a9b292e20966ec5ba05cc066ea8e50e7b" kind="variable"><name>figure_dpi</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1adcd648e0bcda9ab74265124382baa8e0" kind="variable"><name>verbose</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ae6b30d7795d62d570d2d096f339c5392" kind="variable"><name>periods_per_year</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1abcf428add5d7da5ea05bcbf6e61333b2" kind="variable"><name>risk_free_rate</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a9ebff0223aad5ed5c2a073f80b2249e7" kind="variable"><name>cone_std</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5e595df60f5ca39ab10957f12a6d9721" kind="variable"><name>bootstrap</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5c68e5168c40f762c13b2a5bb1ae864b" kind="variable"><name>bootstrap_samples</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1add8d4ba42a36897c089424be090a0129" kind="variable"><name>var_confidence_level</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a216b745c2d757b99a03118a05202413d" kind="variable"><name>hide_positions</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ab18485d1eed78069b9f4cf54877abd6f" kind="variable"><name>positions_in_dollars</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ac75c445a6796f61b0044018f89af5f56" kind="variable"><name>include_transaction_costs</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a71cc0e6547f9b8c7fdcd24cf9ae1926b" kind="variable"><name>default_slippage_bps</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1aa3175462d6934b551beca0da5ba6db5c" kind="variable"><name>analyze_round_trips</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ab8ac8869461b58ba54861a623d3984d6" kind="variable"><name>include_bayesian</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a7234753188000afa0b25859fac4840bb" kind="variable"><name>mcmc_samples</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ad5cd4e8720627e094167f49df6c358e0" kind="variable"><name>include_factor_analysis</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ad6ff94b4661bb487be58a2e79cc0b00d" kind="variable"><name>include_capacity_analysis</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a7013ec22d29e0dcf5c958bf924806cad" kind="variable"><name>live_start_date</name></member>
    <member refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1adfcefa25da0e45f4bc6acdd307483b8a" kind="variable"><name>compare_to_benchmark</name></member>
  </compound>
  <compound refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig" kind="struct"><name>pyfolio::visualization::TearSheetConfig</name>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a5b1290e87514d623414d21ed15dccda9" kind="variable"><name>include_benchmark</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a070fc3702bed498ca0ea63d56d69cd5b" kind="variable"><name>include_drawdown</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1ae25a8d05a71cdd79483a09a2a13e1d2e" kind="variable"><name>include_rolling_metrics</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a4be43ae8dadb36adfcc1b7199fe62249" kind="variable"><name>include_monthly_heatmap</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a687ef1cbf9248aaa4c0ded21cf4f12b3" kind="variable"><name>include_return_distribution</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a1e781e537409ba9404af1efe8b29ebc2" kind="variable"><name>include_top_holdings</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1ab3318e7ac3cd2153ce618ef10af3f7b1" kind="variable"><name>include_turnover</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a3075efe0470613fe6d5d8ad3c2758c64" kind="variable"><name>figsize</name></member>
    <member refid="dd/dd8/structpyfolio_1_1visualization_1_1TearSheetConfig_1a930a38846dd87fcdf539301c4c562ee2" kind="variable"><name>save_path</name></member>
  </compound>
  <compound refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult" kind="struct"><name>pyfolio::reporting::TearSheetResult</name>
    <member refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kind="variable"><name>performance</name></member>
    <member refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a9c495cc337c46c9efb212e1bf0e1b704" kind="variable"><name>plot_paths</name></member>
    <member refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1ab3e97983ed855e5f43acb836767fc9f2" kind="variable"><name>html_report_path</name></member>
    <member refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a084ad97e24846cf5adfa062327eecad1" kind="variable"><name>warnings</name></member>
    <member refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1abb40d595e5a0b5f5642be16690015c1c" kind="variable"><name>generation_time_seconds</name></member>
  </compound>
  <compound refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool" kind="class"><name>pyfolio::parallel::ThreadPool</name>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a4e9eac9ef025e70f625cf59b61f607dc" kind="variable"><name>workers_</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a8f9c49bd306780136b650dfdb0b1d510" kind="variable"><name>tasks_</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a2b5acc86a4fb5af646bf241f5de00c76" kind="variable"><name>queue_mutex_</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1ad888544b3e91be2f73f8fb36c462635b" kind="variable"><name>condition_</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a85b7da3ba713b23a09b5ecc4a4966d2c" kind="variable"><name>stop_</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a39fea9bf1590121f85ddaafc9cdfc737" kind="function"><name>ThreadPool</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a0310625347ae8ef53d0c8d8dc0fd7c8f" kind="function"><name>~ThreadPool</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a4ed37b156779dce55274acc0423a8fd3" kind="function"><name>enqueue</name></member>
    <member refid="de/d76/classpyfolio_1_1parallel_1_1ThreadPool_1a01387c28e35cdb1b189340dfe0add663" kind="function"><name>size</name></member>
  </compound>
  <compound refid="d7/ddc/classpyfolio_1_1TimeSeries" kind="class"><name>pyfolio::TimeSeries</name>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a9d9cdb98e0f041880fa5f76c64fc0116" kind="typedef"><name>value_type</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ad0095a701f16fea4226b12cb4db01b48" kind="typedef"><name>size_type</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aded88af78b3a73f0a49ba1282d43bb69" kind="typedef"><name>iterator</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a75370c5ba8ebf59087e51110a045c62b" kind="typedef"><name>const_iterator</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1afebd97b1f576d8dab24a3b9d97173003" kind="variable"><name>timestamps_</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a35bdbada179a223c590ee0c68fd1ae13" kind="variable"><name>values_</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ac6444a8cdfb457bbb0f55242b4dd2a70" kind="variable"><name>name_</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1af9884590f69dd612b4a5adc7bb3df918" kind="function"><name>validate_consistency</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a131f541a7974a35820a7fe0043d87c2f" kind="function"><name>validate_and_throw</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a57f5bc381c234dc66040c8095c8ebf9b" kind="function"><name>is_sorted_by_time</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a557977be9b5e83fa77d44b1739d057be" kind="function"><name>sort_by_time_small</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a25a23789c7960328dea67749f0b16e8d" kind="function"><name>sort_by_time_optimized</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a45d308352c0946c231ac724f5cc68142" kind="function"><name>get_period_start</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aa194feddd304eb863bfcb6f445769968" kind="function"><name>TimeSeries</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab115af26ed8e54a93dd75a476d95ff99" kind="function"><name>TimeSeries</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab47f50836d650a1f8c1f27ee517ae44e" kind="function"><name>TimeSeries</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1abb6f89aeb066415be4db3d1af1fdede6" kind="function"><name>TimeSeries</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" kind="function"><name>size</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a7401475da2acefda00385214b27e7c59" kind="function"><name>empty</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0299648a8469a9a82dfa15f9f035a704" kind="function"><name>reserve</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab474b0dcb39ddecd2f399fe527b27a27" kind="function"><name>operator[]</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a9c7be369ce119442e4cbed8ab29eedd9" kind="function"><name>operator[]</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a6c04137ff6f6c3447bb29eac26ecebdf" kind="function"><name>at</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab16213192b396ac9ff616393b3842fe5" kind="function"><name>at</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1af71d2714bd7245ee0f6f272d2019ec3e" kind="function"><name>front</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aaa58702b82df2d7ede504e7d97f66f7a" kind="function"><name>front</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a4e8f9787b69fe091f49359f84b7696c5" kind="function"><name>back</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a8c44d7d3a10364910d34b32453c1e73a" kind="function"><name>back</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a119004323be19c9490f882830f2e8de5" kind="function"><name>timestamp</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0374bbc62bd808749ac476b3af4b0ead" kind="function"><name>timestamps</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" kind="function"><name>values</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a3828248027c39f8e340c86ad847d9ea9" kind="function"><name>begin</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aec28afca44df95cc6d38e13f106b66e0" kind="function"><name>begin</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a092c340c53684c40636f142c14817cbd" kind="function"><name>cbegin</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a39fb49cf0a9c6742658b503c1f8e04e2" kind="function"><name>end</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1accc09eb2e5ac90c575e206eac1bb78a6" kind="function"><name>end</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a9e4e60cfa0a78036c05f92214dd7a955" kind="function"><name>cend</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a14dc0c14e60203348e7a7a474f086a49" kind="function"><name>name</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a429262cd96d2ba45e96bfb6302cb581e" kind="function"><name>set_name</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a165f6a4758d61017bdcfb78f2457ba24" kind="function"><name>push_back</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a2633632ebe894962ce2863adbf2a7b55" kind="function"><name>emplace_back</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aa0d2f984a31a4e1aa0c38955db2b3930" kind="function"><name>try_push_back</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a7d98d0027ba1c14dbcbcfe4428aa8024" kind="function"><name>bulk_insert</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a9e70bc9e7a6bf7393663c7b66ceff037" kind="function"><name>clear</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a6aef72caa37febb0f72b802ef26d15dd" kind="function"><name>sort_by_time</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a39a12989a144ef0b2ec705cb76d82713" kind="function"><name>at_time</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad1f951db77554e95f2e71d7f9e405fe" kind="function"><name>slice</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aa11c11bab5196315aebc59e03ff7ae24" kind="function"><name>resample</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aa62c243abee449a12d03b6039807bc5d" kind="function"><name>resample</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a4d4c9d331becbed701eacccc2b29ae15" kind="function"><name>rolling</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a1fb9b999f09567e14ffdb202f4047b6a" kind="function"><name>shift</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a434b80c0be5078bf91933e48b3fd48c3" kind="function"><name>pct_change</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aabcf1a46e463e3a482632eacb0265394" kind="function"><name>cumsum</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a16547ab9cbc2a80fb6ca5e8436688c0d" kind="function"><name>cumprod</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1af0769c2f121e004e306b237bc78d6806" kind="function"><name>dropna</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a648fe3ce52eabb6702e221e0e57f490a" kind="function"><name>fillna</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a6a1add6f9d8fea40487d684d6566addc" kind="function"><name>at</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a09b5e0db91c49c4ef4b768f34e838a6e" kind="function"><name>rolling_mean</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aa7bb9fb26a605ffa13f550d8597c968d" kind="function"><name>rolling_std</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a90865bd0cd710c92dfb90263d348a012" kind="function"><name>rolling_min</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ac2b9a1c0db8437da1ec1417c01e06919" kind="function"><name>rolling_max</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad798a4da69bff9c8bb9d335eaba6ec6" kind="function"><name>mean</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82439ade72c213e3ffd477dd6a2058e5" kind="function"><name>std</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a74758165855945e1aca6706f6758c691" kind="function"><name>returns</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a5cae2e774b3eeab9c87e2e2a44ee532a" kind="function"><name>cumulative_returns</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1acc8af9272d26204d07b3e050ec3872d2" kind="function"><name>initialize</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a8bcf83a00202a1aa143a985b51c93d90" kind="function"><name>align</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a946c290d6f1a27558b1f7a4da4a6cf5c" kind="function"><name>fill_missing</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a825f0e34f5a5da409278b5bed99f52c1" kind="function"><name>operator+</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0045682c4ad12712fdb45eff3f707928" kind="function"><name>operator-</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab9d28c69b57f3f05b5c70416989e727f" kind="function"><name>operator*</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1acb95f2faa1e3cfe36d2d6ead77b82873" kind="function"><name>operator*</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1ace0a88e334558363898722abd949922b" kind="function"><name>dot</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a41ce57e7df0fc468024c1fb40b2c773a" kind="function"><name>correlation</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a729141cccb1544762ac2069d734929d0" kind="function"><name>create</name></member>
    <member refid="d7/ddc/classpyfolio_1_1TimeSeries_1a26c5167a43a7d850969f2ddf6c2745b0" kind="function"><name>create</name></member>
  </compound>
  <compound refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer" kind="class"><name>pyfolio::transactions::TradingCostAnalyzer</name>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1afe3b6dea748615e2b657006d3bea4e34" kind="variable"><name>impact_model_</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1afa122b3bb5c835daf48f3d46b0eac789" kind="variable"><name>commission_rate_</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a373dc9e5e03dd79e83432c2aceb2187a" kind="variable"><name>default_spread_</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a5276bf07253a115f25660817a383ba1a" kind="function"><name>TradingCostAnalyzer</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a454a305e75cc2d0555e8e27a1ab216d6" kind="function"><name>analyze_costs</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a01685999c930baff8b7925a2a42b752a" kind="function"><name>calculate_implementation_shortfall</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a4d13d4b5eb0f58d8a8bb4de796cc4200" kind="function"><name>calculate_effective_spread</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a59a3674c586b6114719f5b426ca46a21" kind="function"><name>cost_breakdown_by_period</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1ab1eabb16efcab66bc24ea2fc4834093f" kind="function"><name>estimate_optimal_trade_size</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1aee7993747304867128e0abe9ffbdb1b2" kind="function"><name>estimate_market_impact</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a3f08161a9dc59c5a6eb8f8a8f76672a9" kind="function"><name>estimate_volatility</name></member>
    <member refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a104f3da7e8c708eed6cce6519b71b36a" kind="function"><name>get_period_start</name></member>
  </compound>
  <compound refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown" kind="struct"><name>pyfolio::transactions::TradingCostBreakdown</name>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1a418daeb5d9dcc57e6b72c0decaaedc41" kind="variable"><name>commission</name></member>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1a0c48a11b74d179221be5c6532b804e0e" kind="variable"><name>slippage</name></member>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1addd1d9e9f181034b2d0b3e016365b9c2" kind="variable"><name>market_impact</name></member>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1a2d6551215de6032afb965c5a0160b369" kind="variable"><name>opportunity_cost</name></member>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1a0b6285ee4c8b0369e1fd6d44840a5aad" kind="variable"><name>total_cost</name></member>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1ad5d17416a4e8ecb4d0c3743dc169f4a2" kind="function"><name>TradingCostBreakdown</name></member>
    <member refid="df/d98/structpyfolio_1_1transactions_1_1TradingCostBreakdown_1a4e9925961246976df62984da4749cd1e" kind="function"><name>calculate_total</name></member>
  </compound>
  <compound refid="d5/d11/structpyfolio_1_1Transaction" kind="struct"><name>pyfolio::Transaction</name>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1a442fd0fce2fd2abb5c0534a39243f3f2" kind="variable"><name>symbol</name></member>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1a6d588dfc84908e293004bab0afca46ff" kind="variable"><name>shares</name></member>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1a7764e932f900f56ca558b181c9bc1cbf" kind="variable"><name>price</name></member>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1a93ffd5908ac831f42cf3e1196d96a377" kind="variable"><name>timestamp</name></member>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1aeb2a027b02e00bd8ed44767fd81d9dc7" kind="variable"><name>currency</name></member>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1adee32ed06ae858b4d50e48b6471b3a8d" kind="variable"><name>commission</name></member>
    <member refid="d5/d11/structpyfolio_1_1Transaction_1abc2ac8f9a1ebfd077b91873d65131e4a" kind="variable"><name>side</name></member>
  </compound>
  <compound refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kind="class"><name>pyfolio::transactions::TransactionRecord</name>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a960e6c0afec2bc053baf270a92e85120" kind="variable"><name>symbol_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ad5e31d641cea14af6217687ea42dc222" kind="variable"><name>shares_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeffd6026153766857b921f1e135c2f6b" kind="variable"><name>price_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a0ac61093b2c9cfa52f168e5ae416d4e8" kind="variable"><name>timestamp_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ab2b17f39d412470358498a6035bfde7d" kind="variable"><name>currency_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aec0df1882fd093136740cc929ca32d34" kind="variable"><name>commission_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7a38955bc2c8dab90769bbd8e79a8439" kind="variable"><name>slippage_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a48c7171d3209364188cc189f5d664415" kind="variable"><name>exchange_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8ec3d14d1a4561c5af1dbc08401eec9b" kind="variable"><name>order_id_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a4f0707c6f3f7a31fc43129118310242e" kind="variable"><name>type_</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a24807d5be1ef4afafe5c1398c4a6124c" kind="function"><name>TransactionRecord</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a37426455c247fb3ca0b39ef80d38b7f4" kind="function"><name>TransactionRecord</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kind="function"><name>symbol</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kind="function"><name>shares</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kind="function"><name>price</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kind="function"><name>timestamp</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeb961e2ac802dc5d6163a7119e26f6b3" kind="function"><name>date</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kind="function"><name>currency</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a4aad9d278d99a6ea902df97607a37e92" kind="function"><name>commission</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a0e638d5d35ac200e4c4c6dca89d87d09" kind="function"><name>slippage</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a66cd86a887732ad4edeab23b4a84d6b9" kind="function"><name>exchange</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ae04f14d17f1c8788910820d8f1394cc5" kind="function"><name>order_id</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kind="function"><name>type</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ab333853e90bed6b19085716a30e14890" kind="function"><name>notional_value</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1abff8f45c13a638ca8ffd31bb0c0daf96" kind="function"><name>set_exchange</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a889c2adb037688ff9c7926f88c638150" kind="function"><name>set_order_id</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeed8a515d5b9e104f00010c1c818d41a" kind="function"><name>value</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a00a9205c8733a32c7627e23e8000f32b" kind="function"><name>net_cash_flow</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3c2ebe027cd58a1ef333bf4b49e450e6" kind="function"><name>total_cost</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3df396e26103be078c6a0b7930b120bf" kind="function"><name>is_buy</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a284d0c12f4b1f7d8bc89d049b42789e6" kind="function"><name>is_sell</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" kind="function"><name>validate</name></member>
    <member refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a709624b3190081f3a358fc6aac367757" kind="function"><name>create</name></member>
  </compound>
  <compound refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kind="class"><name>pyfolio::transactions::TransactionSeries</name>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" kind="typedef"><name>iterator</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" kind="typedef"><name>const_iterator</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a11620f055375cd3384431ac923c90891" kind="variable"><name>transactions_</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2764e4857132a7e4d68f23774319254c" kind="function"><name>sort_by_timestamp</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" kind="function"><name>TransactionSeries</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a634c4e1cd3f544e76506eb93b727c159" kind="function"><name>TransactionSeries</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2e055702744625143626e1c3bb60ddb1" kind="function"><name>TransactionSeries</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" kind="function"><name>size</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kind="function"><name>empty</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac6b2dff2b7e435b8bbe8cfc922499cbe" kind="function"><name>operator[]</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af8f76dbec2f1d5e4d8dc4eb3b077efd1" kind="function"><name>operator[]</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1fdd056e5bb444f999e769d8c34c8347" kind="function"><name>front</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ad19e978acf19a75a03cb0a244863d718" kind="function"><name>back</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1c7fed62cfc06ad403726bc4238ec70c" kind="function"><name>begin</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af522fa60fea545128a704157c2c2c9b3" kind="function"><name>begin</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" kind="function"><name>end</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a968060d822c816dfca8a17a1858a268b" kind="function"><name>end</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kind="function"><name>add_transaction</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" kind="function"><name>filter_by_symbol</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" kind="function"><name>filter_by_date_range</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" kind="function"><name>get_symbols</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8ed92f3472d3597805939fae6af33b79" kind="function"><name>total_value</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af3c9618e9b0d73c0e47a2b0cdf2f68f9" kind="function"><name>total_commissions</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5f7a2e489f84ec338f391ebed7267335" kind="function"><name>total_slippage</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" kind="function"><name>net_shares</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" kind="function"><name>group_by_symbol</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" kind="function"><name>daily_summary</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae01ac1b99dd7d89c0eaefbe22f04b1f2" kind="function"><name>aggregate_daily</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a51f62a2444cfc74dbe0a9828c1ca84da" kind="function"><name>aggregate_by_symbol</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" kind="function"><name>total_notional_value</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" kind="function"><name>net_shares_by_symbol</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" kind="function"><name>average_transaction_size</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" kind="function"><name>calculate_statistics</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" kind="function"><name>calculate_transaction_costs</name></member>
    <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" kind="function"><name>to_dataframe</name></member>
  </compound>
  <compound refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" kind="struct"><name>pyfolio::transactions::TransactionSeries::TransactionStatistics</name>
    <member refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1aee7ec900b42f7fc5381717b00b4fcc78" kind="variable"><name>total_transactions</name></member>
    <member refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1aab840b564d021caf63455ce21e9428af" kind="variable"><name>total_notional_value</name></member>
    <member refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1a786ceec96f2e3c3fe51d9fe99d240c08" kind="variable"><name>average_transaction_size</name></member>
    <member refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1adb0d232c977d2983a1536b21f220084b" kind="variable"><name>unique_symbols</name></member>
    <member refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1a94944979995966fa4d9287c4c92b933e" kind="variable"><name>trading_days</name></member>
  </compound>
  <compound refid="dd/dee/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverEfficiency" kind="struct"><name>pyfolio::analytics::turnover_utils::TurnoverEfficiency</name>
    <member refid="dd/dee/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverEfficiency_1a594f4b2ac5b01cbefdda91239d9b43e2" kind="variable"><name>information_ratio_per_turnover</name></member>
    <member refid="dd/dee/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverEfficiency_1a8d79891f9d98f24889af9a690f2ce81a" kind="variable"><name>sharpe_ratio_per_turnover</name></member>
    <member refid="dd/dee/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverEfficiency_1a56a35bcf54a82faa76d1afb7422031f3" kind="variable"><name>return_per_turnover</name></member>
    <member refid="dd/dee/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverEfficiency_1a4bb70c2ae8d273a3d6272addcae6e8aa" kind="variable"><name>alpha_per_turnover</name></member>
  </compound>
  <compound refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult" kind="struct"><name>pyfolio::analytics::TurnoverResult</name>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1a5e567df92813531a217787264f62487b" kind="variable"><name>daily_turnover</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1afd3ab3b427381310ede80fda655faade" kind="variable"><name>average_turnover</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1aa2dad5c059899778291e2cae5ae996f7" kind="variable"><name>annualized_turnover</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1aede12f1971ad10ccaf3f5422f818acc1" kind="variable"><name>rolling_agb</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1af45437adfadc7f06e5e52c246bca992b" kind="variable"><name>position_changes</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1a4145306e89edcd2db62fb86de4fb58ee" kind="variable"><name>dates</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1a8262f2990a474c3273f6848ef7fc1db1" kind="variable"><name>denominator_used</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1a671e6168f8decc62c70ab8ef02661474" kind="variable"><name>turnover_volatility</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1ae6412950ae4a8da06af57f1ff9cff823" kind="variable"><name>max_daily_turnover</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1a1da8072e5f8651d42a1f4cd02fcfd121" kind="variable"><name>min_daily_turnover</name></member>
    <member refid="d0/d81/structpyfolio_1_1analytics_1_1TurnoverResult_1ab2f1030d0596a68754edaebce8220d15" kind="variable"><name>monthly_turnover</name></member>
  </compound>
  <compound refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics" kind="struct"><name>pyfolio::analytics::turnover_utils::TurnoverStatistics</name>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1af612cc6e57fdfa22edf0651bf914e1f1" kind="variable"><name>mean</name></member>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1a0a8ecdc981bfb50193ef60ad2d3d47a7" kind="variable"><name>median</name></member>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1a5c490218943e3925819fdd32560dde26" kind="variable"><name>std_dev</name></member>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1a5b1f417dbdc16cae561bd322b057f954" kind="variable"><name>skewness</name></member>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1ad17d0a87642c72183316e8968176458f" kind="variable"><name>kurtosis</name></member>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1aa1bf7b2140b631f1af92f3191ee3b740" kind="variable"><name>percentile_95</name></member>
    <member refid="d3/d70/structpyfolio_1_1analytics_1_1turnover__utils_1_1TurnoverStatistics_1a0ac59fea400792d61cb4a1d39e9a7e99" kind="variable"><name>percentile_99</name></member>
  </compound>
  <compound refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator" kind="class"><name>pyfolio::risk::VaRCalculator</name>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a642316a35f675279d1fbeb2a714b1bfe" kind="variable"><name>rng_</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1aead18711633ad81349274d45c0be810b" kind="function"><name>VaRCalculator</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a2d80d770ea186618cba27ffbf4bef62c" kind="function"><name>VaRCalculator</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a5355f08aadc5dc96a9bc0443d70eb93b" kind="function"><name>calculate_historical_var</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a1c475db5eee0c7ae9a7472688f7bb8fc" kind="function"><name>calculate_parametric_var</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1ac3157a75ae2536e6e77a7561917be03e" kind="function"><name>calculate_cornish_fisher_var</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a297d2eb32efafc48a09197a2cd0dd2ab" kind="function"><name>calculate_monte_carlo_var</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a5b07dc41d33ed83488dff2bcc50dd777" kind="function"><name>calculate_marginal_var</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a30b7bf0d874752888e5c079b53296f18" kind="function"><name>stress_test</name></member>
    <member refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a6dac60a0d57a0c834f06a74bea8bbffc" kind="function"><name>create_portfolio_return_series</name></member>
  </compound>
  <compound refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kind="class"><name>pyfolio::memory::VariablePoolAllocator</name>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a006654a4a2a03ef57af124dd52af7ca5" kind="variable"><name>default_pool_size</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a6ca49de11305ad54c9e6b990d039108b" kind="variable"><name>max_allocation_size</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a047cd4392acbe0494d90b3ee860952d4" kind="variable"><name>alignment</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a1eaf7e8eda84e3dd3ba1d2e7f53c746a" kind="variable"><name>pools_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a307640f9e439cd87c96413ec3c9f49d0" kind="variable"><name>pool_size_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a58d6fbc3b19c751fdf8196f00440482d" kind="variable"><name>total_allocated_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a207ddf8a974a9c6f42a06366c1fd562e" kind="variable"><name>total_used_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a5f7f9522de44b8f5d77250d8ae8bc474" kind="variable"><name>num_allocations_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ad54df937435b5c516f0bc927e58f320f" kind="variable"><name>num_deallocations_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0e729393405ee9f563d911882d5ebd16" kind="variable"><name>mutex_</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" kind="function"><name>VariablePoolAllocator</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a83fcc990082e0e9c073255fa1b775794" kind="function"><name>~VariablePoolAllocator</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0738402bef4c4b84fc8c3eb836483ab0" kind="function"><name>VariablePoolAllocator</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a2924d89d89693e11673c38f7be80b8aa" kind="function"><name>operator=</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ac1baed95d0a8c8bd9148c544850c8651" kind="function"><name>VariablePoolAllocator</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a88db0fe3917b638a46e1c7593fadaf7f" kind="function"><name>operator=</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1adec783ebd0bdd6832bc75687acfd5d61" kind="function"><name>allocate</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a9d037847668bd5f0fe2c8ffa0d558107" kind="function"><name>deallocate</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a7dd3fd22b0e7c29c5d99268a0cfc8714" kind="function"><name>get_stats</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ad02a51fcb35878b75c3c2309a752e859" kind="function"><name>defragment</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a52af7d3e1660a633e00c2181ca024893" kind="function"><name>add_pool</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a9ae80d7b322774fce451d6fa28a96e29" kind="function"><name>allocate_from_pool</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1af71cab5efafec041b983fdb48d449787" kind="function"><name>deallocate_from_pool</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a4ef9dab0cfef75cdbe8a19e487ad8887" kind="function"><name>owns_pointer</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ab700cba4a68deefb13a59e3fa006e162" kind="function"><name>coalesce_free_blocks</name></member>
    <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1aa85bf5ccd3562ce9918014e09c75fd88" kind="function"><name>align_size</name></member>
  </compound>
  <compound refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult" kind="struct"><name>pyfolio::risk::VaRResult</name>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1afbe9f3ac7570139975bfd46c3e08dd1e" kind="variable"><name>var_estimate</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a9dc508a2b39cf9b17ce0d5ab261c20fc" kind="variable"><name>cvar_estimate</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1af66b52b45bc8ce4cc9323f813b311eeb" kind="variable"><name>confidence_level</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a174524439ead5e3ad13c376339b54327" kind="variable"><name>method</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1ab66b4f5694c0e6e5677663263c4b389c" kind="variable"><name>horizon</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a2e63028e44ae11de8cfa9ceaab5e48b6" kind="variable"><name>sample_size</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a3ddf7fbf5487c82832934ff163d44b41" kind="variable"><name>portfolio_volatility</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a36fb14e1f2899fdcf0c69ac0642771cd" kind="variable"><name>skewness</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1acb00eb69ee4161449485712e1203f781" kind="variable"><name>kurtosis</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1adf5722af9723b11f5f8864a17d837e2d" kind="variable"><name>max_drawdown</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1ac6e66b7e8addad63da3b5494abcb94f9" kind="function"><name>scale_to_horizon</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a35e37b3d5f5d124d9fa29a3e10dcbae3" kind="function"><name>var_percentage</name></member>
    <member refid="d8/dbf/structpyfolio_1_1risk_1_1VaRResult_1a6fd146f36b6e34077eb19ede018e94c2" kind="function"><name>cvar_percentage</name></member>
  </compound>
  <compound refid="d9/d23/structpyfolio_1_1VolumeTag" kind="struct"><name>pyfolio::VolumeTag</name>
  </compound>
  <compound refid="dc/dc1/structpyfolio_1_1WeightTag" kind="struct"><name>pyfolio::WeightTag</name>
  </compound>
  <compound refid="d4/dcc/conceptpyfolio_1_1FinancialValue" kind="concept"><name>pyfolio::FinancialValue</name>
  </compound>
  <compound refid="dd/daf/conceptpyfolio_1_1Numeric" kind="concept"><name>pyfolio::Numeric</name>
  </compound>
  <compound refid="d3/d21/conceptpyfolio_1_1Portfolio" kind="concept"><name>pyfolio::Portfolio</name>
  </compound>
  <compound refid="db/dc7/conceptpyfolio_1_1TimeSeriesValue" kind="concept"><name>pyfolio::TimeSeriesValue</name>
  </compound>
  <compound refid="d7/df8/namespacepyfolio" kind="namespace"><name>pyfolio</name>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9" kind="enum"><name>ErrorCode</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a505a83f220c02df2f85c3810cd9ceb38" kind="enumvalue"><name>Success</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kind="enumvalue"><name>InvalidInput</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kind="enumvalue"><name>InsufficientData</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a34e540e6594987eef203290f0a593bd2" kind="enumvalue"><name>DivisionByZero</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a933c460869ed9a94511da0547efa80fe" kind="enumvalue"><name>NumericOverflow</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9abe267be0207e719bab573a1617da94e9" kind="enumvalue"><name>NumericUnderflow</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9afe155956e8f33e5cffa82cc86a36afbd" kind="enumvalue"><name>MissingData</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ae9b7a7be8e0c7fdda56e3b3eea2c55b8" kind="enumvalue"><name>InvalidDateRange</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad492e2c2490fcbf8a16aba55f377dc76" kind="enumvalue"><name>InvalidSymbol</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad53584e219daba92ae33cfea9b5dab07" kind="enumvalue"><name>InvalidCurrency</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" kind="enumvalue"><name>CalculationError</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a2767828026039e8ba7b38973cbb701f2" kind="enumvalue"><name>FileNotFound</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a38c300f4fc9ce8a77aad4a30de05cad8" kind="enumvalue"><name>NotFound</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ae41199faa7290c167f70f314c5e6c165" kind="enumvalue"><name>ParseError</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a47423b8444592efbe331550c5620e821" kind="enumvalue"><name>NetworkError</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9acedcbd07d779d35295f55a5b5de1e855" kind="enumvalue"><name>MemoryError</name></member>
    <member refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9abfaef30f1c8011c5cefa38ae470fb7aa" kind="enumvalue"><name>UnknownError</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92e" kind="enum"><name>Frequency</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92eac512b685438f41daa7386329a3b8f8d3" kind="enumvalue"><name>Daily</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92ea6c25e6a6da95b3d583c6ec4c3f82ed4d" kind="enumvalue"><name>Weekly</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92ea9030e39f00132d583da4122532e509e9" kind="enumvalue"><name>Monthly</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92eabe92c62702dcec6751c101b5adb0ce3b" kind="enumvalue"><name>Quarterly</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92eacf5ea7953dc47105e0eb179dbefaaf46" kind="enumvalue"><name>Yearly</name></member>
    <member refid="d7/df8/namespacepyfolio_1a9824011f2c73eaead63036496a839c64" kind="enum"><name>ReturnType</name></member>
    <member refid="d7/df8/namespacepyfolio_1a9824011f2c73eaead63036496a839c64a1fbb1e3943c2c6c560247ac8f9289780" kind="enumvalue"><name>Simple</name></member>
    <member refid="d7/df8/namespacepyfolio_1a9824011f2c73eaead63036496a839c64a2f8e38ec1a5832670c5011a71603c929" kind="enumvalue"><name>Logarithmic</name></member>
    <member refid="d7/df8/namespacepyfolio_1a9824011f2c73eaead63036496a839c64ad1d25b9ff7906919775079068a81aee7" kind="enumvalue"><name>Excess</name></member>
    <member refid="d7/df8/namespacepyfolio_1a878d87f23cdfd8de543f93bf4511621d" kind="enum"><name>RiskMetric</name></member>
    <member refid="d7/df8/namespacepyfolio_1a878d87f23cdfd8de543f93bf4511621da899857f2795e1307be64b0d9b2acac5c" kind="enumvalue"><name>VaR</name></member>
    <member refid="d7/df8/namespacepyfolio_1a878d87f23cdfd8de543f93bf4511621da169eb748ed4f8d7c897dd1d589420bdc" kind="enumvalue"><name>CVaR</name></member>
    <member refid="d7/df8/namespacepyfolio_1a878d87f23cdfd8de543f93bf4511621da6a2bb691bf584e7b0eb367d9e0f603ec" kind="enumvalue"><name>MaxDrawdown</name></member>
    <member refid="d7/df8/namespacepyfolio_1a878d87f23cdfd8de543f93bf4511621dad4192ca9679d38110983141b896eebbf" kind="enumvalue"><name>Volatility</name></member>
    <member refid="d7/df8/namespacepyfolio_1a33386bf5b0e8995594411112bb776bd8" kind="enum"><name>AttributionMethod</name></member>
    <member refid="d7/df8/namespacepyfolio_1a33386bf5b0e8995594411112bb776bd8adb8990b2de3db44c0982bdd844195666" kind="enumvalue"><name>Brinson</name></member>
    <member refid="d7/df8/namespacepyfolio_1a33386bf5b0e8995594411112bb776bd8af129b025518842a5db215f398cf8495d" kind="enumvalue"><name>BrinsonFachler</name></member>
    <member refid="d7/df8/namespacepyfolio_1a33386bf5b0e8995594411112bb776bd8aadf9f772a73f364e4ce6c52b9fae740d" kind="enumvalue"><name>Geometric</name></member>
    <member refid="d7/df8/namespacepyfolio_1a3d46f8329f981a02b2794451931e6c03" kind="enum"><name>FillMethod</name></member>
    <member refid="d7/df8/namespacepyfolio_1a3d46f8329f981a02b2794451931e6c03a67d2f6740a8eaebf4d5c6f79be8da481" kind="enumvalue"><name>Forward</name></member>
    <member refid="d7/df8/namespacepyfolio_1a3d46f8329f981a02b2794451931e6c03ab3263eb38f8903efc271cc7a760da510" kind="enumvalue"><name>Backward</name></member>
    <member refid="d7/df8/namespacepyfolio_1a3d46f8329f981a02b2794451931e6c03ad53238014015da17926bca398282211f" kind="enumvalue"><name>Interpolate</name></member>
    <member refid="d7/df8/namespacepyfolio_1a3d46f8329f981a02b2794451931e6c03a3e679cff5b3a6f6f8f32aead541a0a12" kind="enumvalue"><name>Drop</name></member>
    <member refid="d7/df8/namespacepyfolio_1a621f4de5bafda9e6d787a2bfb28e90cf" kind="enum"><name>TransactionSide</name></member>
    <member refid="d7/df8/namespacepyfolio_1a621f4de5bafda9e6d787a2bfb28e90cfa831a28f1e8df07c553fcd59546465d13" kind="enumvalue"><name>Buy</name></member>
    <member refid="d7/df8/namespacepyfolio_1a621f4de5bafda9e6d787a2bfb28e90cfa3068c5a98c003498f1fec0c489212e8b" kind="enumvalue"><name>Sell</name></member>
    <member refid="d7/df8/namespacepyfolio_1aa75f79d732be11dc872ed7175fed13fc" kind="typedef"><name>ColumnData</name></member>
    <member refid="d7/df8/namespacepyfolio_1ae16d3b363148718e3144bbe31e9d4a83" kind="typedef"><name>PriceSeries</name></member>
    <member refid="d7/df8/namespacepyfolio_1a3376bad8167ed5bb04f22ab12dda9446" kind="typedef"><name>ReturnSeries</name></member>
    <member refid="d7/df8/namespacepyfolio_1a23c19714b89e64780a41d57af421a2d4" kind="typedef"><name>VolumeSeries</name></member>
    <member refid="d7/df8/namespacepyfolio_1a7801b507a1c22f3c1a83bdef81846fc6" kind="typedef"><name>Price</name></member>
    <member refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kind="typedef"><name>Return</name></member>
    <member refid="d7/df8/namespacepyfolio_1a8585524138273c4f4b446ce83ef01994" kind="typedef"><name>Volume</name></member>
    <member refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kind="typedef"><name>Shares</name></member>
    <member refid="d7/df8/namespacepyfolio_1af989fd50261f45e6abc49511c6dfbdf0" kind="typedef"><name>Weight</name></member>
    <member refid="d7/df8/namespacepyfolio_1a233d643c58ac2bafc01cbbb358eb20d4" kind="typedef"><name>Ratio</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad77d362107c51226c09e896bdf822f9d" kind="typedef"><name>TimePoint</name></member>
    <member refid="d7/df8/namespacepyfolio_1a5ae899d21899d08c2d1ae83add7cadbb" kind="typedef"><name>Duration</name></member>
    <member refid="d7/df8/namespacepyfolio_1a0eb4888cbb06a75f7f9f58ec28061ba8" kind="typedef"><name>Date</name></member>
    <member refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kind="typedef"><name>Symbol</name></member>
    <member refid="d7/df8/namespacepyfolio_1a49f3a0c47eb3421e87ad773e9b97ff2a" kind="typedef"><name>Currency</name></member>
    <member refid="d7/df8/namespacepyfolio_1a04d0049d218cd541cdc1785744d848cd" kind="typedef"><name>Index</name></member>
    <member refid="d7/df8/namespacepyfolio_1a03c09fd9b3b52c867944288b0322d060" kind="typedef"><name>Count</name></member>
    <member refid="d7/df8/namespacepyfolio_1aba6ec9c72e78b7a0d257947aa5ee8133" kind="typedef"><name>ResampleFrequency</name></member>
    <member refid="d7/df8/namespacepyfolio_1a9d64d4ff31e5a56c93fb053c693d59b5" kind="typedef"><name>StrongPrice</name></member>
    <member refid="d7/df8/namespacepyfolio_1ad2be772c24f0d9efc27cd1ebd5402289" kind="typedef"><name>StrongReturn</name></member>
    <member refid="d7/df8/namespacepyfolio_1a578d65aea07a396538d840912162d2b3" kind="typedef"><name>StrongVolume</name></member>
    <member refid="d7/df8/namespacepyfolio_1a02e1926d342741668a586db5d322e7ad" kind="typedef"><name>StrongWeight</name></member>
    <member refid="d7/df8/namespacepyfolio_1a8b225a867ab95979be89a7d9e8519eb1" kind="typedef"><name>PositionSeries</name></member>
    <member refid="d7/df8/namespacepyfolio_1a4b722d754217aac2549ef3ef5fa23fff" kind="typedef"><name>TransactionSeries</name></member>
    <member refid="d7/df8/namespacepyfolio_1adc873ffa2082c1b104e7ed9003d94071" kind="variable"><name>VERSION_MAJOR</name></member>
    <member refid="d7/df8/namespacepyfolio_1aaaf74701f30973dc7f1c757f366ba9fa" kind="variable"><name>VERSION_MINOR</name></member>
    <member refid="d7/df8/namespacepyfolio_1a298004bd75a259b53450796d8b9a5416" kind="variable"><name>VERSION_PATCH</name></member>
    <member refid="d7/df8/namespacepyfolio_1a0c3d1ac0a4830cde073714012f01a9cb" kind="variable"><name>VERSION_STRING</name></member>
    <member refid="d7/df8/namespacepyfolio_1ac7bc1a4da0491d83997936beeedc75a2" kind="function"><name>error_code_to_string</name></member>
    <member refid="d7/df8/namespacepyfolio_1a83a6bc6c4078763da9b865eea526ae5a" kind="function"><name>initialize</name></member>
    <member refid="d7/df8/namespacepyfolio_1a973f1fd6d0697bb738cd6b5f713c8e3c" kind="function"><name>finalize</name></member>
  </compound>
  <compound refid="d2/d10/namespacepyfolio_1_1analytics" kind="namespace"><name>pyfolio::analytics</name>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a550d713ba6be707f2120d6b9b8ff0001" kind="enum"><name>PriorType</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a550d713ba6be707f2120d6b9b8ff0001af19516d11f2946f894070e92fcb56b6d" kind="enumvalue"><name>Uniform</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a550d713ba6be707f2120d6b9b8ff0001a960b44c579bc2f6818d2daaf9e4c16f0" kind="enumvalue"><name>Normal</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a550d713ba6be707f2120d6b9b8ff0001aca8d881fd796beaf45a5b5a240b089e8" kind="enumvalue"><name>StudentT</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a550d713ba6be707f2120d6b9b8ff0001a71dac3f0f562eb0fbbfdf1e456dfad3e" kind="enumvalue"><name>Empirical</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a550d713ba6be707f2120d6b9b8ff0001aceca48db179aba812cd0a398bd8568d7" kind="enumvalue"><name>Jeffreys</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2" kind="enum"><name>IndicatorType</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2af96d73e8fd3a87ab4e2fea235d3d79b0" kind="enumvalue"><name>VIX</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2a65b8db9bf515cc37584c5bbc865298c4" kind="enumvalue"><name>TermSpread</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2a903f63be23b981f3d5c89a42ebc86cc2" kind="enumvalue"><name>CreditSpread</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2afce7f129c599a1cfc83a0e153a6ecf43" kind="enumvalue"><name>YieldCurveSlope</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2ad65864e8b09bc7c70dd77861c6c96421" kind="enumvalue"><name>PutCallRatio</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2ad148ee84ecc40a0e4b4840b09ea1f5b9" kind="enumvalue"><name>HighYieldSpread</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2aa500a8ab5a9f6cad5427d40d08d78fa1" kind="enumvalue"><name>DollarIndex</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a51254d1fe289c5c99cc418aa26e0d5d2afdfd0e433864e681026f29ea781ecd77" kind="enumvalue"><name>CommodityIndex</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8a" kind="enum"><name>RegimeType</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8aa92c21511d7b383b2f8ba5b00c3c9a473" kind="enumvalue"><name>Bull</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8aa372137ebb0d053fecd7a594ec5cb5971" kind="enumvalue"><name>Bear</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8aa3e3af98b6b48c7e593d8d18863e3333b" kind="enumvalue"><name>Volatile</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8aafa3aff3c185c6dc7754235f397c2099a" kind="enumvalue"><name>Stable</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8aa9dc772d82afb9a5374668bd51a50cc8c" kind="enumvalue"><name>Crisis</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac324d49fe4462ede46349d3be97bdb8aad8afbc541b39d23648c823057cffe3a5" kind="enumvalue"><name>Recovery</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a2b5238b2314b78cf335d70a61f483623" kind="enum"><name>TurnoverDenominator</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a2b5238b2314b78cf335d70a61f483623ac4ae8cdfc66973e53c8a1970545a3e2b" kind="enumvalue"><name>AGB</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a2b5238b2314b78cf335d70a61f483623af8fdd76dac43c8fc149d58f5edd42e6b" kind="enumvalue"><name>PortfolioValue</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a2b5238b2314b78cf335d70a61f483623a1727388a7eb25a127314827031273192" kind="enumvalue"><name>NetLiquidation</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a2b5238b2314b78cf335d70a61f483623ae04f80c67233d95aed971c40d10a0164" kind="enumvalue"><name>TotalAssets</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a08341e7b284ebb74da19938348b86a28" kind="typedef"><name>MarketIndicatorSeries</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1abb18ff1f67db5a5ced7beb8e9873092d" kind="typedef"><name>ReturnSeries</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a57bd732d8503e2e838b6dfdaab4d141e" kind="typedef"><name>PriceSeries</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a95e186c16759d6d2d7efae081c0edf3e" kind="function"><name>get_global_cache</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1abc013a1699b80479b30cddac1df1b664" kind="function"><name>indicator_type_to_string</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a45d2aadb6745440aca7b2b4a90712313" kind="function"><name>get_global_parallel_analysis_suite</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1accf2e8a2179a292346940eef67adfa3c" kind="function"><name>analyze_portfolio_performance_parallel</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a89aef52fd7efed75e7392b01745fe762" kind="function"><name>get_global_analysis_suite</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a692d3d38854a2039ea715d0ba5ca5838" kind="function"><name>analyze_portfolio_performance</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a0562de05a212709b5e0fe358e30c90d0" kind="function"><name>calculate_performance_metrics</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1a6767fe5fe2707ba7d41dcc60be71fc15" kind="function"><name>calculate_rolling_performance_metrics</name></member>
    <member refid="d2/d10/namespacepyfolio_1_1analytics_1ac955ed8431f05a15c70173afce43e083" kind="function"><name>calculate_attribution</name></member>
  </compound>
  <compound refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached" kind="namespace"><name>pyfolio::analytics::cached</name>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1af806e5aece2fa569d3cec8ba37a4b31a" kind="function"><name>mean</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1a3e0d74b961f1c042079178977e61c765" kind="function"><name>std_deviation</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1adf282fb835cd51a3c8e1258b2137f0bf" kind="function"><name>correlation</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1a68b92ffe1367d82222e4ad30773a0fd0" kind="function"><name>sharpe_ratio</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1a721af56f260a3d1560f94f261c06352c" kind="function"><name>max_drawdown</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1a19154f9f47ac8dd299519471406bd12f" kind="function"><name>rolling_mean</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1ac72f648587fe1171805532226a3cbb5f" kind="function"><name>rolling_std</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1a940b4befb9ec4fd40fd5aca4d3155997" kind="function"><name>get_cache_stats</name></member>
    <member refid="d1/d32/namespacepyfolio_1_1analytics_1_1cached_1ab3e14536bb14d2efb02b83e4a3d2989e" kind="function"><name>clear_cache</name></member>
  </compound>
  <compound refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics" kind="namespace"><name>pyfolio::analytics::statistics</name>
    <member refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a03d3ac2bfd1691d61e27da8e7d951c22" kind="function"><name>calculate_summary</name></member>
    <member refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a50482d1bd36f2cb5c64daa034eeabbe3" kind="function"><name>analyze_distribution</name></member>
    <member refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a8ebe063865d4f8a44de34903ced7fabc" kind="function"><name>analyze_correlation</name></member>
    <member refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a889089f7fd60c14f22940dd7cc955c3c" kind="function"><name>align_series</name></member>
  </compound>
  <compound refid="de/d0d/namespacepyfolio_1_1analytics_1_1turnover__utils" kind="namespace"><name>pyfolio::analytics::turnover_utils</name>
    <member refid="de/d0d/namespacepyfolio_1_1analytics_1_1turnover__utils_1ac6dc03cda715f6f067b135a47936899f" kind="function"><name>annualize_turnover</name></member>
    <member refid="de/d0d/namespacepyfolio_1_1analytics_1_1turnover__utils_1a1dee64df54171e1a03c607503bb07b07" kind="function"><name>calculate_turnover_statistics</name></member>
    <member refid="de/d0d/namespacepyfolio_1_1analytics_1_1turnover__utils_1a756dd9364cbeb9160c7ab767f9e3364a" kind="function"><name>detect_high_turnover_periods</name></member>
    <member refid="de/d0d/namespacepyfolio_1_1analytics_1_1turnover__utils_1a4772b82a62f9b4d4aecee75157f33b0c" kind="function"><name>calculate_turnover_efficiency</name></member>
  </compound>
  <compound refid="dc/dc6/namespacepyfolio_1_1attribution" kind="namespace"><name>pyfolio::attribution</name>
  </compound>
  <compound refid="de/d7a/namespacepyfolio_1_1capacity" kind="namespace"><name>pyfolio::capacity</name>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a27e2b8adc90a52a68f79f453f4cfcb70" kind="enum"><name>ImpactModel</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a27e2b8adc90a52a68f79f453f4cfcb70a32a843da6ea40ab3b17a3421ccdf671b" kind="enumvalue"><name>Linear</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a27e2b8adc90a52a68f79f453f4cfcb70ae6c1b4ee758a2636a6eaf99105103c56" kind="enumvalue"><name>SquareRoot</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a27e2b8adc90a52a68f79f453f4cfcb70a3c2e32ef9376c9319a8567ee7170dad9" kind="enumvalue"><name>ThreeHalves</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a27e2b8adc90a52a68f79f453f4cfcb70aeab7d1cf667fe34631cf41b7c954d2aa" kind="enumvalue"><name>Almgren</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a47fe4ae8e1af66983423eb3a65e794d2" kind="enum"><name>LiquidityConstraint</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a47fe4ae8e1af66983423eb3a65e794d2afdb84c41f58953e18edc79a00a1116ea" kind="enumvalue"><name>VolumePercent</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a47fe4ae8e1af66983423eb3a65e794d2a6affe9fb84fe77609721559509385e9f" kind="enumvalue"><name>ADVMultiple</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a47fe4ae8e1af66983423eb3a65e794d2a8343d563bac57218fe16de453ebdf85e" kind="enumvalue"><name>AbsoluteShares</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a47fe4ae8e1af66983423eb3a65e794d2abbcd884c8def404daf754bd9c4a14b73" kind="enumvalue"><name>MarketCapPercent</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a39fea4ea0bf0f1dc2a7c2fead4f681fe" kind="function"><name>create_market_microstructure</name></member>
    <member refid="de/d7a/namespacepyfolio_1_1capacity_1a3b07998aa0b60d8d660d3240b77f26ca" kind="function"><name>calculate_turnover_capacity</name></member>
  </compound>
  <compound refid="db/d9c/namespacepyfolio_1_1constants" kind="namespace"><name>pyfolio::constants</name>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1accf4b9e8a1c9179437b61a3f9a0e2e53" kind="variable"><name>TRADING_DAYS_PER_YEAR</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a4b20009daae97408f5f6992d397238df" kind="variable"><name>BUSINESS_DAYS_PER_YEAR</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a3476d65d02bb09c32b963a656fbabc54" kind="variable"><name>DAYS_PER_YEAR</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1aaf02ba4a6fdbff6c4d053915aef4c583" kind="variable"><name>MONTHS_PER_YEAR</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a72bad45b01d55a713757d670c72152d5" kind="variable"><name>WEEKS_PER_YEAR</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a6b629b058e12e9c8e6b1c39036389ddf" kind="variable"><name>DEFAULT_RISK_FREE_RATE</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a73eeb10def941e165c021f17d8d35a93" kind="variable"><name>DEFAULT_CONFIDENCE_LEVEL</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a71673d2da2f4399213373b47600a5c2d" kind="variable"><name>DEFAULT_LIQUIDITY_THRESHOLD</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a68db126ae84ec5242d631178d2b74542" kind="variable"><name>EPSILON</name></member>
    <member refid="db/d9c/namespacepyfolio_1_1constants_1a2f4a46f89359aea86c5badcd5aadb3f1" kind="variable"><name>NaN</name></member>
  </compound>
  <compound refid="d9/d9c/namespacepyfolio_1_1frequency" kind="namespace"><name>pyfolio::frequency</name>
    <member refid="d9/d9c/namespacepyfolio_1_1frequency_1a0a35acb976bf6cfc2db863e29db9616b" kind="function"><name>to_days</name></member>
    <member refid="d9/d9c/namespacepyfolio_1_1frequency_1a74fa147efbd62bd66d74854830c8a124" kind="function"><name>to_annual_factor</name></member>
  </compound>
  <compound refid="dd/d56/namespacepyfolio_1_1intraday" kind="namespace"><name>pyfolio::intraday</name>
  </compound>
  <compound refid="d1/d64/namespacepyfolio_1_1intraday_1_1utils" kind="namespace"><name>pyfolio::intraday::utils</name>
    <member refid="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1afff498b520c4dce74192e2d54353c61e" kind="function"><name>is_trading_hours</name></member>
    <member refid="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a2be668e9177711820f75619a91c725f0" kind="function"><name>normalize_positions</name></member>
    <member refid="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a6b05af9b96a8f75ab4c3a5e620fc08eb" kind="function"><name>calculate_average_absolute_deviation</name></member>
    <member refid="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a25ea59a44c499d9dcc313645d1f47943" kind="function"><name>interpolate_missing_positions</name></member>
    <member refid="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a8494a80bcf3a28a48f3f278f5d2bf559" kind="function"><name>interpolate_missing_positions</name></member>
  </compound>
  <compound refid="d8/ddb/namespacepyfolio_1_1io" kind="namespace"><name>pyfolio::io</name>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1ab23fad32cbb2df97533bd91e60e98b0a" kind="function"><name>load_returns_from_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1a1d7878441de961a76bf4a6c94a36d571" kind="function"><name>load_benchmark_from_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1ab9726f6bff83e1302eabc8b81e91cabb" kind="function"><name>load_positions_from_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1a3bcd3fb1db46f772992f0ca116e05605" kind="function"><name>load_transactions_from_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1a9c45dfe0b448de71bedd1032fd1dc50a" kind="function"><name>load_factor_returns_from_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1a31d2fcdb8b5b9afcc99b3c1b9b2c42fa" kind="function"><name>load_market_data_from_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1ac5936d5d5b52389eca310e60b1e799b1" kind="function"><name>save_returns_to_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1a9bc0f126fc69a4d2e976f6b06fec79ee" kind="function"><name>save_positions_to_csv</name></member>
    <member refid="d8/ddb/namespacepyfolio_1_1io_1a2e15bed59889eb6a31375d80d5691b1b" kind="function"><name>save_transactions_to_csv</name></member>
  </compound>
  <compound refid="db/d43/namespacepyfolio_1_1io_1_1sample__data" kind="namespace"><name>pyfolio::io::sample_data</name>
    <member refid="db/d43/namespacepyfolio_1_1io_1_1sample__data_1ab2b9f93e4bdf502964ca4c30adf8354d" kind="function"><name>generate_random_returns</name></member>
    <member refid="db/d43/namespacepyfolio_1_1io_1_1sample__data_1adc2dc52db801b58b29311cb7c2c6a7f5" kind="function"><name>generate_sample_positions</name></member>
    <member refid="db/d43/namespacepyfolio_1_1io_1_1sample__data_1a902e9474b71c67f378dfe3f9ce014521" kind="function"><name>generate_sample_transactions</name></member>
  </compound>
  <compound refid="d5/dc0/namespacepyfolio_1_1io_1_1validation" kind="namespace"><name>pyfolio::io::validation</name>
    <member refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1abcc020a32adbc5f5cf4f5497992bd947" kind="function"><name>validate_returns</name></member>
    <member refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a2535e27fe2a3b80ae855b36c20d0af49" kind="function"><name>validate_positions</name></member>
    <member refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a9675e91fd8c5ddb8feb34ee897725c82" kind="function"><name>validate_transactions</name></member>
    <member refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a5b10669c16ac29eade1582ad388be2d3" kind="function"><name>check_data_alignment</name></member>
  </compound>
  <compound refid="da/db2/namespacepyfolio_1_1memory" kind="namespace"><name>pyfolio::memory</name>
    <member refid="da/db2/namespacepyfolio_1_1memory_1af2f060e4f613c6dffd7c1acf71021ca7" kind="typedef"><name>pool_vector</name></member>
    <member refid="da/db2/namespacepyfolio_1_1memory_1a52422571367170332d4f86bfdc5502f3" kind="typedef"><name>pool_map</name></member>
    <member refid="da/db2/namespacepyfolio_1_1memory_1acbc710ba8b76e9f364f776a36f41775b" kind="function"><name>make_pool_ptr</name></member>
  </compound>
  <compound refid="d9/d20/namespacepyfolio_1_1parallel" kind="namespace"><name>pyfolio::parallel</name>
    <member refid="d9/d20/namespacepyfolio_1_1parallel_1ad752371eba260b351e1b16ee88cceb63" kind="function"><name>get_global_thread_pool</name></member>
    <member refid="d9/d20/namespacepyfolio_1_1parallel_1aefd7c4334f31432b64fa03897d12dd94" kind="function"><name>get_global_parallel_algorithms</name></member>
  </compound>
  <compound refid="de/d10/namespacepyfolio_1_1parallel_1_1par" kind="namespace"><name>pyfolio::parallel::par</name>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1a96d9296e9ddaac96fc78b74481b8b075" kind="function"><name>mean</name></member>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1adc17edef879122a29dcadca620deb325" kind="function"><name>std_deviation</name></member>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1a10aab672183bdacb6c604d4f9934465c" kind="function"><name>correlation</name></member>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1a3d143d09def894f7b7df272d273522b2" kind="function"><name>rolling_mean</name></member>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1ae1175999133f8e9fed5168ea0c0bebd6" kind="function"><name>rolling_std</name></member>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1a0d0d29265c2283734ee6c51a8e300bde" kind="function"><name>map</name></member>
    <member refid="de/d10/namespacepyfolio_1_1parallel_1_1par_1af2067e43276db772b31aef01bf51dd34" kind="function"><name>reduce</name></member>
  </compound>
  <compound refid="d8/dd9/namespacepyfolio_1_1performance" kind="namespace"><name>pyfolio::performance</name>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a485b4a7f1c9f3090402383fda316c8f6" kind="function"><name>calculate_drawdowns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a919af12e2600a7e77163a20bf6f98609" kind="function"><name>max_drawdown</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aff3558ae3dd3ed4381a805f730d47b53" kind="function"><name>max_drawdown_info</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a95ab1789aea3818a1e9e07c746280c53" kind="function"><name>drawdown_duration</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1ae62f81fa57da6d511eea88d11e4128ae" kind="function"><name>find_drawdown_periods</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aa2afb12cd873b86de28fef77344ad2b2" kind="function"><name>average_drawdown</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a07f089ab270bd9a2daf14c4802966942" kind="function"><name>rolling_max_drawdown</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1ac7636a30bc37db92e05e85e19917a00b" kind="function"><name>average_recovery_time</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aa8dd6ffc556adc3f76dc32645ec6b57c" kind="function"><name>sharpe_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a2b9a9772352ff85db5af94511638114f" kind="function"><name>sortino_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a9bb5c04c5c7d86d34a5867ebcbc2ec9c" kind="function"><name>calmar_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a72a6639531f459b9963884e4d4ac571e" kind="function"><name>information_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a376eed0b5df19f13f64b76230fdf6718" kind="function"><name>omega_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1ae0eb073ae0b6cba1b6f6ed684179da8c" kind="function"><name>treynor_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a65aa70a47c152e3dbb1e73ea2dd1f0c4" kind="function"><name>rolling_sharpe_ratio</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aba556ae09a3dbbdad98c878c5b84be4a" kind="function"><name>calculate_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aa845ba07f3b5467f5cac8d9fc83e2368" kind="function"><name>calculate_log_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a0b36bd99af8d88af1dc5578ef684c6e8" kind="function"><name>calculate_excess_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a0643c69995dcd3f223563def5f3efb99" kind="function"><name>calculate_cumulative_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a570a25f1233fa82e4d5c237cca260e59" kind="function"><name>annualize_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1acabfd3a56cd8250c87a2f50b76d4ed4b" kind="function"><name>aggregate_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a5e53c9105f237045953172393a34c5c2" kind="function"><name>rolling_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a187ff948556631bd1ebbe0c3c87bdb76" kind="function"><name>calculate_volatility</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a8a0797d8f8603e3757181fb825c960b8" kind="function"><name>rolling_volatility</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a6bc9f0c706b2d89a0eb6c539eddef077" kind="function"><name>total_return</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aee9b783d9de6756d4fd9c98c86274b05" kind="function"><name>calculate_cagr</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aea9501b23c640378f687a97c51874232" kind="function"><name>convert_returns</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a048c0615bdec480c0e1574fe8c7c1129" kind="function"><name>calculate_rolling_volatility</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a77cf1b59bc8f7770d2f1e7df6df96c86" kind="function"><name>calculate_rolling_sharpe</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a280b239f05564bffadd2ab759aa7b668" kind="function"><name>calculate_rolling_beta</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1aa7d52fa28e4c97c9de78af729f8cc761" kind="function"><name>calculate_rolling_correlation</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a5651391142d782fdb6931399027d0c98" kind="function"><name>calculate_rolling_max_drawdown</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a4e5a00565b6f3da166dbcb1a57b53fec" kind="function"><name>calculate_rolling_sortino</name></member>
    <member refid="d8/dd9/namespacepyfolio_1_1performance_1a2429f7c5cdda810bc8008f0ea6b567cd" kind="function"><name>calculate_rolling_downside_deviation</name></member>
  </compound>
  <compound refid="df/d8b/namespacepyfolio_1_1positions" kind="namespace"><name>pyfolio::positions</name>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862" kind="enum"><name>MarketCapBucket</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862a96ff7583ddd60786ca13dc56155c441b" kind="enumvalue"><name>MegaCap</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862a4ef92fddf919b619c32959c093d47abe" kind="enumvalue"><name>LargeCap</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862a12def47f6ee74d8ce5a91b4e42d7fb41" kind="enumvalue"><name>MidCap</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862a136e3c7bb12e9c10ddaef53629de3af5" kind="enumvalue"><name>SmallCap</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862a3433df1df684ed96ba12a1114f5e38f0" kind="enumvalue"><name>MicroCap</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a34ae424a2fc767866c6f069714c60862a88183b946cc5f0e8c96b2e66e1c74a7e" kind="enumvalue"><name>Unknown</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1a9626d2caeabcbd29d4b483b173fc2733" kind="typedef"><name>PositionSeries</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1afc1964bf4f1b5a7ad5158222cecb9df4" kind="function"><name>classify_market_cap</name></member>
    <member refid="df/d8b/namespacepyfolio_1_1positions_1ae891b49e68460a1a6a74aa56da12c441" kind="function"><name>market_cap_bucket_to_string</name></member>
  </compound>
  <compound refid="de/d69/namespacepyfolio_1_1positions_1_1utils" kind="namespace"><name>pyfolio::positions::utils</name>
    <member refid="de/d69/namespacepyfolio_1_1positions_1_1utils_1a457c53c59a88377cd335965d115bd0e6" kind="function"><name>positions_to_exposures</name></member>
    <member refid="de/d69/namespacepyfolio_1_1positions_1_1utils_1abc91a6e713e1da7ec8f4825ec2fa1a40" kind="function"><name>positions_to_leverage</name></member>
    <member refid="de/d69/namespacepyfolio_1_1positions_1_1utils_1aa03cdd025206bdfd1cac84f30d280dcf" kind="function"><name>positions_to_holding_counts</name></member>
  </compound>
  <compound refid="d7/d68/namespacepyfolio_1_1reporting" kind="namespace"><name>pyfolio::reporting</name>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1aac9c6c66a273fe37313f67bd6bd67903" kind="function"><name>create_full_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kind="function"><name>create_simple_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a14f0f60fc91109a6adab9785c92632eb" kind="function"><name>create_returns_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a31cb157f7b3fd4e572b2f62db5308edd" kind="function"><name>create_position_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a8ccd9b1e38e0190c91d5d06595b486fa" kind="function"><name>create_txn_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1aac57d5e791c078f956065e1a4d2cdc01" kind="function"><name>create_round_trip_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1af2f92bc46ca295a03f224ee505ffb638" kind="function"><name>create_interesting_times_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a706b60e14b4c380a2cf7293496dfd6e0" kind="function"><name>create_capacity_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a2ebf18aa53b9cbf8219fdbea7631cf2e" kind="function"><name>create_bayesian_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a3502ba757f9da7822b24bf4d869a84d2" kind="function"><name>create_risk_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a47a6aa53c9e563f086d729cfa6f0ad37" kind="function"><name>create_perf_attrib_tear_sheet</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a12e6df2bc3f6fcf3c5b5026bd178df1b" kind="function"><name>generate_html_report</name></member>
    <member refid="d7/d68/namespacepyfolio_1_1reporting_1a16455bc47e91fc0ce588687e7bc83cd2" kind="function"><name>create_all_tear_sheets</name></member>
  </compound>
  <compound refid="d2/da5/namespacepyfolio_1_1risk" kind="namespace"><name>pyfolio::risk</name>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a15c267eaee47bf99d3a714b595a27206" kind="enum"><name>VaRMethod</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a15c267eaee47bf99d3a714b595a27206a1df940294e43cce1f43fe5cd4e103b94" kind="enumvalue"><name>Historical</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a15c267eaee47bf99d3a714b595a27206a23706d68d0c7d89a0010b5cc242084f0" kind="enumvalue"><name>Parametric</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a15c267eaee47bf99d3a714b595a27206aedd652c19d7dbbfb3d242aa14b2fec8c" kind="enumvalue"><name>MonteCarlo</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a15c267eaee47bf99d3a714b595a27206a88913bb4473f1077ae65934f3a8cf05a" kind="enumvalue"><name>CornishFisher</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a15c267eaee47bf99d3a714b595a27206abdbaf8bb2d87ab72ee2ee021b43f0f2d" kind="enumvalue"><name>ExtremeValue</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ae2f599e79ba540086280c5e7e34f29d6" kind="enum"><name>VaRHorizon</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ae2f599e79ba540086280c5e7e34f29d6ac512b685438f41daa7386329a3b8f8d3" kind="enumvalue"><name>Daily</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ae2f599e79ba540086280c5e7e34f29d6a6c25e6a6da95b3d583c6ec4c3f82ed4d" kind="enumvalue"><name>Weekly</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ae2f599e79ba540086280c5e7e34f29d6a9030e39f00132d583da4122532e509e9" kind="enumvalue"><name>Monthly</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ae2f599e79ba540086280c5e7e34f29d6abe92c62702dcec6751c101b5adb0ce3b" kind="enumvalue"><name>Quarterly</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ae2f599e79ba540086280c5e7e34f29d6ac4c696d78d97d24ce69ebe19fd7f8483" kind="enumvalue"><name>Annual</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1a0fbdfe0d8229ca14ca8adb34b32f53fd" kind="function"><name>create_factor_model_from_returns</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ac7c4871092a6b879c5ce42bfefcbce07" kind="function"><name>historical_var</name></member>
    <member refid="d2/da5/namespacepyfolio_1_1risk_1ac091b780b885e60eb245538dd9ec1910" kind="function"><name>conditional_var</name></member>
  </compound>
  <compound refid="db/d59/namespacepyfolio_1_1risk_1_1common__factors" kind="namespace"><name>pyfolio::risk::common_factors</name>
    <member refid="db/d59/namespacepyfolio_1_1risk_1_1common__factors_1a6fd1a239117fe3ff99ec3042bed78145" kind="function"><name>fama_french_3_factors</name></member>
    <member refid="db/d59/namespacepyfolio_1_1risk_1_1common__factors_1ac97e16d07592096e7f24a32d257f7d2b" kind="function"><name>fama_french_5_factors</name></member>
    <member refid="db/d59/namespacepyfolio_1_1risk_1_1common__factors_1a09d514aeee0b29af43f0e7b920c1d712" kind="function"><name>barra_fundamental_factors</name></member>
    <member refid="db/d59/namespacepyfolio_1_1risk_1_1common__factors_1a0f4b77bb72636bb516785881b4031e43" kind="function"><name>gics_sector_factors</name></member>
  </compound>
  <compound refid="d0/de6/namespacepyfolio_1_1risk_1_1stress__scenarios" kind="namespace"><name>pyfolio::risk::stress_scenarios</name>
    <member refid="d0/de6/namespacepyfolio_1_1risk_1_1stress__scenarios_1a49443a3336c200146a808fe5de6b3719" kind="function"><name>financial_crisis_2008</name></member>
    <member refid="d0/de6/namespacepyfolio_1_1risk_1_1stress__scenarios_1af0dbe00fbbe6d087eb9dd43e9bfb092b" kind="function"><name>covid_crash_2020</name></member>
    <member refid="d0/de6/namespacepyfolio_1_1risk_1_1stress__scenarios_1a553d72e4f6842b9d60622161f7d59b03" kind="function"><name>interest_rate_shock</name></member>
    <member refid="d0/de6/namespacepyfolio_1_1risk_1_1stress__scenarios_1aa4f919c9fc048665084015e3c3b0deb3" kind="function"><name>get_common_scenarios</name></member>
  </compound>
  <compound refid="d0/d60/namespacepyfolio_1_1simd" kind="namespace"><name>pyfolio::simd</name>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1abe693f57be07a94e5703f30171bac2a4" kind="variable"><name>SIMD_ALIGNMENT</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a401e3c08f28bdd741e67026a693ab749" kind="variable"><name>AVX2_DOUBLES</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a5b2fa1d2b38cb363182ba25d2a90ee03" kind="variable"><name>SSE2_DOUBLES</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a1637072613d471915974f17601125551" kind="variable"><name>NEON_DOUBLES</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1abdea27a3803b3e6e05e14e923474e617" kind="function"><name>is_aligned</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a8db69e97761680ae769598b3ea85485d" kind="function"><name>vector_add</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a0eb32889b1c6598cb6d836322b1fd4e7" kind="function"><name>vector_subtract</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1ad7801140ceb50d53111dc0137b1c093c" kind="function"><name>vector_multiply</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a6efc96d7ab5019459131e97046cca0a2" kind="function"><name>vector_scale</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a148485211f2ca558de4424412a78f0a0" kind="function"><name>dot_product</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a60235417cf246196aeb42e6211a07046" kind="function"><name>vector_sum</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1ad3431d9b85ba23bb4b87ca4dd8831693" kind="function"><name>vector_mean</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a75f24bf81435dc095c45e50fd80a5f82" kind="function"><name>vector_variance</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a35307dabe07b88ba83fc57c851c9139b" kind="function"><name>vector_std</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a6e587dea4e8b228a229bb2c7702b80c2" kind="function"><name>rolling_sum_simd</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a6be63e727719520d16067bd5d849dcf2" kind="function"><name>exponential_moving_average_simd</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1aa73066422103347fde2fc199abc7d9ec" kind="function"><name>calculate_returns_simd</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a896677893fce13d3a440226d4bd1b228" kind="function"><name>cumulative_product_simd</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1af019ba74cae4a4d4555ac87c48891107" kind="function"><name>correlation_simd</name></member>
    <member refid="d0/d60/namespacepyfolio_1_1simd_1a032be961dd206012f9e725c2528eb98c" kind="function"><name>covariance_simd</name></member>
  </compound>
  <compound refid="d5/d10/namespacepyfolio_1_1simd_1_1detail" kind="namespace"><name>pyfolio::simd::detail</name>
  </compound>
  <compound refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2" kind="namespace"><name>pyfolio::simd::detail::avx2</name>
    <member refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2_1acdafffec2b1c8f08e54d2e08506df770" kind="function"><name>vector_add_avx2</name></member>
    <member refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2_1a5712d632f7b476d7ae019a0e8ce89450" kind="function"><name>vector_subtract_avx2</name></member>
    <member refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2_1ada9318023e4fab6364196b5ce2cd5aac" kind="function"><name>vector_multiply_avx2</name></member>
    <member refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2_1ae814dcec474b64030ee6d97902849ea2" kind="function"><name>vector_scale_avx2</name></member>
    <member refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2_1a8c584786fe6d1442d5937b2aadd50b53" kind="function"><name>dot_product_avx2</name></member>
    <member refid="d1/d70/namespacepyfolio_1_1simd_1_1detail_1_1avx2_1a6d15ab4651fdc91c213eb13c0e6b81ce" kind="function"><name>vector_sum_avx2</name></member>
  </compound>
  <compound refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar" kind="namespace"><name>pyfolio::simd::detail::scalar</name>
    <member refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar_1ab58555677e96819f47635fcb6cb98d80" kind="function"><name>vector_add_scalar</name></member>
    <member refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar_1a04c8ebd0f050bd6f3bed345233491cf7" kind="function"><name>vector_subtract_scalar</name></member>
    <member refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar_1a7fc9e59a61325bcb4ac9050b5e3058f9" kind="function"><name>vector_multiply_scalar</name></member>
    <member refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar_1af2154fdba8e0cfeb0a76bf24cfb45d23" kind="function"><name>vector_scale_scalar</name></member>
    <member refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar_1a24687892584d07748c1d6e718a71e88f" kind="function"><name>dot_product_scalar</name></member>
    <member refid="d7/db7/namespacepyfolio_1_1simd_1_1detail_1_1scalar_1a4fc93986da5a9f89f845fcf6f697f40d" kind="function"><name>vector_sum_scalar</name></member>
  </compound>
  <compound refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2" kind="namespace"><name>pyfolio::simd::detail::sse2</name>
    <member refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2_1a344a1d97ab311249bb3591fea0be9af5" kind="function"><name>vector_add_sse2</name></member>
    <member refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2_1a05b6e307f95c40c0230188639f2f0877" kind="function"><name>vector_subtract_sse2</name></member>
    <member refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2_1a2a8e9369cf7d64a4bf202895c7f2a28c" kind="function"><name>vector_multiply_sse2</name></member>
    <member refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2_1a6671997948ee25ff497a6aaae9202e0a" kind="function"><name>vector_scale_sse2</name></member>
    <member refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2_1af371b2d1450631c6bb95df084505b05d" kind="function"><name>dot_product_sse2</name></member>
    <member refid="d2/d76/namespacepyfolio_1_1simd_1_1detail_1_1sse2_1a5e92c47c7efce3844ac62240279265d9" kind="function"><name>vector_sum_sse2</name></member>
  </compound>
  <compound refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries" kind="namespace"><name>pyfolio::simd::timeseries</name>
    <member refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a58dbbb7b4a759f65a68509af1b47f460" kind="function"><name>add_series</name></member>
    <member refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a260ff87f26612bf4ce898ec093717b30" kind="function"><name>rolling_mean_simd</name></member>
    <member refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a71edb3412a293dbfd763198caa45f464" kind="function"><name>correlation_fast</name></member>
  </compound>
  <compound refid="d6/ddc/namespacepyfolio_1_1stats" kind="namespace"><name>pyfolio::stats</name>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a0ded7b265023215831bffb8b799ba59a" kind="function"><name>mean</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1afae76bfc655b39b929869957f17e2406" kind="function"><name>variance</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1ae9a69383818faf0de2b2e0a99d4179d9" kind="function"><name>standard_deviation</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a5df7d33f99e4ea05ccf659ac88173b4e" kind="function"><name>skewness</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1ae51a470f87ae34ae1f58305531f9dcf8" kind="function"><name>kurtosis</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1ae62df134ebe0d79d73c16894c3dc364d" kind="function"><name>correlation</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1af8d120442d5971c10a506129f562be2c" kind="function"><name>covariance</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1aea9b2c25523d93f5afb06c51f77c6f47" kind="function"><name>percentile</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1aaeb9f5bbec8f929f08cc73c211803257" kind="function"><name>median</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1aa0e53cbd1e3be9ff3caf6608bac7960d" kind="function"><name>quantile</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a1f80321b9a21528dec7e6978131ee2e7" kind="function"><name>value_at_risk</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a1aca034860dac7ddacbac6f9dd0b930c" kind="function"><name>conditional_value_at_risk</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a2594de0b320048a4032be5bcd6965c97" kind="function"><name>rolling_statistic</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1afc56cb39c9c5a71f7637bb583057c342" kind="function"><name>rolling_mean</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a372692231466b8d4d68c8682ed3f7c4c" kind="function"><name>rolling_std</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a7dcca677ba8223bb6554f1b717bfb6f0" kind="function"><name>rolling_correlation</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a82d07561f01fdc6cb35fd5acda668960" kind="function"><name>normal_cdf</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a9877731394f7a80eba2f0e97a5d2a9a9" kind="function"><name>normal_pdf</name></member>
    <member refid="d6/ddc/namespacepyfolio_1_1stats_1a2cc3b474187a9bd3989c41a8d88c79dc" kind="function"><name>normal_ppf</name></member>
  </compound>
  <compound refid="dd/d79/namespacepyfolio_1_1stats_1_1constants" kind="namespace"><name>pyfolio::stats::constants</name>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a043417fac78be040392a0520dde681fd" kind="variable"><name>pi</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1acea28c28cb82b587838746d20d1322a5" kind="variable"><name>e</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1aef0edb1622f5c598049c3491123478a9" kind="variable"><name>sqrt_2</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1ac686c3917a59c72b3ba231ac5b18eb2d" kind="variable"><name>sqrt_pi</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1ab9537969c98ac2754dd43ece167a2397" kind="variable"><name>ln_2</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a01c233665ef20446bae6b0c2dd3f1c9b" kind="variable"><name>ln_10</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a1a2f9a0ecd21f4ae078c8228d3e43e36" kind="variable"><name>trading_days_per_year</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a2cdc8e081f8d1a7a8a04e16196d9d15d" kind="variable"><name>calendar_days_per_year</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a8dbcc4d279ec249b44459f5ce4b67eeb" kind="variable"><name>months_per_year</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a611cd44db2d55419fef9908afafe39b6" kind="variable"><name>weeks_per_year</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a2b5d7af287aeb44a02669411c6638a18" kind="variable"><name>default_risk_free_rate</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a7acdf69e48f4a122e1f9d68a1b8f2705" kind="variable"><name>var_95_percentile</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1abbf7d7d4b16e6fe8d6dd48183c353b06" kind="variable"><name>var_99_percentile</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a6d7cfcbafc1e64a69f6da89baaf264f3" kind="variable"><name>cvar_95_percentile</name></member>
    <member refid="dd/d79/namespacepyfolio_1_1stats_1_1constants_1a300ed569c38776c7703e79482e7c049d" kind="variable"><name>cvar_99_percentile</name></member>
  </compound>
  <compound refid="d9/d4a/namespacepyfolio_1_1stats_1_1constexpr__utils" kind="namespace"><name>pyfolio::stats::constexpr_utils</name>
    <member refid="d9/d4a/namespacepyfolio_1_1stats_1_1constexpr__utils_1a339fae25a69a13bb685175daf67a6f7a" kind="function"><name>power</name></member>
    <member refid="d9/d4a/namespacepyfolio_1_1stats_1_1constexpr__utils_1a6f3477ab39627c07af9c6a7ac3c6ec42" kind="function"><name>abs</name></member>
    <member refid="d9/d4a/namespacepyfolio_1_1stats_1_1constexpr__utils_1af7199dd32f6a0f913616230d84e3e6e1" kind="function"><name>max</name></member>
    <member refid="d9/d4a/namespacepyfolio_1_1stats_1_1constexpr__utils_1acb7c49f1c7b89b40444cb1f34c4367e6" kind="function"><name>min</name></member>
    <member refid="d9/d4a/namespacepyfolio_1_1stats_1_1constexpr__utils_1acdd4e5b38c28287a04152d74b4728725" kind="function"><name>annualization_factor</name></member>
  </compound>
  <compound refid="dc/d4e/namespacepyfolio_1_1transactions" kind="namespace"><name>pyfolio::transactions</name>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kind="enum"><name>TransactionType</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kind="enumvalue"><name>Buy</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa3068c5a98c003498f1fec0c489212e8b" kind="enumvalue"><name>Sell</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1a2c2a7573e712311accb7cd40b46fdcb1" kind="function"><name>group_by_symbol</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1acb883f3044759374411a2bd32c9fe1be" kind="function"><name>group_by_duration</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1aae9dcab036865e9b023c1b9464a65611" kind="function"><name>round_trip_performance_by_period</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1ae893dfcd1661353c20000ac7cf36a057" kind="function"><name>filter_round_trips</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1a5002dc965910ad09b404e64aa84a5844" kind="function"><name>top_round_trips</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1aaae9b89dee86559c4a7107df21cb26b0" kind="function"><name>calculate_cost_ratio</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1ad2681dde1f3e784de967a383a5cfe8cf" kind="function"><name>analyze_costs_by_symbol</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1acc94860d07c43fb8cfdbac14aeca5da6" kind="function"><name>calculate_average_price</name></member>
    <member refid="dc/d4e/namespacepyfolio_1_1transactions_1a735b0817892b8545a3e238c24561a185" kind="function"><name>calculate_turnover</name></member>
  </compound>
  <compound refid="d5/d2b/namespacepyfolio_1_1utils" kind="namespace"><name>pyfolio::utils</name>
    <member refid="d5/d2b/namespacepyfolio_1_1utils_1afea61375d6757436d1f01bed259c58a3" kind="function"><name>validate_returns</name></member>
    <member refid="d5/d2b/namespacepyfolio_1_1utils_1a370230a288b281c76873fb0472d69841" kind="function"><name>validate_prices</name></member>
  </compound>
  <compound refid="da/d6c/namespacepyfolio_1_1visualization" kind="namespace"><name>pyfolio::visualization</name>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46" kind="enum"><name>ChartType</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a4803e6b9e63dabf04de980788d6a13c4" kind="enumvalue"><name>Line</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a5f13640eb2d9a18296a0662051d41a38" kind="enumvalue"><name>Candlestick</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a83c6ec55167875da2148de3e866f839e" kind="enumvalue"><name>OHLC</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a933346b3a6c82465498a043b0aa01653" kind="enumvalue"><name>Heatmap</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a09870720ca8134284e4e305ac6ce5f19" kind="enumvalue"><name>Scatter</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46addc35f88fa71b6ef142ae61f35364653" kind="enumvalue"><name>Bar</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46ac00e3b8460f0592cacf813fd68988ed4" kind="enumvalue"><name>Histogram</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a3cfce651e667ab85486dd42a8185f98a" kind="enumvalue"><name>Box</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a038810d0fea91e013692cedfdf517478" kind="enumvalue"><name>Violin</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46aaa0d528ba11ea1485d466dfe1ea40819" kind="enumvalue"><name>Surface</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a09c9ea004b0c0822b75bdec322b90ff4" kind="enumvalue"><name>Waterfall</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a43c6fdab079890642567acb3465c5fe1" kind="enumvalue"><name>Treemap</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ae2fe871df81736d3ee1d95c63df9cb46a4ed9af94e984eaee7ecce63850795887" kind="enumvalue"><name>Sunburst</name></member>
    <member refid="da/d6c/namespacepyfolio_1_1visualization_1ac3243554ff443e9614032312e5fb8308" kind="typedef"><name>json</name></member>
  </compound>
  <compound refid="de/d6e/namespacepyfolio_1_1visualization_1_1dashboard" kind="namespace"><name>pyfolio::visualization::dashboard</name>
  </compound>
  <compound refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive" kind="namespace"><name>pyfolio::visualization::interactive</name>
    <member refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a2f6c2c21cc2ef099f9b109d1bb340559" kind="function"><name>create_portfolio_dashboard</name></member>
    <member refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a9d7419f28da833616e1a5e4f6832ad4b" kind="function"><name>create_risk_dashboard</name></member>
    <member refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a4df055e4525755c051bb391b756bfa1b" kind="function"><name>create_attribution_waterfall</name></member>
    <member refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1aa584cad0311faf03b05f98f3aa775a4c" kind="function"><name>create_rolling_metrics_chart</name></member>
    <member refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a3d3fa7cb2530b2de016cf22ba59f6ded" kind="function"><name>create_sector_allocation_chart</name></member>
    <member refid="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a59cdf34b763111b1d023b35a53a0db14" kind="function"><name>create_underwater_chart</name></member>
  </compound>
  <compound refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils" kind="namespace"><name>pyfolio::visualization::plot_utils</name>
    <member refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a0659042e0ecea832ed6655650793d8ec" kind="function"><name>returns_to_cumulative</name></member>
    <member refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a9d706c009e41c75606af690bb8a04402" kind="function"><name>create_color_palette</name></member>
    <member refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a3772233bf5a782774218332dfd00c6e4" kind="function"><name>format_percentage</name></member>
    <member refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1ab2e071d40e0bebeed6003745d9e99954" kind="function"><name>create_date_labels</name></member>
    <member refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a334e3db0e1fd407756910cf8ce22f689" kind="function"><name>calculate_optimal_bins</name></member>
    <member refid="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a98854b3ad95aee6522e82ceed15d9d7e" kind="function"><name>smooth_data</name></member>
  </compound>
  <compound refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots" kind="namespace"><name>pyfolio::visualization::plots</name>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1a981cbcf53f72481b9b18320b219cc234" kind="function"><name>plot_cumulative_returns</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1ab86160c874bf4c7f967d0559904640f2" kind="function"><name>plot_drawdown</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1a27b792240fa777dbbf59c015d41da840" kind="function"><name>plot_rolling_volatility</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1ac8a279b98991ed3ea1b7ac2851f24420" kind="function"><name>plot_rolling_sharpe</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1aade9a6917e3af43e0fc1696ab75a39cf" kind="function"><name>plot_returns_distribution</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1a3439d8f17883044aeb8d7e12fe34354d" kind="function"><name>plot_monthly_returns_heatmap</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1afa46cdadce86408c709a0e13805c3d27" kind="function"><name>plot_annual_returns</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1a1a18d3d1b56a3a4192d0c44d99188c73" kind="function"><name>plot_correlation_matrix</name></member>
    <member refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1a4eb172588d3fd15e7f4c401192478e78" kind="function"><name>create_performance_dashboard</name></member>
  </compound>
  <compound refid="df/da3/namespacepyfolio_1_1visualization_1_1utils" kind="namespace"><name>pyfolio::visualization::utils</name>
    <member refid="df/da3/namespacepyfolio_1_1visualization_1_1utils_1addf5f76ba7cac9175e083d48d7bce498" kind="function"><name>timeseries_to_plotdata</name></member>
    <member refid="df/da3/namespacepyfolio_1_1visualization_1_1utils_1aafd4e895a7ae4f6f02efa417bfaf70a7" kind="function"><name>calculate_cumulative_returns</name></member>
    <member refid="df/da3/namespacepyfolio_1_1visualization_1_1utils_1aac1bb2e5fa965762011550a97096d437" kind="function"><name>calculate_monthly_returns_matrix</name></member>
    <member refid="df/da3/namespacepyfolio_1_1visualization_1_1utils_1aa8c1ebb6ad8ad64f26aa632ba12bf499" kind="function"><name>calculate_annual_returns</name></member>
    <member refid="df/da3/namespacepyfolio_1_1visualization_1_1utils_1afcba08f454848ff1fc85ee838aa76caa" kind="function"><name>calculate_correlation_matrix</name></member>
  </compound>
  <compound refid="df/d1a/namespacepyfolio_1_1web" kind="namespace"><name>pyfolio::web</name>
    <member refid="df/d1a/namespacepyfolio_1_1web_1add50778298e0a694ecefdd6b06d6fb6e" kind="typedef"><name>json</name></member>
  </compound>
  <compound refid="d8/dcc/namespacestd" kind="namespace"><name>std</name>
  </compound>
  <compound refid="d2/dff/API__REFERENCE_8md" kind="file"><name>API_REFERENCE.md</name>
  </compound>
  <compound refid="d1/dae/DOCUMENTATION__REPORT_8md" kind="file"><name>DOCUMENTATION_REPORT.md</name>
  </compound>
  <compound refid="d6/d06/GETTING__STARTED_8md" kind="file"><name>GETTING_STARTED.md</name>
  </compound>
  <compound refid="db/db5/IMPROVEMENT__TODO__LIST_8md" kind="file"><name>IMPROVEMENT_TODO_LIST.md</name>
  </compound>
  <compound refid="dc/dc6/mainpage_8md" kind="file"><name>mainpage.md</name>
  </compound>
  <compound refid="d8/de4/STATIC__ANALYSIS__REPORT_8md" kind="file"><name>STATIC_ANALYSIS_REPORT.md</name>
  </compound>
  <compound refid="d8/d00/attribution__example_8cpp" kind="file"><name>attribution_example.cpp</name>
    <member refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="d3/d6a/basic__example_8cpp" kind="file"><name>basic_example.cpp</name>
    <member refid="d3/d6a/basic__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="da/d7c/bayesian__analysis__example_8cpp" kind="file"><name>bayesian_analysis_example.cpp</name>
    <member refid="da/d7c/bayesian__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="d1/db6/capacity__analysis__example_8cpp" kind="file"><name>capacity_analysis_example.cpp</name>
    <member refid="d1/db6/capacity__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="d7/d5f/plotly__enhanced__example_8cpp" kind="file"><name>plotly_enhanced_example.cpp</name>
    <member refid="d7/d5f/plotly__enhanced__example_8cpp_1a127f4b66b63cd12df905cc57aece66c4" kind="function"><name>generate_sample_data</name></member>
    <member refid="d7/d5f/plotly__enhanced__example_8cpp_1a702f5ad9e66bc5231d4481eb71da12eb" kind="function"><name>create_sample_portfolio</name></member>
    <member refid="d7/d5f/plotly__enhanced__example_8cpp_1a0790df5197ab4dccf700d2ef54adf47d" kind="function"><name>generate_ohlc_data</name></member>
    <member refid="d7/d5f/plotly__enhanced__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="d1/d43/rest__api__example_8cpp" kind="file"><name>rest_api_example.cpp</name>
    <member refid="d1/d43/rest__api__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="db/dc6/risk__analysis__example_8cpp" kind="file"><name>risk_analysis_example.cpp</name>
    <member refid="db/dc6/risk__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="de/d11/simple__rest__api__example_8cpp" kind="file"><name>simple_rest_api_example.cpp</name>
    <member refid="de/d11/simple__rest__api__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="d7/d56/transaction__analysis__example_8cpp" kind="file"><name>transaction_analysis_example.cpp</name>
    <member refid="d7/d56/transaction__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kind="function"><name>main</name></member>
  </compound>
  <compound refid="d6/dfe/bayesian_8h" kind="file"><name>bayesian.h</name>
  </compound>
  <compound refid="d4/dc1/cached__performance__metrics_8h" kind="file"><name>cached_performance_metrics.h</name>
  </compound>
  <compound refid="d4/d7b/market__indicators_8h" kind="file"><name>market_indicators.h</name>
  </compound>
  <compound refid="dd/d71/parallel__performance__suite_8h" kind="file"><name>parallel_performance_suite.h</name>
  </compound>
  <compound refid="df/de7/performance__analysis__suite_8h" kind="file"><name>performance_analysis_suite.h</name>
  </compound>
  <compound refid="de/d88/performance__metrics_8h" kind="file"><name>performance_metrics.h</name>
  </compound>
  <compound refid="d2/dfc/regime__detection_8h" kind="file"><name>regime_detection.h</name>
  </compound>
  <compound refid="d2/d40/turnover__enhanced_8h" kind="file"><name>turnover_enhanced.h</name>
  </compound>
  <compound refid="da/dd4/attribution_8h" kind="file"><name>attribution.h</name>
  </compound>
  <compound refid="db/d26/capacity_8h" kind="file"><name>capacity.h</name>
  </compound>
  <compound refid="d2/d99/dataframe_8h" kind="file"><name>dataframe.h</name>
  </compound>
  <compound refid="de/d1b/datetime_8h" kind="file"><name>datetime.h</name>
  </compound>
  <compound refid="d3/d11/error__handling_8h" kind="file"><name>error_handling.h</name>
    <member refid="d3/d11/error__handling_8h_1af0b67a381c23d147f539f17465197f32" kind="define"><name>PYFOLIO_TRY</name></member>
    <member refid="d3/d11/error__handling_8h_1a15d605113e4e45105537958ee2cc1463" kind="define"><name>PYFOLIO_TRY_ASSIGN</name></member>
  </compound>
  <compound refid="d8/d51/time__series_8h" kind="file"><name>time_series.h</name>
  </compound>
  <compound refid="d9/d49/types_8h" kind="file"><name>types.h</name>
  </compound>
  <compound refid="d2/db9/data__loader_8h" kind="file"><name>data_loader.h</name>
  </compound>
  <compound refid="d6/d99/simd__math_8h" kind="file"><name>simd_math.h</name>
  </compound>
  <compound refid="d5/db2/analytics_2statistics_8h" kind="file"><name>statistics.h</name>
  </compound>
  <compound refid="d3/dbe/math_2statistics_8h" kind="file"><name>statistics.h</name>
    <member refid="d3/dbe/math_2statistics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kind="define"><name>M_PI</name></member>
  </compound>
  <compound refid="df/d9d/pool__allocator_8h" kind="file"><name>pool_allocator.h</name>
  </compound>
  <compound refid="d9/d36/parallel__algorithms_8h" kind="file"><name>parallel_algorithms.h</name>
  </compound>
  <compound refid="d8/de8/drawdown_8h" kind="file"><name>drawdown.h</name>
  </compound>
  <compound refid="d7/d06/ratios_8h" kind="file"><name>ratios.h</name>
  </compound>
  <compound refid="d4/d73/returns_8h" kind="file"><name>returns.h</name>
  </compound>
  <compound refid="d3/d7e/rolling__metrics_8h" kind="file"><name>rolling_metrics.h</name>
  </compound>
  <compound refid="d0/db7/allocation_8h" kind="file"><name>allocation.h</name>
  </compound>
  <compound refid="d7/d0c/holdings_8h" kind="file"><name>holdings.h</name>
  </compound>
  <compound refid="d0/d04/positions_8h" kind="file"><name>positions.h</name>
  </compound>
  <compound refid="d3/d30/pyfolio_8h" kind="file"><name>pyfolio.h</name>
  </compound>
  <compound refid="d2/d26/interesting__periods_8h" kind="file"><name>interesting_periods.h</name>
  </compound>
  <compound refid="d3/d66/tears_8h" kind="file"><name>tears.h</name>
  </compound>
  <compound refid="d4/da5/factor__exposure_8h" kind="file"><name>factor_exposure.h</name>
  </compound>
  <compound refid="df/d46/var_8h" kind="file"><name>var.h</name>
  </compound>
  <compound refid="d7/d00/round__trips_8h" kind="file"><name>round_trips.h</name>
  </compound>
  <compound refid="dd/d45/trading__costs_8h" kind="file"><name>trading_costs.h</name>
  </compound>
  <compound refid="d0/db6/transaction_8h" kind="file"><name>transaction.h</name>
  </compound>
  <compound refid="d2/d59/intraday_8h" kind="file"><name>intraday.h</name>
  </compound>
  <compound refid="db/d38/validation_8h" kind="file"><name>validation.h</name>
  </compound>
  <compound refid="dc/d16/matplotlib__integration_8h" kind="file"><name>matplotlib_integration.h</name>
  </compound>
  <compound refid="d1/dcd/plotly__enhanced_8h" kind="file"><name>plotly_enhanced.h</name>
  </compound>
  <compound refid="d3/df8/plotting_8h" kind="file"><name>plotting.h</name>
  </compound>
  <compound refid="d4/d45/json__serializer_8h" kind="file"><name>json_serializer.h</name>
  </compound>
  <compound refid="de/de7/rest__api__server_8h" kind="file"><name>rest_api_server.h</name>
  </compound>
  <compound refid="df/d95/simd__math_8cpp" kind="file"><name>simd_math.cpp</name>
  </compound>
  <compound refid="dc/d51/intraday_8cpp" kind="file"><name>intraday.cpp</name>
  </compound>
  <compound refid="d2/dd1/plotly__enhanced_8cpp" kind="file"><name>plotly_enhanced.cpp</name>
  </compound>
  <compound refid="d0/d31/md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2API__REFERENCE" kind="page"><name>md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2API__REFERENCE</name>
  </compound>
  <compound refid="d6/de2/md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2DOCUMENTATION__REPORT" kind="page"><name>md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2DOCUMENTATION__REPORT</name>
  </compound>
  <compound refid="dc/d56/md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2GETTING__STARTED" kind="page"><name>md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2GETTING__STARTED</name>
  </compound>
  <compound refid="d1/dcd/md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2IMPROVEMENT__TODO__LIST" kind="page"><name>md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2IMPROVEMENT__TODO__LIST</name>
  </compound>
  <compound refid="d9/df0/md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2STATIC__ANALYSIS__REPORT" kind="page"><name>md__2Users_2yunjinqi_2Documents_2source__code_2pyfolio__cpp_2docs_2STATIC__ANALYSIS__REPORT</name>
  </compound>
  <compound refid="dir_e34c41e9c1266fa77d10bbc7fbf7c5b5" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics</name>
  </compound>
  <compound refid="dir_e2d8eb59473f4fca41812091e7509983" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution</name>
  </compound>
  <compound refid="dir_6d814591c8d7601993b3b77df729f3fe" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity</name>
  </compound>
  <compound refid="dir_bf97ca774b4ebc067669820e709a5f9b" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core</name>
  </compound>
  <compound refid="dir_49e56c817e5e54854c35e136979f97ca" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/docs</name>
  </compound>
  <compound refid="dir_d28a4824dc47e487b107a5db32ef43c4" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples</name>
  </compound>
  <compound refid="dir_d44c64559bbebec7f509842c48db8b23" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include</name>
  </compound>
  <compound refid="dir_504f73da4720fc1bf2f3e3557f41faa1" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io</name>
  </compound>
  <compound refid="dir_9487dc69cf60af18be4d131f45f44673" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math</name>
  </compound>
  <compound refid="dir_ae9a93452e2a84339148a16bcf2eb561" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/math</name>
  </compound>
  <compound refid="dir_bd32e822b09ca332cc7d0d79547ff296" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory</name>
  </compound>
  <compound refid="dir_77ec3743dc797dd203103fb100b607d9" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel</name>
  </compound>
  <compound refid="dir_c8797bfb849775fa90e2003559e1dc74" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance</name>
  </compound>
  <compound refid="dir_775fd81b08cdeb446682e0715289e4dd" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions</name>
  </compound>
  <compound refid="dir_4e33d1eb43dcd61f8cc04918f1e0a3ff" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio</name>
  </compound>
  <compound refid="dir_394498176d72399809ac23ab209b0f13" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/reporting</name>
  </compound>
  <compound refid="dir_6b815546ea83a706da6c236f0df0a206" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/risk</name>
  </compound>
  <compound refid="dir_68267d1309a1af8e8297ef4c3efbcdba" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src</name>
  </compound>
  <compound refid="dir_89d06b7c9a055734b1db89692e3066b7" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions</name>
  </compound>
  <compound refid="dir_77b3f75cd1c38c8722b6becd96a8cfe6" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils</name>
  </compound>
  <compound refid="dir_313caf1132e152dd9b58bea13a4052ca" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils</name>
  </compound>
  <compound refid="dir_19ecdf3c49fc77657b86c001bb6f1d99" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization</name>
  </compound>
  <compound refid="dir_b00de47ad7e2e13a637d9aa605dec95e" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization</name>
  </compound>
  <compound refid="dir_33df75d5c2270a591109cd9cc85fbc08" kind="dir"><name>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web</name>
  </compound>
  <compound refid="indexpage" kind="page"><name>index</name>
  </compound>
</doxygenindex>
