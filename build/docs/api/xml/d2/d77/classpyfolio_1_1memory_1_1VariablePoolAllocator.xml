<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::memory::VariablePoolAllocator</compoundname>
    <includes refid="df/d9d/pool__allocator_8h" local="no">pool_allocator.h</includes>
    <innerclass refid="d9/d3f/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Block" prot="private">pyfolio::memory::VariablePoolAllocator::Block</innerclass>
    <innerclass refid="da/de5/structpyfolio_1_1memory_1_1VariablePoolAllocator_1_1Pool" prot="private">pyfolio::memory::VariablePoolAllocator::Pool</innerclass>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a006654a4a2a03ef57af124dd52af7ca5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::memory::VariablePoolAllocator::default_pool_size</definition>
        <argsstring></argsstring>
        <name>default_pool_size</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::default_pool_size</qualifiedname>
        <initializer>= 1024 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="185" column="29" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="185" bodyend="-1"/>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" compoundref="df/d9d/pool__allocator_8h" startline="223" endline="227">VariablePoolAllocator</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a6ca49de11305ad54c9e6b990d039108b" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::memory::VariablePoolAllocator::max_allocation_size</definition>
        <argsstring></argsstring>
        <name>max_allocation_size</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::max_allocation_size</qualifiedname>
        <initializer>= 64 * 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="186" column="29" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="186" bodyend="-1"/>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1adec783ebd0bdd6832bc75687acfd5d61" compoundref="df/d9d/pool__allocator_8h" startline="240" endline="269">allocate</referencedby>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a7dd3fd22b0e7c29c5d99268a0cfc8714" compoundref="df/d9d/pool__allocator_8h" startline="296" endline="312">get_stats</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a047cd4392acbe0494d90b3ee860952d4" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::memory::VariablePoolAllocator::alignment</definition>
        <argsstring></argsstring>
        <name>alignment</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::alignment</qualifiedname>
        <initializer>= 16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="187" column="29" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="187" bodyend="-1"/>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1adec783ebd0bdd6832bc75687acfd5d61" compoundref="df/d9d/pool__allocator_8h" startline="240" endline="269">allocate</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a1eaf7e8eda84e3dd3ba1d2e7f53c746a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; Pool &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;Pool&gt; &gt; pyfolio::memory::VariablePoolAllocator::pools_</definition>
        <argsstring></argsstring>
        <name>pools_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::pools_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="214" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a307640f9e439cd87c96413ec3c9f49d0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::memory::VariablePoolAllocator::pool_size_</definition>
        <argsstring></argsstring>
        <name>pool_size_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::pool_size_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="215" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a58d6fbc3b19c751fdf8196f00440482d" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; pyfolio::memory::VariablePoolAllocator::total_allocated_</definition>
        <argsstring></argsstring>
        <name>total_allocated_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::total_allocated_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="216" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a207ddf8a974a9c6f42a06366c1fd562e" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; pyfolio::memory::VariablePoolAllocator::total_used_</definition>
        <argsstring></argsstring>
        <name>total_used_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::total_used_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="217" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a5f7f9522de44b8f5d77250d8ae8bc474" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; pyfolio::memory::VariablePoolAllocator::num_allocations_</definition>
        <argsstring></argsstring>
        <name>num_allocations_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::num_allocations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="218" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ad54df937435b5c516f0bc927e58f320f" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; pyfolio::memory::VariablePoolAllocator::num_deallocations_</definition>
        <argsstring></argsstring>
        <name>num_deallocations_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::num_deallocations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="219" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0e729393405ee9f563d911882d5ebd16" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex pyfolio::memory::VariablePoolAllocator::mutex_</definition>
        <argsstring></argsstring>
        <name>mutex_</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::mutex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="220" column="16" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="220" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::memory::VariablePoolAllocator::VariablePoolAllocator</definition>
        <argsstring>(size_t pool_size=default_pool_size)</argsstring>
        <name>VariablePoolAllocator</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::VariablePoolAllocator</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>pool_size</declname>
          <defval><ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a006654a4a2a03ef57af124dd52af7ca5" kindref="member">default_pool_size</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="223" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="223" bodyend="227"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a006654a4a2a03ef57af124dd52af7ca5" compoundref="df/d9d/pool__allocator_8h" startline="185">default_pool_size</references>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a2924d89d89693e11673c38f7be80b8aa">operator=</referencedby>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a88db0fe3917b638a46e1c7593fadaf7f">operator=</referencedby>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0738402bef4c4b84fc8c3eb836483ab0">VariablePoolAllocator</referencedby>
        <referencedby refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ac1baed95d0a8c8bd9148c544850c8651">VariablePoolAllocator</referencedby>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a83fcc990082e0e9c073255fa1b775794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pyfolio::memory::VariablePoolAllocator::~VariablePoolAllocator</definition>
        <argsstring>()=default</argsstring>
        <name>~VariablePoolAllocator</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::~VariablePoolAllocator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="229" column="5"/>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0738402bef4c4b84fc8c3eb836483ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pyfolio::memory::VariablePoolAllocator::VariablePoolAllocator</definition>
        <argsstring>(const VariablePoolAllocator &amp;)=delete</argsstring>
        <name>VariablePoolAllocator</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::VariablePoolAllocator</qualifiedname>
        <param>
          <type>const <ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kindref="compound">VariablePoolAllocator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="232" column="5"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" compoundref="df/d9d/pool__allocator_8h" startline="223" endline="227">VariablePoolAllocator</references>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a2924d89d89693e11673c38f7be80b8aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kindref="compound">VariablePoolAllocator</ref> &amp;</type>
        <definition>VariablePoolAllocator &amp; pyfolio::memory::VariablePoolAllocator::operator=</definition>
        <argsstring>(const VariablePoolAllocator &amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::operator=</qualifiedname>
        <param>
          <type>const <ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kindref="compound">VariablePoolAllocator</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="233" column="27"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" compoundref="df/d9d/pool__allocator_8h" startline="223" endline="227">VariablePoolAllocator</references>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ac1baed95d0a8c8bd9148c544850c8651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pyfolio::memory::VariablePoolAllocator::VariablePoolAllocator</definition>
        <argsstring>(VariablePoolAllocator &amp;&amp;)=delete</argsstring>
        <name>VariablePoolAllocator</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::VariablePoolAllocator</qualifiedname>
        <param>
          <type><ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kindref="compound">VariablePoolAllocator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="234" column="5"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" compoundref="df/d9d/pool__allocator_8h" startline="223" endline="227">VariablePoolAllocator</references>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a88db0fe3917b638a46e1c7593fadaf7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kindref="compound">VariablePoolAllocator</ref> &amp;</type>
        <definition>VariablePoolAllocator &amp; pyfolio::memory::VariablePoolAllocator::operator=</definition>
        <argsstring>(VariablePoolAllocator &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::operator=</qualifiedname>
        <param>
          <type><ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator" kindref="compound">VariablePoolAllocator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="235" column="27"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" compoundref="df/d9d/pool__allocator_8h" startline="223" endline="227">VariablePoolAllocator</references>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1adec783ebd0bdd6832bc75687acfd5d61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * pyfolio::memory::VariablePoolAllocator::allocate</definition>
        <argsstring>(size_t size, size_t align=alignment)</argsstring>
        <name>allocate</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::allocate</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>align</declname>
          <defval><ref refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a047cd4392acbe0494d90b3ee860952d4" kindref="member">alignment</ref></defval>
        </param>
        <briefdescription>
<para>Allocate memory of specified size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="240" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="240" bodyend="269"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a047cd4392acbe0494d90b3ee860952d4" compoundref="df/d9d/pool__allocator_8h" startline="187">alignment</references>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a6ca49de11305ad54c9e6b990d039108b" compoundref="df/d9d/pool__allocator_8h" startline="186">max_allocation_size</references>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a9d037847668bd5f0fe2c8ffa0d558107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::memory::VariablePoolAllocator::deallocate</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>deallocate</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::deallocate</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Deallocate memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="274" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="274" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a7dd3fd22b0e7c29c5d99268a0cfc8714" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="d9/d8e/structpyfolio_1_1memory_1_1PoolStats" kindref="compound">PoolStats</ref></type>
        <definition>PoolStats pyfolio::memory::VariablePoolAllocator::get_stats</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get_stats</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::get_stats</qualifiedname>
        <briefdescription>
<para>Get allocation statistics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="296" column="15" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="296" bodyend="312"/>
        <references refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a6ca49de11305ad54c9e6b990d039108b" compoundref="df/d9d/pool__allocator_8h" startline="186">max_allocation_size</references>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ad02a51fcb35878b75c3c2309a752e859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::memory::VariablePoolAllocator::defragment</definition>
        <argsstring>()</argsstring>
        <name>defragment</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::defragment</qualifiedname>
        <briefdescription>
<para>Cleanup fragmented memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="317" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="317" bodyend="324"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a52af7d3e1660a633e00c2181ca024893" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::memory::VariablePoolAllocator::add_pool</definition>
        <argsstring>()</argsstring>
        <name>add_pool</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::add_pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="327" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a9ae80d7b322774fce451d6fa28a96e29" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void * pyfolio::memory::VariablePoolAllocator::allocate_from_pool</definition>
        <argsstring>(Pool &amp;pool, size_t size)</argsstring>
        <name>allocate_from_pool</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::allocate_from_pool</qualifiedname>
        <param>
          <type>Pool &amp;</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="333" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="333" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1af71cab5efafec041b983fdb48d449787" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::memory::VariablePoolAllocator::deallocate_from_pool</definition>
        <argsstring>(Pool &amp;pool, void *ptr)</argsstring>
        <name>deallocate_from_pool</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::deallocate_from_pool</qualifiedname>
        <param>
          <type>Pool &amp;</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="365" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="365" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a4ef9dab0cfef75cdbe8a19e487ad8887" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::memory::VariablePoolAllocator::owns_pointer</definition>
        <argsstring>(const Pool &amp;pool, const void *ptr) const</argsstring>
        <name>owns_pointer</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::owns_pointer</qualifiedname>
        <param>
          <type>const Pool &amp;</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="376" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="376" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ab700cba4a68deefb13a59e3fa006e162" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::memory::VariablePoolAllocator::coalesce_free_blocks</definition>
        <argsstring>(Pool &amp;pool)</argsstring>
        <name>coalesce_free_blocks</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::coalesce_free_blocks</qualifiedname>
        <param>
          <type>Pool &amp;</type>
          <declname>pool</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="384" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="384" bodyend="422"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1aa85bf5ccd3562ce9918014e09c75fd88" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t pyfolio::memory::VariablePoolAllocator::align_size</definition>
        <argsstring>(size_t size, size_t align)</argsstring>
        <name>align_size</name>
        <qualifiedname>pyfolio::memory::VariablePoolAllocator::align_size</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="424" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="424" bodyend="424"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Variable-size memory pool allocator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" line="183" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/memory/pool_allocator.h" bodystart="183" bodyend="425"/>
    <listofallmembers>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a52af7d3e1660a633e00c2181ca024893" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>add_pool</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1aa85bf5ccd3562ce9918014e09c75fd88" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>align_size</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a047cd4392acbe0494d90b3ee860952d4" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>alignment</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1adec783ebd0bdd6832bc75687acfd5d61" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>allocate</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a9ae80d7b322774fce451d6fa28a96e29" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>allocate_from_pool</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ab700cba4a68deefb13a59e3fa006e162" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>coalesce_free_blocks</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a9d037847668bd5f0fe2c8ffa0d558107" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>deallocate</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1af71cab5efafec041b983fdb48d449787" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>deallocate_from_pool</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a006654a4a2a03ef57af124dd52af7ca5" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>default_pool_size</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ad02a51fcb35878b75c3c2309a752e859" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>defragment</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a7dd3fd22b0e7c29c5d99268a0cfc8714" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>get_stats</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a6ca49de11305ad54c9e6b990d039108b" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>max_allocation_size</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0e729393405ee9f563d911882d5ebd16" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>mutex_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a5f7f9522de44b8f5d77250d8ae8bc474" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>num_allocations_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ad54df937435b5c516f0bc927e58f320f" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>num_deallocations_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a2924d89d89693e11673c38f7be80b8aa" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>operator=</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a88db0fe3917b638a46e1c7593fadaf7f" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>operator=</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a4ef9dab0cfef75cdbe8a19e487ad8887" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>owns_pointer</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a307640f9e439cd87c96413ec3c9f49d0" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>pool_size_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a1eaf7e8eda84e3dd3ba1d2e7f53c746a" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>pools_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a58d6fbc3b19c751fdf8196f00440482d" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>total_allocated_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a207ddf8a974a9c6f42a06366c1fd562e" prot="private" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>total_used_</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a8d64d648c710957aea98904d5dee8650" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>VariablePoolAllocator</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a0738402bef4c4b84fc8c3eb836483ab0" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>VariablePoolAllocator</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1ac1baed95d0a8c8bd9148c544850c8651" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>VariablePoolAllocator</name></member>
      <member refid="d2/d77/classpyfolio_1_1memory_1_1VariablePoolAllocator_1a83fcc990082e0e9c073255fa1b775794" prot="public" virt="non-virtual"><scope>pyfolio::memory::VariablePoolAllocator</scope><name>~VariablePoolAllocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
