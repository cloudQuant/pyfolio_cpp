<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::attribution::AlphaBetaAnalysis</compoundname>
    <includes refid="da/dd4/attribution_8h" local="no">attribution.h</includes>
    <innerclass refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult" prot="public">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult</innerclass>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult" kindref="compound">AlphaBetaResult</ref> &gt;</type>
        <definition>Result&lt; AlphaBetaResult &gt; pyfolio::attribution::AlphaBetaAnalysis::calculate</definition>
        <argsstring>(const ReturnSeries &amp;portfolio_returns, const ReturnSeries &amp;benchmark_returns, double risk_free_rate=constants::DEFAULT_RISK_FREE_RATE) const</argsstring>
        <name>calculate</name>
        <qualifiedname>pyfolio::attribution::AlphaBetaAnalysis::calculate</qualifiedname>
        <param>
          <type>const <ref refid="d7/df8/namespacepyfolio_1a3376bad8167ed5bb04f22ab12dda9446" kindref="member">ReturnSeries</ref> &amp;</type>
          <declname>portfolio_returns</declname>
        </param>
        <param>
          <type>const <ref refid="d7/df8/namespacepyfolio_1a3376bad8167ed5bb04f22ab12dda9446" kindref="member">ReturnSeries</ref> &amp;</type>
          <declname>benchmark_returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>risk_free_rate</declname>
          <defval><ref refid="db/d9c/namespacepyfolio_1_1constants_1a6b629b058e12e9c8e6b1c39036389ddf" kindref="member">constants::DEFAULT_RISK_FREE_RATE</ref></defval>
        </param>
        <briefdescription>
<para>Calculate alpha and beta vs benchmark. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="417" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="417" bodyend="484"/>
        <references refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1ad37262010c03f54c2a8fb0444de158a1" compoundref="da/dd4/attribution_8h" startline="409">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult::active_return</references>
        <references refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a8ac9e2b0cb92b5b59f234c4f4271ae1a" compoundref="da/dd4/attribution_8h" startline="405">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult::beta</references>
        <references refid="d8/dd9/namespacepyfolio_1_1performance_1a0b36bd99af8d88af1dc5578ef684c6e8" compoundref="d4/d73/returns_8h" startline="83" endline="97">pyfolio::performance::calculate_excess_returns</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="db/d9c/namespacepyfolio_1_1constants_1a6b629b058e12e9c8e6b1c39036389ddf" compoundref="d9/d49/types_8h" startline="65">pyfolio::constants::DEFAULT_RISK_FREE_RATE</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1af4dd7d95f36605e3733e29fed79d657f" compoundref="da/dd4/attribution_8h" startline="408">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult::information_ratio</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="d6/ddc/namespacepyfolio_1_1stats_1a0ded7b265023215831bffb8b799ba59a" compoundref="d3/dbe/math_2statistics_8h" startline="112" endline="119">pyfolio::stats::mean</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" compoundref="d8/d51/time__series_8h" startline="102" endline="102">pyfolio::TimeSeries&lt; T &gt;::size</references>
        <references refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a2cf02a111b19b5e14f172656a2f89fda" compoundref="da/dd4/attribution_8h" startline="411">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult::specific_risk</references>
        <references refid="d6/ddc/namespacepyfolio_1_1stats_1ae9a69383818faf0de2b2e0a99d4179d9" compoundref="d3/dbe/math_2statistics_8h" startline="151" endline="158">pyfolio::stats::standard_deviation</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1a68f6ed1ac77d0c54b824d89c6d598d52" compoundref="da/dd4/attribution_8h" startline="410">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult::systematic_risk</references>
        <references refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult_1abdc71904641a095d8c7acbfcd8060c5a" compoundref="da/dd4/attribution_8h" startline="407">pyfolio::attribution::AlphaBetaAnalysis::AlphaBetaResult::tracking_error</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
        <referencedby refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d8/d00/attribution__example_8cpp" startline="8" endline="236">main</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1a84a2e38da92d0bb2830d5c347c09ddab" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/dbd/structpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1_1AlphaBetaResult" kindref="compound">AlphaBetaResult</ref> &gt;</type>
        <definition>Result&lt; AlphaBetaResult &gt; pyfolio::attribution::AlphaBetaAnalysis::linear_regression</definition>
        <argsstring>(const std::vector&lt; Return &gt; &amp;x, const std::vector&lt; Return &gt; &amp;y) const</argsstring>
        <name>linear_regression</name>
        <qualifiedname>pyfolio::attribution::AlphaBetaAnalysis::linear_regression</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="487" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="487" bodyend="520"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Alpha/Beta decomposition analysis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="401" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="401" bodyend="521"/>
    <listofallmembers>
      <member refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" prot="public" virt="non-virtual"><scope>pyfolio::attribution::AlphaBetaAnalysis</scope><name>calculate</name></member>
      <member refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1a84a2e38da92d0bb2830d5c347c09ddab" prot="private" virt="non-virtual"><scope>pyfolio::attribution::AlphaBetaAnalysis</scope><name>linear_regression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
