<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::transactions::TransactionSeries</compoundname>
    <includes refid="d0/db6/transaction_8h" local="no">transaction.h</includes>
    <innerclass refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" prot="public">pyfolio::transactions::TransactionSeries::TransactionStatistics</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" prot="public" static="no">
        <type>std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt;::iterator</type>
        <definition>using pyfolio::transactions::TransactionSeries::iterator =  std::vector&lt;TransactionRecord&gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="150" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" prot="public" static="no">
        <type>std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt;::const_iterator</type>
        <definition>using pyfolio::transactions::TransactionSeries::const_iterator =  std::vector&lt;TransactionRecord&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="151" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="151" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a11620f055375cd3384431ac923c90891" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt;</type>
        <definition>std::vector&lt;TransactionRecord&gt; pyfolio::transactions::TransactionSeries::transactions_</definition>
        <argsstring></argsstring>
        <name>transactions_</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::transactions_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="142" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="142" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2764e4857132a7e4d68f23774319254c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::transactions::TransactionSeries::sort_by_timestamp</definition>
        <argsstring>()</argsstring>
        <name>sort_by_timestamp</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::sort_by_timestamp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="144" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="144" bodyend="147"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pyfolio::transactions::TransactionSeries::TransactionSeries</definition>
        <argsstring>()=default</argsstring>
        <name>TransactionSeries</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::TransactionSeries</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="154" column="5"/>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" compoundref="d0/db6/transaction_8h" startline="211" endline="219">filter_by_date_range</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" compoundref="d0/db6/transaction_8h" startline="199" endline="206">filter_by_symbol</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a634c4e1cd3f544e76506eb93b727c159" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::transactions::TransactionSeries::TransactionSeries</definition>
        <argsstring>(const std::vector&lt; TransactionRecord &gt; &amp;transactions)</argsstring>
        <name>TransactionSeries</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::TransactionSeries</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt; &amp;</type>
          <declname>transactions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="156" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2e055702744625143626e1c3bb60ddb1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::transactions::TransactionSeries::TransactionSeries</definition>
        <argsstring>(std::vector&lt; TransactionRecord &gt; &amp;&amp;transactions)</argsstring>
        <name>TransactionSeries</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::TransactionSeries</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt; &amp;&amp;</type>
          <declname>transactions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="160" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t pyfolio::transactions::TransactionSeries::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="165" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="165" bodyend="165"/>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" compoundref="d7/d0c/holdings_8h" startline="288" endline="368">pyfolio::positions::HoldingsSeries::build_from_transactions</referencedby>
        <referencedby refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d8/d00/attribution__example_8cpp" startline="8" endline="236">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::transactions::TransactionSeries::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="166" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="166" bodyend="166"/>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a51f62a2444cfc74dbe0a9828c1ca84da" compoundref="d0/db6/transaction_8h" startline="358" endline="370">aggregate_by_symbol</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae01ac1b99dd7d89c0eaefbe22f04b1f2" compoundref="d0/db6/transaction_8h" startline="340" endline="353">aggregate_daily</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" compoundref="d0/db6/transaction_8h" startline="408" endline="419">average_transaction_size</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" compoundref="d7/d0c/holdings_8h" startline="288" endline="368">pyfolio::positions::HoldingsSeries::build_from_transactions</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" compoundref="d0/db6/transaction_8h" startline="435" endline="466">calculate_statistics</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" compoundref="d0/db6/transaction_8h" startline="471" endline="478">calculate_transaction_costs</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" compoundref="d0/db6/transaction_8h" startline="288" endline="335">daily_summary</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" compoundref="d0/db6/transaction_8h" startline="391" endline="403">net_shares_by_symbol</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" compoundref="d0/db6/transaction_8h" startline="483" endline="512">to_dataframe</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" compoundref="d0/db6/transaction_8h" startline="375" endline="386">total_notional_value</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac6b2dff2b7e435b8bbe8cfc922499cbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &amp;</type>
        <definition>const TransactionRecord &amp; pyfolio::transactions::TransactionSeries::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="169" column="29" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af8f76dbec2f1d5e4d8dc4eb3b077efd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &amp;</type>
        <definition>TransactionRecord &amp; pyfolio::transactions::TransactionSeries::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="170" column="23" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1fdd056e5bb444f999e769d8c34c8347" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &amp;</type>
        <definition>const TransactionRecord &amp; pyfolio::transactions::TransactionSeries::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="172" column="29" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ad19e978acf19a75a03cb0a244863d718" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &amp;</type>
        <definition>const TransactionRecord &amp; pyfolio::transactions::TransactionSeries::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="173" column="29" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="173" bodyend="173"/>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" compoundref="d7/d0c/holdings_8h" startline="288" endline="368">pyfolio::positions::HoldingsSeries::build_from_transactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1c7fed62cfc06ad403726bc4238ec70c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" kindref="member">iterator</ref></type>
        <definition>iterator pyfolio::transactions::TransactionSeries::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="176" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af522fa60fea545128a704157c2c2c9b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" kindref="member">const_iterator</ref></type>
        <definition>const_iterator pyfolio::transactions::TransactionSeries::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="177" column="20" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" kindref="member">iterator</ref></type>
        <definition>iterator pyfolio::transactions::TransactionSeries::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="178" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="178" bodyend="178"/>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" compoundref="d0/db6/transaction_8h" startline="211" endline="219">filter_by_date_range</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a968060d822c816dfca8a17a1858a268b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" kindref="member">const_iterator</ref></type>
        <definition>const_iterator pyfolio::transactions::TransactionSeries::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="179" column="20" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; void &gt;</type>
        <definition>Result&lt; void &gt; pyfolio::transactions::TransactionSeries::add_transaction</definition>
        <argsstring>(const TransactionRecord &amp;transaction)</argsstring>
        <name>add_transaction</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::add_transaction</qualifiedname>
        <param>
          <type>const <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &amp;</type>
          <declname>transaction</declname>
        </param>
        <briefdescription>
<para>Add a transaction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="184" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="184" bodyend="194"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" compoundref="d0/db6/transaction_8h" startline="116" endline="134">pyfolio::transactions::TransactionRecord::validate</references>
        <referencedby refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d8/d00/attribution__example_8cpp" startline="8" endline="236">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kindref="compound">TransactionSeries</ref> &gt;</type>
        <definition>Result&lt; TransactionSeries &gt; pyfolio::transactions::TransactionSeries::filter_by_symbol</definition>
        <argsstring>(const Symbol &amp;symbol) const</argsstring>
        <name>filter_by_symbol</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::filter_by_symbol</qualifiedname>
        <param>
          <type>const <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Filter transactions by symbol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="199" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="199" bodyend="206"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720">TransactionSeries</references>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" compoundref="d0/db6/transaction_8h" startline="272" endline="283">group_by_symbol</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kindref="compound">TransactionSeries</ref> &gt;</type>
        <definition>Result&lt; TransactionSeries &gt; pyfolio::transactions::TransactionSeries::filter_by_date_range</definition>
        <argsstring>(const DateTime &amp;start, const DateTime &amp;end) const</argsstring>
        <name>filter_by_date_range</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::filter_by_date_range</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Filter transactions by date range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="211" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="211" bodyend="219"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" compoundref="d0/db6/transaction_8h" startline="178" endline="178">end</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720">TransactionSeries</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref> &gt;</type>
        <definition>std::vector&lt; Symbol &gt; pyfolio::transactions::TransactionSeries::get_symbols</definition>
        <argsstring>() const</argsstring>
        <name>get_symbols</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::get_symbols</qualifiedname>
        <briefdescription>
<para>Get unique symbols. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="224" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="224" bodyend="232"/>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" compoundref="d0/db6/transaction_8h" startline="435" endline="466">calculate_statistics</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" compoundref="d0/db6/transaction_8h" startline="288" endline="335">daily_summary</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" compoundref="d0/db6/transaction_8h" startline="272" endline="283">group_by_symbol</referencedby>
        <referencedby refid="d7/d56/transaction__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d56/transaction__analysis__example_8cpp" startline="10" endline="196">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8ed92f3472d3597805939fae6af33b79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double pyfolio::transactions::TransactionSeries::total_value</definition>
        <argsstring>() const</argsstring>
        <name>total_value</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::total_value</qualifiedname>
        <briefdescription>
<para>Calculate total value traded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="237" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="237" bodyend="240"/>
        <referencedby refid="d7/d56/transaction__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d56/transaction__analysis__example_8cpp" startline="10" endline="196">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af3c9618e9b0d73c0e47a2b0cdf2f68f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double pyfolio::transactions::TransactionSeries::total_commissions</definition>
        <argsstring>() const</argsstring>
        <name>total_commissions</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::total_commissions</qualifiedname>
        <briefdescription>
<para>Calculate total commissions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="245" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="245" bodyend="248"/>
        <referencedby refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a84fbbb0329da81e8a4e9718be438dfb0" compoundref="de/de7/rest__api__server_8h" startline="307" endline="369">pyfolio::web::RestApiServer::handle_transaction_analysis</referencedby>
        <referencedby refid="d7/d56/transaction__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d56/transaction__analysis__example_8cpp" startline="10" endline="196">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5f7a2e489f84ec338f391ebed7267335" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double pyfolio::transactions::TransactionSeries::total_slippage</definition>
        <argsstring>() const</argsstring>
        <name>total_slippage</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::total_slippage</qualifiedname>
        <briefdescription>
<para>Calculate total slippage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="253" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="253" bodyend="257"/>
        <referencedby refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a84fbbb0329da81e8a4e9718be438dfb0" compoundref="de/de7/rest__api__server_8h" startline="307" endline="369">pyfolio::web::RestApiServer::handle_transaction_analysis</referencedby>
        <referencedby refid="d7/d56/transaction__analysis__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d56/transaction__analysis__example_8cpp" startline="10" endline="196">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref></type>
        <definition>Shares pyfolio::transactions::TransactionSeries::net_shares</definition>
        <argsstring>(const Symbol &amp;symbol) const</argsstring>
        <name>net_shares</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::net_shares</qualifiedname>
        <param>
          <type>const <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Calculate net shares for a symbol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="262" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="262" bodyend="267"/>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" compoundref="d0/db6/transaction_8h" startline="391" endline="403">net_shares_by_symbol</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, <ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kindref="compound">TransactionSeries</ref> &gt;</type>
        <definition>std::map&lt; Symbol, TransactionSeries &gt; pyfolio::transactions::TransactionSeries::group_by_symbol</definition>
        <argsstring>() const</argsstring>
        <name>group_by_symbol</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::group_by_symbol</qualifiedname>
        <briefdescription>
<para>Group transactions by symbol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="272" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="272" bodyend="283"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" compoundref="d0/db6/transaction_8h" startline="199" endline="206">filter_by_symbol</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" compoundref="d0/db6/transaction_8h" startline="224" endline="232">get_symbols</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::transactions::TransactionSeries::daily_summary</definition>
        <argsstring>() const</argsstring>
        <name>daily_summary</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::daily_summary</qualifiedname>
        <briefdescription>
<para>Calculate daily transaction summary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="288" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="288" bodyend="335"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" compoundref="d2/d99/dataframe_8h" startline="88" endline="101">pyfolio::DataFrame::add_column</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" compoundref="d0/db6/transaction_8h" startline="224" endline="232">get_symbols</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae01ac1b99dd7d89c0eaefbe22f04b1f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::map&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>, std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt; &gt; &gt;</type>
        <definition>Result&lt; std::map&lt; DateTime, std::vector&lt; TransactionRecord &gt; &gt; &gt; pyfolio::transactions::TransactionSeries::aggregate_daily</definition>
        <argsstring>() const</argsstring>
        <name>aggregate_daily</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::aggregate_daily</qualifiedname>
        <briefdescription>
<para>Aggregate transactions by day. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="340" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="340" bodyend="353"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a51f62a2444cfc74dbe0a9828c1ca84da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref> &gt; &gt; &gt;</type>
        <definition>Result&lt; std::map&lt; Symbol, std::vector&lt; TransactionRecord &gt; &gt; &gt; pyfolio::transactions::TransactionSeries::aggregate_by_symbol</definition>
        <argsstring>() const</argsstring>
        <name>aggregate_by_symbol</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::aggregate_by_symbol</qualifiedname>
        <briefdescription>
<para>Aggregate transactions by symbol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="358" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="358" bodyend="370"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>Result&lt; double &gt; pyfolio::transactions::TransactionSeries::total_notional_value</definition>
        <argsstring>() const</argsstring>
        <name>total_notional_value</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::total_notional_value</qualifiedname>
        <briefdescription>
<para>Calculate total notional value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="375" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="375" bodyend="386"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" compoundref="d0/db6/transaction_8h" startline="408" endline="419">average_transaction_size</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" compoundref="d0/db6/transaction_8h" startline="435" endline="466">calculate_statistics</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &gt;</type>
        <definition>Result&lt; std::map&lt; Symbol, double &gt; &gt; pyfolio::transactions::TransactionSeries::net_shares_by_symbol</definition>
        <argsstring>() const</argsstring>
        <name>net_shares_by_symbol</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::net_shares_by_symbol</qualifiedname>
        <briefdescription>
<para>Calculate net shares by symbol. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="391" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="391" bodyend="403"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" compoundref="d0/db6/transaction_8h" startline="262" endline="267">net_shares</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>Result&lt; double &gt; pyfolio::transactions::TransactionSeries::average_transaction_size</definition>
        <argsstring>() const</argsstring>
        <name>average_transaction_size</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::average_transaction_size</qualifiedname>
        <briefdescription>
<para>Calculate average transaction size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="408" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="408" bodyend="419"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" compoundref="d0/db6/transaction_8h" startline="375" endline="386">total_notional_value</references>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" compoundref="d0/db6/transaction_8h" startline="435" endline="466">calculate_statistics</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" kindref="compound">TransactionStatistics</ref> &gt;</type>
        <definition>Result&lt; TransactionStatistics &gt; pyfolio::transactions::TransactionSeries::calculate_statistics</definition>
        <argsstring>() const</argsstring>
        <name>calculate_statistics</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::calculate_statistics</qualifiedname>
        <briefdescription>
<para>Calculate transaction statistics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="435" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="435" bodyend="466"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" compoundref="d0/db6/transaction_8h" startline="408" endline="419">average_transaction_size</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" compoundref="d0/db6/transaction_8h" startline="224" endline="232">get_symbols</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" compoundref="d0/db6/transaction_8h" startline="375" endline="386">total_notional_value</references>
        <referencedby refid="d8/d0c/classpyfolio_1_1web_1_1RestApiServer_1a84fbbb0329da81e8a4e9718be438dfb0" compoundref="de/de7/rest__api__server_8h" startline="307" endline="369">pyfolio::web::RestApiServer::handle_transaction_analysis</referencedby>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>Result&lt; double &gt; pyfolio::transactions::TransactionSeries::calculate_transaction_costs</definition>
        <argsstring>(double commission_per_trade) const</argsstring>
        <name>calculate_transaction_costs</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::calculate_transaction_costs</qualifiedname>
        <param>
          <type>double</type>
          <declname>commission_per_trade</declname>
        </param>
        <briefdescription>
<para>Calculate transaction costs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="471" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="471" bodyend="478"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::transactions::TransactionSeries::to_dataframe</definition>
        <argsstring>() const</argsstring>
        <name>to_dataframe</name>
        <qualifiedname>pyfolio::transactions::TransactionSeries::to_dataframe</qualifiedname>
        <briefdescription>
<para>Convert to <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="483" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="483" bodyend="512"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" compoundref="d2/d99/dataframe_8h" startline="88" endline="101">pyfolio::DataFrame::add_column</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" compoundref="d0/db6/transaction_8h" startline="166" endline="166">empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Collection of transactions with analysis capabilities. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" line="140" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h" bodystart="140" bodyend="513"/>
    <listofallmembers>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>add_transaction</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a51f62a2444cfc74dbe0a9828c1ca84da" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>aggregate_by_symbol</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae01ac1b99dd7d89c0eaefbe22f04b1f2" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>aggregate_daily</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>average_transaction_size</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ad19e978acf19a75a03cb0a244863d718" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>back</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1c7fed62cfc06ad403726bc4238ec70c" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>begin</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af522fa60fea545128a704157c2c2c9b3" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>begin</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>calculate_statistics</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>calculate_transaction_costs</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>const_iterator</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>daily_summary</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>empty</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>end</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a968060d822c816dfca8a17a1858a268b" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>end</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>filter_by_date_range</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>filter_by_symbol</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1fdd056e5bb444f999e769d8c34c8347" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>front</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>get_symbols</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>group_by_symbol</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>iterator</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>net_shares</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>net_shares_by_symbol</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac6b2dff2b7e435b8bbe8cfc922499cbe" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>operator[]</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af8f76dbec2f1d5e4d8dc4eb3b077efd1" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>operator[]</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>size</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2764e4857132a7e4d68f23774319254c" prot="private" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>sort_by_timestamp</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>to_dataframe</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af3c9618e9b0d73c0e47a2b0cdf2f68f9" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>total_commissions</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>total_notional_value</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5f7a2e489f84ec338f391ebed7267335" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>total_slippage</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8ed92f3472d3597805939fae6af33b79" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>total_value</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a11620f055375cd3384431ac923c90891" prot="private" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>transactions_</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>TransactionSeries</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a634c4e1cd3f544e76506eb93b727c159" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>TransactionSeries</name></member>
      <member refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2e055702744625143626e1c3bb60ddb1" prot="public" virt="non-virtual"><scope>pyfolio::transactions::TransactionSeries</scope><name>TransactionSeries</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
