<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d6/d82/classpyfolio_1_1io_1_1CSVParser" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::io::CSVParser</compoundname>
    <includes refid="d2/db9/data__loader_8h" local="no">data_loader.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a40aeabc8971eb34e075180a7b45b8946" prot="private" static="no" mutable="no">
        <type><ref refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig" kindref="compound">CSVConfig</ref></type>
        <definition>CSVConfig pyfolio::io::CSVParser::config_</definition>
        <argsstring></argsstring>
        <name>config_</name>
        <qualifiedname>pyfolio::io::CSVParser::config_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="201" column="15" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="201" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a33386fd6bcb4e4d9739f845875a4f93a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::io::CSVParser::CSVParser</definition>
        <argsstring>(const CSVConfig &amp;config=CSVConfig{})</argsstring>
        <name>CSVParser</name>
        <qualifiedname>pyfolio::io::CSVParser::CSVParser</qualifiedname>
        <param>
          <type>const <ref refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig" kindref="compound">CSVConfig</ref> &amp;</type>
          <declname>config</declname>
          <defval><ref refid="d2/da2/structpyfolio_1_1io_1_1CSVConfig" kindref="compound">CSVConfig</ref>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="173" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab184acf84b7503b50b5e72adfbac2481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::vector&lt; std::vector&lt; std::string &gt; &gt; &gt;</type>
        <definition>Result&lt; std::vector&lt; std::vector&lt; std::string &gt; &gt; &gt; pyfolio::io::CSVParser::parse_file</definition>
        <argsstring>(const std::string &amp;file_path)</argsstring>
        <name>parse_file</name>
        <qualifiedname>pyfolio::io::CSVParser::parse_file</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_path</declname>
        </param>
        <briefdescription>
<para>Parse CSV file and return raw data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of rows, each row is a vector of strings </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="181" column="12"/>
      </memberdef>
      <memberdef kind="function" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a3de47507acd4e4706a24c3794d52c541" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::vector&lt; std::vector&lt; std::string &gt; &gt; &gt;</type>
        <definition>Result&lt; std::vector&lt; std::vector&lt; std::string &gt; &gt; &gt; pyfolio::io::CSVParser::parse_string</definition>
        <argsstring>(const std::string &amp;content)</argsstring>
        <name>parse_string</name>
        <qualifiedname>pyfolio::io::CSVParser::parse_string</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>content</declname>
        </param>
        <briefdescription>
<para>Parse CSV from string content. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>content</parametername>
</parameternamelist>
<parameterdescription>
<para>CSV content as string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of rows, each row is a vector of strings </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="189" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="511" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab4972ef795c3917b13c5ef9e92c97f1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; size_t &gt;</type>
        <definition>Result&lt; size_t &gt; pyfolio::io::CSVParser::get_column_index</definition>
        <argsstring>(const std::string &amp;column_name, const std::vector&lt; std::string &gt; &amp;headers)</argsstring>
        <name>get_column_index</name>
        <qualifiedname>pyfolio::io::CSVParser::get_column_index</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>column_name</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>headers</declname>
        </param>
        <briefdescription>
<para>Get column index by name (requires header) </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the column </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>headers</parametername>
</parameternamelist>
<parameterdescription>
<para>Header row </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Column index or error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="198" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="528" bodyend="537"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a9e385dadbb00b92d4e55e8f851fd82a5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; pyfolio::io::CSVParser::split_csv_line</definition>
        <argsstring>(const std::string &amp;line)</argsstring>
        <name>split_csv_line</name>
        <qualifiedname>pyfolio::io::CSVParser::split_csv_line</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
<para>Split a CSV line into fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="206" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="539" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ac448e32a909ad9ae3be883c168034365" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string pyfolio::io::CSVParser::trim</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>trim</name>
        <qualifiedname>pyfolio::io::CSVParser::trim</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Trim whitespace from string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="211" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="566" bodyend="573"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Generic CSV parser for custom data formats. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" line="171" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h" bodystart="171" bodyend="212"/>
    <listofallmembers>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a40aeabc8971eb34e075180a7b45b8946" prot="private" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>config_</name></member>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a33386fd6bcb4e4d9739f845875a4f93a" prot="public" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>CSVParser</name></member>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab4972ef795c3917b13c5ef9e92c97f1b" prot="public" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>get_column_index</name></member>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab184acf84b7503b50b5e72adfbac2481" prot="public" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>parse_file</name></member>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a3de47507acd4e4706a24c3794d52c541" prot="public" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>parse_string</name></member>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1a9e385dadbb00b92d4e55e8f851fd82a5" prot="private" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>split_csv_line</name></member>
      <member refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ac448e32a909ad9ae3be883c168034365" prot="private" virt="non-virtual"><scope>pyfolio::io::CSVParser</scope><name>trim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
