<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult" kind="struct" language="C++" prot="public">
    <compoundname>pyfolio::capacity::PortfolioCapacityResult</compoundname>
    <includes refid="db/d26/capacity_8h" local="no">capacity.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aafe774082562f921d30c23d914a94cb1" prot="public" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, <ref refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult" kindref="compound">SecurityCapacityResult</ref> &gt;</type>
        <definition>std::map&lt;Symbol, SecurityCapacityResult&gt; pyfolio::capacity::PortfolioCapacityResult::security_results</definition>
        <argsstring></argsstring>
        <name>security_results</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::security_results</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="121" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
        <referencedby refid="de/d7a/namespacepyfolio_1_1capacity_1a3b07998aa0b60d8d660d3240b77f26ca" compoundref="db/d26/capacity_8h" startline="471" endline="491">pyfolio::capacity::calculate_turnover_capacity</referencedby>
        <referencedby refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aa32bdba4b7c844f4abd501601ca799e3" compoundref="db/d26/capacity_8h" startline="132" endline="138">get_security_result</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a2f46c37a8471bee6936b396b02b2cba2" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double pyfolio::capacity::PortfolioCapacityResult::total_portfolio_capacity</definition>
        <argsstring></argsstring>
        <name>total_portfolio_capacity</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::total_portfolio_capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="122" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
        <referencedby refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a5b32ae6da80540da5d8395ccab7564ca" compoundref="db/d26/capacity_8h" startline="143" endline="147">capacity_headroom</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a54cb8b43d5e9bfa608c398795c6ae3e0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double pyfolio::capacity::PortfolioCapacityResult::current_portfolio_size</definition>
        <argsstring></argsstring>
        <name>current_portfolio_size</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::current_portfolio_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="123" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="123" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
        <referencedby refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a5b32ae6da80540da5d8395ccab7564ca" compoundref="db/d26/capacity_8h" startline="143" endline="147">capacity_headroom</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a750cc6109d3ed0951ad2146f3f9bc294" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double pyfolio::capacity::PortfolioCapacityResult::capacity_utilization</definition>
        <argsstring></argsstring>
        <name>capacity_utilization</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::capacity_utilization</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="124" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
        <referencedby refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1add190213762cc4dc650cd113fdb11a9c" compoundref="db/d26/capacity_8h" startline="152" endline="152">is_near_capacity_limit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1ac591b48910113cee1fd214b9b0895d60" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double pyfolio::capacity::PortfolioCapacityResult::total_estimated_costs</definition>
        <argsstring></argsstring>
        <name>total_estimated_costs</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::total_estimated_costs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="125" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="125" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a74f91f94495bef5ef107b05807bc2fa6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double pyfolio::capacity::PortfolioCapacityResult::average_trading_days</definition>
        <argsstring></argsstring>
        <name>average_trading_days</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::average_trading_days</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="126" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="126" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
      </memberdef>
      <memberdef kind="variable" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aeb03b7c4e0abf3cf5bd0407ebcb5ba7b" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref> &gt;</type>
        <definition>std::vector&lt;Symbol&gt; pyfolio::capacity::PortfolioCapacityResult::capacity_constrained_securities</definition>
        <argsstring></argsstring>
        <name>capacity_constrained_securities</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::capacity_constrained_securities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="127" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="127" bodyend="-1"/>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aa32bdba4b7c844f4abd501601ca799e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult" kindref="compound">SecurityCapacityResult</ref></type>
        <definition>SecurityCapacityResult pyfolio::capacity::PortfolioCapacityResult::get_security_result</definition>
        <argsstring>(const Symbol &amp;symbol) const</argsstring>
        <name>get_security_result</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::get_security_result</qualifiedname>
        <param>
          <type>const <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Get capacity result for specific security. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="132" column="28" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="132" bodyend="138"/>
        <references refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aafe774082562f921d30c23d914a94cb1" compoundref="db/d26/capacity_8h" startline="121">security_results</references>
      </memberdef>
      <memberdef kind="function" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a5b32ae6da80540da5d8395ccab7564ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double pyfolio::capacity::PortfolioCapacityResult::capacity_headroom</definition>
        <argsstring>() const</argsstring>
        <name>capacity_headroom</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::capacity_headroom</qualifiedname>
        <briefdescription>
<para>Calculate capacity headroom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="143" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="143" bodyend="147"/>
        <references refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a54cb8b43d5e9bfa608c398795c6ae3e0" compoundref="db/d26/capacity_8h" startline="123">current_portfolio_size</references>
        <references refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a2f46c37a8471bee6936b396b02b2cba2" compoundref="db/d26/capacity_8h" startline="122">total_portfolio_capacity</references>
      </memberdef>
      <memberdef kind="function" id="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1add190213762cc4dc650cd113fdb11a9c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::capacity::PortfolioCapacityResult::is_near_capacity_limit</definition>
        <argsstring>(double threshold=0.80) const</argsstring>
        <name>is_near_capacity_limit</name>
        <qualifiedname>pyfolio::capacity::PortfolioCapacityResult::is_near_capacity_limit</qualifiedname>
        <param>
          <type>double</type>
          <declname>threshold</declname>
          <defval>0.80</defval>
        </param>
        <briefdescription>
<para>Check if portfolio is near capacity limits. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="152" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="152" bodyend="152"/>
        <references refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a750cc6109d3ed0951ad2146f3f9bc294" compoundref="db/d26/capacity_8h" startline="124">capacity_utilization</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Portfolio-level capacity analysis. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>pyfolio::capacity::PortfolioCapacityResult</label>
        <link refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult"/>
        <childnode refid="2" relation="usage">
          <edgelabel>security_results</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>capacity_constrained_securities</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>pyfolio::capacity::SecurityCapacityResult</label>
        <link refid="d9/d58/structpyfolio_1_1capacity_1_1SecurityCapacityResult"/>
        <childnode refid="3" relation="usage">
          <edgelabel>symbol</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>std::map&lt; Symbol, pyfolio::capacity::SecurityCapacityResult &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::vector&lt; Symbol &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" line="120" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h" bodystart="120" bodyend="153"/>
    <listofallmembers>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a74f91f94495bef5ef107b05807bc2fa6" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>average_trading_days</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aeb03b7c4e0abf3cf5bd0407ebcb5ba7b" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>capacity_constrained_securities</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a5b32ae6da80540da5d8395ccab7564ca" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>capacity_headroom</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a750cc6109d3ed0951ad2146f3f9bc294" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>capacity_utilization</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a54cb8b43d5e9bfa608c398795c6ae3e0" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>current_portfolio_size</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aa32bdba4b7c844f4abd501601ca799e3" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>get_security_result</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1add190213762cc4dc650cd113fdb11a9c" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>is_near_capacity_limit</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1aafe774082562f921d30c23d914a94cb1" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>security_results</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1ac591b48910113cee1fd214b9b0895d60" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>total_estimated_costs</name></member>
      <member refid="de/d9b/structpyfolio_1_1capacity_1_1PortfolioCapacityResult_1a2f46c37a8471bee6936b396b02b2cba2" prot="public" virt="non-virtual"><scope>pyfolio::capacity::PortfolioCapacityResult</scope><name>total_portfolio_capacity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
