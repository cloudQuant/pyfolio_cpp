<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="de/d69/namespacepyfolio_1_1positions_1_1utils" kind="namespace" language="C++">
    <compoundname>pyfolio::positions::utils</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="de/d69/namespacepyfolio_1_1positions_1_1utils_1a457c53c59a88377cd335965d115bd0e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
        <definition>Result&lt; TimeSeries&lt; std::pair&lt; double, double &gt; &gt; &gt; pyfolio::positions::utils::positions_to_exposures</definition>
        <argsstring>(const TimeSeries&lt; std::unordered_map&lt; std::string, Position &gt; &gt; &amp;position_series)</argsstring>
        <name>positions_to_exposures</name>
        <qualifiedname>pyfolio::positions::utils::positions_to_exposures</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; std::unordered_map&lt; std::string, <ref refid="d6/df6/structpyfolio_1_1Position" kindref="compound">Position</ref> &gt; &gt; &amp;</type>
          <declname>position_series</declname>
        </param>
        <briefdescription>
<para>Convert position series to exposure series. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" line="62" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" declline="62" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="de/d69/namespacepyfolio_1_1positions_1_1utils_1abc91a6e713e1da7ec8f4825ec2fa1a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; double &gt; &gt;</type>
        <definition>Result&lt; TimeSeries&lt; double &gt; &gt; pyfolio::positions::utils::positions_to_leverage</definition>
        <argsstring>(const TimeSeries&lt; std::unordered_map&lt; std::string, Position &gt; &gt; &amp;position_series)</argsstring>
        <name>positions_to_leverage</name>
        <qualifiedname>pyfolio::positions::utils::positions_to_leverage</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; std::unordered_map&lt; std::string, <ref refid="d6/df6/structpyfolio_1_1Position" kindref="compound">Position</ref> &gt; &gt; &amp;</type>
          <declname>position_series</declname>
        </param>
        <briefdescription>
<para>Convert position series to leverage series. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" line="68" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" declline="68" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="de/d69/namespacepyfolio_1_1positions_1_1utils_1aa03cdd025206bdfd1cac84f30d280dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; int &gt; &gt;</type>
        <definition>Result&lt; TimeSeries&lt; int &gt; &gt; pyfolio::positions::utils::positions_to_holding_counts</definition>
        <argsstring>(const TimeSeries&lt; std::unordered_map&lt; std::string, Position &gt; &gt; &amp;position_series)</argsstring>
        <name>positions_to_holding_counts</name>
        <qualifiedname>pyfolio::positions::utils::positions_to_holding_counts</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; std::unordered_map&lt; std::string, <ref refid="d6/df6/structpyfolio_1_1Position" kindref="compound">Position</ref> &gt; &gt; &amp;</type>
          <declname>position_series</declname>
        </param>
        <briefdescription>
<para>Convert position series to holding count series. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" line="74" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" declline="74" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="d6/df6/structpyfolio_1_1Position" kindref="compound">Position</ref> series utilities. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h" line="57" column="1"/>
  </compounddef>
</doxygen>
