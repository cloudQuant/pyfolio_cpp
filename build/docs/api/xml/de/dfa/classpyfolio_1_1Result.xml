<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="de/dfa/classpyfolio_1_1Result" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::Result</compoundname>
    <includes refid="d3/d11/error__handling_8h" local="no">error_handling.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/dfa/classpyfolio_1_1Result_1a756495b89dd42029dfa66d87c9a6d614" prot="private" static="no" mutable="no">
        <type>std::variant&lt; T, <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &gt;</type>
        <definition>std::variant&lt;T, Error&gt; pyfolio::Result&lt; T &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>pyfolio::Result::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="64" column="18" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; T &gt;::Result</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result::Result</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="68" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="68" bodyend="68"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" compoundref="d3/d11/error__handling_8h" startline="95" endline="101">pyfolio::Result&lt; T &gt;::value</references>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" compoundref="d3/d11/error__handling_8h" startline="79" endline="84">pyfolio::Result&lt; T &gt;::error</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" compoundref="d3/d11/error__handling_8h" startline="123" endline="135">pyfolio::Result&lt; T &gt;::map</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" compoundref="d3/d11/error__handling_8h" startline="153" endline="159">pyfolio::Result&lt; T &gt;::or_else</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" compoundref="d3/d11/error__handling_8h" startline="76" endline="76">pyfolio::Result&lt; T &gt;::success</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; T &gt;::Result</definition>
        <argsstring>(T &amp;&amp;value)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result::Result</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="69" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="69" bodyend="69"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" compoundref="d3/d11/error__handling_8h" startline="95" endline="101">pyfolio::Result&lt; T &gt;::value</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; T &gt;::Result</definition>
        <argsstring>(const Error &amp;error)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result::Result</qualifiedname>
        <param>
          <type>const <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="70" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="70" bodyend="70"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" compoundref="d3/d11/error__handling_8h" startline="79" endline="84">pyfolio::Result&lt; T &gt;::error</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; T &gt;::Result</definition>
        <argsstring>(Error &amp;&amp;error)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result::Result</qualifiedname>
        <param>
          <type><ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="71" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="71" bodyend="71"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" compoundref="d3/d11/error__handling_8h" startline="79" endline="84">pyfolio::Result&lt; T &gt;::error</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; T &gt;::is_ok</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_ok</name>
        <qualifiedname>pyfolio::Result::is_ok</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="87" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="87" bodyend="87"/>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ae94364189cc4ca07a0a96991f330c7ab" compoundref="d3/d11/error__handling_8h" startline="196" endline="201">pyfolio::Result&lt; void &gt;::error</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" compoundref="d3/d11/error__handling_8h" startline="92" endline="92">pyfolio::Result&lt; T &gt;::has_value</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1262dae69a37b0905455ed82b34074e4" compoundref="d3/d11/error__handling_8h" startline="193" endline="193">pyfolio::Result&lt; void &gt;::has_value</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" compoundref="d3/d11/error__handling_8h" startline="153" endline="159">pyfolio::Result&lt; T &gt;::or_else</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2e98a8000a9f729b12d8e89507ee82b5" compoundref="d3/d11/error__handling_8h" startline="220" endline="226">pyfolio::Result&lt; void &gt;::or_else</referencedby>
        <referencedby refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1ae12c7f18031cb7d03ec2756e85b2bb6d" compoundref="d4/d45/json__serializer_8h" startline="152" endline="167">pyfolio::web::JsonSerializer::serialize_result</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" compoundref="d3/d11/error__handling_8h" startline="119" endline="119">pyfolio::Result&lt; T &gt;::value_or</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; T &gt;::is_error</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_error</name>
        <qualifiedname>pyfolio::Result::is_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="89" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="89" bodyend="89"/>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" compoundref="d3/d11/error__handling_8h" startline="138" endline="150">pyfolio::Result&lt; T &gt;::and_then</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ac5d7fd944bd9edf7585f9d232a49a9a4" compoundref="d3/d11/error__handling_8h" startline="205" endline="217">pyfolio::Result&lt; void &gt;::and_then</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" compoundref="d3/d11/error__handling_8h" startline="123" endline="135">pyfolio::Result&lt; T &gt;::map</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" compoundref="d3/d11/error__handling_8h" startline="103" endline="109">pyfolio::Result&lt; T &gt;::value</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" compoundref="d3/d11/error__handling_8h" startline="95" endline="101">pyfolio::Result&lt; T &gt;::value</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; T &gt;::has_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_value</name>
        <qualifiedname>pyfolio::Result::has_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="92" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="92" bodyend="92"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; pyfolio::Result&lt; T &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>pyfolio::Result::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="95" column="13" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="95" bodyend="101"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" compoundref="d3/d11/error__handling_8h" startline="89" endline="89">pyfolio::Result&lt; T &gt;::is_error</references>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a570a25f1233fa82e4d5c237cca260e59" compoundref="d4/d73/returns_8h" startline="125" endline="142">pyfolio::performance::annualize_returns</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a187ff948556631bd1ebbe0c3c87bdb76" compoundref="d4/d73/returns_8h" startline="202" endline="220">pyfolio::performance::calculate_volatility</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" compoundref="d3/d11/error__handling_8h" startline="68" endline="68">pyfolio::Result&lt; T &gt;::Result</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" compoundref="d3/d11/error__handling_8h" startline="69" endline="69">pyfolio::Result&lt; T &gt;::Result</referencedby>
        <referencedby refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1ae12c7f18031cb7d03ec2756e85b2bb6d" compoundref="d4/d45/json__serializer_8h" startline="152" endline="167">pyfolio::web::JsonSerializer::serialize_result</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" compoundref="d3/d11/error__handling_8h" startline="76" endline="76">pyfolio::Result&lt; T &gt;::success</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; pyfolio::Result&lt; T &gt;::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <qualifiedname>pyfolio::Result::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="103" column="7" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="103" bodyend="109"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" compoundref="d3/d11/error__handling_8h" startline="89" endline="89">pyfolio::Result&lt; T &gt;::is_error</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;</type>
        <definition>const Error &amp; pyfolio::Result&lt; T &gt;::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <qualifiedname>pyfolio::Result::error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="111" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="111" bodyend="116"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" compoundref="d2/d99/dataframe_8h" startline="88" endline="101">pyfolio::DataFrame::add_column</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1acabfd3a56cd8250c87a2f50b76d4ed4b" compoundref="d4/d73/returns_8h" startline="147" endline="170">pyfolio::performance::aggregate_returns</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1af30bc2537515dd9bf004768149ace4a4" compoundref="d5/db2/analytics_2statistics_8h" startline="478" endline="518">pyfolio::Statistics::alpha_beta</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1aa40a3a7468229f09a6950c0d9e8b459f" compoundref="d0/db7/allocation_8h" startline="268" endline="343">pyfolio::positions::AllocationAnalyzer::analyze_allocation_stability</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a914e6a4ba11f6346e18dad6f0150e7ed" compoundref="d0/db7/allocation_8h" startline="151" endline="196">pyfolio::positions::AllocationAnalyzer::analyze_by_group</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a454a305e75cc2d0555e8e27a1ab216d6" compoundref="dd/d45/trading__costs_8h" startline="113" endline="155">pyfolio::transactions::TradingCostAnalyzer::analyze_costs</referencedby>
        <referencedby refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a0b79ac7ee0ea18fbb4280bdd518040f4" compoundref="d6/dfe/bayesian_8h" startline="228" endline="295">pyfolio::analytics::BayesianAnalyzer::analyze_performance</referencedby>
        <referencedby refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a2a89a113f35927f33af40fa23ed44a70" compoundref="df/de7/performance__analysis__suite_8h" startline="255" endline="403">pyfolio::analytics::PerformanceAnalysisSuite::analyze_performance</referencedby>
        <referencedby refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1a7c39e9da13b225d9186ed324da6514d5" compoundref="dd/d71/parallel__performance__suite_8h" startline="158" endline="334">pyfolio::analytics::ParallelPerformanceAnalysisSuite::analyze_performance_parallel</referencedby>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a520ddf5e6d98e79e3db51abca6520e6f" compoundref="db/d26/capacity_8h" startline="189" endline="248">pyfolio::capacity::CapacityAnalyzer::analyze_security_capacity</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a570a25f1233fa82e4d5c237cca260e59" compoundref="d4/d73/returns_8h" startline="125" endline="142">pyfolio::performance::annualize_returns</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a91b2265984269f4a5eb36d8cefcf82cf" compoundref="d2/d99/dataframe_8h" startline="160" endline="171">pyfolio::DataFrame::at</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a6a1add6f9d8fea40487d684d6566addc" compoundref="d8/d51/time__series_8h" startline="568" endline="575">pyfolio::TimeSeries&lt; MarketIndicators &gt;::at</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a5bc013d5187b88b0f9acf132d7fe7696" compoundref="d7/d0c/holdings_8h" startline="274" endline="283">pyfolio::positions::HoldingsSeries::at_time</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a39a12989a144ef0b2ec705cb76d82713" compoundref="d8/d51/time__series_8h" startline="310" endline="319">pyfolio::TimeSeries&lt; MarketIndicators &gt;::at_time</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aa2afb12cd873b86de28fef77344ad2b2" compoundref="d8/de8/drawdown_8h" startline="286" endline="314">pyfolio::performance::average_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1ac7636a30bc37db92e05e85e19917a00b" compoundref="d8/de8/drawdown_8h" startline="359" endline="386">pyfolio::performance::average_recovery_time</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" compoundref="d0/db6/transaction_8h" startline="408" endline="419">pyfolio::transactions::TransactionSeries::average_transaction_size</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" compoundref="d7/d0c/holdings_8h" startline="288" endline="368">pyfolio::positions::HoldingsSeries::build_from_transactions</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a7d98d0027ba1c14dbcbcfe4428aa8024" compoundref="d8/d51/time__series_8h" startline="176" endline="213">pyfolio::TimeSeries&lt; MarketIndicators &gt;::bulk_insert</referencedby>
        <referencedby refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" compoundref="da/dd4/attribution_8h" startline="417" endline="484">pyfolio::attribution::AlphaBetaAnalysis::calculate</referencedby>
        <referencedby refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a4c27b81823966c6d5b55fd44a02334cd" compoundref="d7/d00/round__trips_8h" startline="193" endline="238">pyfolio::transactions::RoundTripStatistics::calculate</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1acc94860d07c43fb8cfdbac14aeca5da6" compoundref="d0/db6/transaction_8h" startline="518" endline="543">pyfolio::transactions::calculate_average_price</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a9c6b1c2cee5eb1b6d0dd8298557b5f22" compoundref="d5/db2/analytics_2statistics_8h" startline="277" endline="283">pyfolio::Statistics::calculate_basic_stats</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aee9b783d9de6756d4fd9c98c86274b05" compoundref="d4/d73/returns_8h" startline="275" endline="296">pyfolio::performance::calculate_cagr</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a530162fa9e593cbe432222f1d2d21d79" compoundref="d0/db7/allocation_8h" startline="104" endline="145">pyfolio::positions::AllocationAnalyzer::calculate_concentration</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1ac3157a75ae2536e6e77a7561917be03e" compoundref="df/d46/var_8h" startline="252" endline="302">pyfolio::risk::VaRCalculator::calculate_cornish_fisher_var</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1aaae9b89dee86559c4a7107df21cb26b0" compoundref="dd/d45/trading__costs_8h" startline="354" endline="363">pyfolio::transactions::calculate_cost_ratio</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a0643c69995dcd3f223563def5f3efb99" compoundref="d4/d73/returns_8h" startline="102" endline="120">pyfolio::performance::calculate_cumulative_returns</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a485b4a7f1c9f3090402383fda316c8f6" compoundref="d8/de8/drawdown_8h" startline="28" endline="61">pyfolio::performance::calculate_drawdowns</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a4d13d4b5eb0f58d8a8bb4de796cc4200" compoundref="dd/d45/trading__costs_8h" startline="198" endline="207">pyfolio::transactions::TradingCostAnalyzer::calculate_effective_spread</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a5355f08aadc5dc96a9bc0443d70eb93b" compoundref="df/d46/var_8h" startline="144" endline="199">pyfolio::risk::VaRCalculator::calculate_historical_var</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a01685999c930baff8b7925a2a42b752a" compoundref="dd/d45/trading__costs_8h" startline="160" endline="193">pyfolio::transactions::TradingCostAnalyzer::calculate_implementation_shortfall</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aa845ba07f3b5467f5cac8d9fc83e2368" compoundref="d4/d73/returns_8h" startline="49" endline="78">pyfolio::performance::calculate_log_returns</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a5b07dc41d33ed83488dff2bcc50dd777" compoundref="df/d46/var_8h" startline="368" endline="437">pyfolio::risk::VaRCalculator::calculate_marginal_var</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a297d2eb32efafc48a09197a2cd0dd2ab" compoundref="df/d46/var_8h" startline="307" endline="363">pyfolio::risk::VaRCalculator::calculate_monte_carlo_var</referencedby>
        <referencedby refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" compoundref="da/dd4/attribution_8h" startline="260" endline="338">pyfolio::attribution::BrinsonAttribution::calculate_multi_period_attribution</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a1c475db5eee0c7ae9a7472688f7bb8fc" compoundref="df/d46/var_8h" startline="204" endline="247">pyfolio::risk::VaRCalculator::calculate_parametric_var</referencedby>
        <referencedby refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" compoundref="da/dd4/attribution_8h" startline="102" endline="156">pyfolio::attribution::BrinsonAttribution::calculate_period_attribution</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aba556ae09a3dbbdad98c878c5b84be4a" compoundref="d4/d73/returns_8h" startline="15" endline="44">pyfolio::performance::calculate_returns</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" compoundref="d0/db6/transaction_8h" startline="435" endline="466">pyfolio::transactions::TransactionSeries::calculate_statistics</referencedby>
        <referencedby refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a03d3ac2bfd1691d61e27da8e7d951c22" compoundref="d5/db2/analytics_2statistics_8h" startline="42" endline="104">pyfolio::analytics::statistics::calculate_summary</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" compoundref="d0/db6/transaction_8h" startline="471" endline="478">pyfolio::transactions::TransactionSeries::calculate_transaction_costs</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1a735b0817892b8545a3e238c24561a185" compoundref="d0/db6/transaction_8h" startline="548" endline="578">pyfolio::transactions::calculate_turnover</referencedby>
        <referencedby refid="de/d7a/namespacepyfolio_1_1capacity_1a3b07998aa0b60d8d660d3240b77f26ca" compoundref="db/d26/capacity_8h" startline="471" endline="491">pyfolio::capacity::calculate_turnover_capacity</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a187ff948556631bd1ebbe0c3c87bdb76" compoundref="d4/d73/returns_8h" startline="202" endline="220">pyfolio::performance::calculate_volatility</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a9bb5c04c5c7d86d34a5867ebcbc2ec9c" compoundref="d7/d06/ratios_8h" startline="116" endline="159">pyfolio::performance::calmar_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1ad65c7ac81b945bde674200d8ca6b389b" compoundref="d5/db2/analytics_2statistics_8h" startline="346" endline="378">pyfolio::Statistics::calmar_ratio</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a1aca034860dac7ddacbac6f9dd0b930c" compoundref="d3/dbe/math_2statistics_8h" startline="397" endline="424">pyfolio::stats::conditional_value_at_risk</referencedby>
        <referencedby refid="d2/da5/namespacepyfolio_1_1risk_1ac091b780b885e60eb245538dd9ec1910" compoundref="df/d46/var_8h" startline="603" endline="611">pyfolio::risk::conditional_var</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1aab195d82ad5f7716bdffe6017cf863a3" compoundref="d2/d99/dataframe_8h" startline="403" endline="443">pyfolio::DataFrame::corr</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1ae62df134ebe0d79d73c16894c3dc364d" compoundref="d3/dbe/math_2statistics_8h" startline="236" endline="278">pyfolio::stats::correlation</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a41ce57e7df0fc468024c1fb40b2c773a" compoundref="d8/d51/time__series_8h" startline="1152" endline="1194">pyfolio::TimeSeries&lt; MarketIndicators &gt;::correlation</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a59a3674c586b6114719f5b426ca46a21" compoundref="dd/d45/trading__costs_8h" startline="212" endline="249">pyfolio::transactions::TradingCostAnalyzer::cost_breakdown_by_period</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1af8d120442d5971c10a506129f562be2c" compoundref="d3/dbe/math_2statistics_8h" startline="284" endline="314">pyfolio::stats::covariance</referencedby>
        <referencedby refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a709624b3190081f3a358fc6aac367757" compoundref="d0/db6/transaction_8h" startline="67" endline="79">pyfolio::transactions::TransactionRecord::create</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1ab9ceddea46b0adf1cd15fbada715d7c7" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="778" endline="809">pyfolio::visualization::PlotlyEngine::create_3d_surface</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a5817805d83c5d938efde57ce50604ea8" compoundref="d1/dcd/plotly__enhanced_8h" startline="467" endline="539">pyfolio::visualization::PlotlyEngine::create_candlestick_chart</referencedby>
        <referencedby refid="d2/da5/namespacepyfolio_1_1risk_1a0fbdfe0d8229ca14ca8adb34b32f53fd" compoundref="d4/da5/factor__exposure_8h" startline="352" endline="402">pyfolio::risk::create_factor_model_from_returns</referencedby>
        <referencedby refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" compoundref="d3/d66/tears_8h" startline="368" endline="422">pyfolio::reporting::create_simple_tear_sheet</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a8eac6556a8862a0eb2cc2463204eec9e" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="811" endline="840">pyfolio::visualization::PlotlyEngine::create_subplots_dashboard</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a12121c2d7a3013e7a3ddce11d1a13976" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="719" endline="745">pyfolio::visualization::PlotlyEngine::create_treemap</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a6f5008f5153cb749751ea01126007de0" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="747" endline="776">pyfolio::visualization::PlotlyEngine::create_waterfall_chart</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" compoundref="d0/db6/transaction_8h" startline="288" endline="335">pyfolio::transactions::TransactionSeries::daily_summary</referencedby>
        <referencedby refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a55e4461ef8ea907d50c4a3e83bee9872" compoundref="dc/d51/intraday_8cpp" startline="10" endline="55">pyfolio::intraday::IntradayAnalyzer::detect_intraday</referencedby>
        <referencedby refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a20ed44cf22769cfb68ec394a8f95d47d" compoundref="d6/dfe/bayesian_8h" startline="300" endline="330">pyfolio::analytics::BayesianAnalyzer::detect_regimes</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a064970a0664b36d4aaa708d9e749d628" compoundref="d2/dfc/regime__detection_8h" startline="228" endline="272">pyfolio::analytics::RegimeDetector::detect_regimes</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1ace0a88e334558363898722abd949922b" compoundref="d8/d51/time__series_8h" startline="1126" endline="1147">pyfolio::TimeSeries&lt; MarketIndicators &gt;::dot</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a95ab1789aea3818a1e9e07c746280c53" compoundref="d8/de8/drawdown_8h" startline="166" endline="200">pyfolio::performance::drawdown_duration</referencedby>
        <referencedby refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1ad5f70c82e839ca853a0ab7132e4c7259" compoundref="dc/d51/intraday_8cpp" startline="57" endline="99">pyfolio::intraday::IntradayAnalyzer::estimate_intraday_positions</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1ab1eabb16efcab66bc24ea2fc4834093f" compoundref="dd/d45/trading__costs_8h" startline="254" endline="290">pyfolio::transactions::TradingCostAnalyzer::estimate_optimal_trade_size</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a566c275feb01e5f83234c36b9d13a885" compoundref="d7/d0c/holdings_8h" startline="400" endline="428">pyfolio::positions::HoldingsSeries::exposure_series</referencedby>
        <referencedby refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a7eceaad081c1c0baebefd3ffa8762459" compoundref="d6/dfe/bayesian_8h" startline="335" endline="378">pyfolio::analytics::BayesianAnalyzer::forecast_returns</referencedby>
        <referencedby refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab4972ef795c3917b13c5ef9e92c97f1b" compoundref="d2/db9/data__loader_8h" startline="528" endline="537">pyfolio::io::CSVParser::get_column_index</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a0d055a35906794c27b9136229a063a65" compoundref="d7/d0c/holdings_8h" startline="111" endline="117">pyfolio::positions::PortfolioHoldings::get_holding</referencedby>
        <referencedby refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a3472ae4a6b393649294553e755691488" compoundref="d4/d7b/market__indicators_8h" startline="103" endline="128">pyfolio::analytics::MarketIndicators::get_indicator</referencedby>
        <referencedby refid="d2/da5/namespacepyfolio_1_1risk_1ac7c4871092a6b879c5ce42bfefcbce07" compoundref="df/d46/var_8h" startline="590" endline="598">pyfolio::risk::historical_var</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a72a6639531f459b9963884e4d4ac571e" compoundref="d7/d06/ratios_8h" startline="164" endline="212">pyfolio::performance::information_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a0fd32c54eb1fea5a675633d5f85b7fc0" compoundref="d5/db2/analytics_2statistics_8h" startline="522" endline="561">pyfolio::Statistics::information_ratio</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1ae51a470f87ae34ae1f58305531f9dcf8" compoundref="d3/dbe/math_2statistics_8h" startline="199" endline="230">pyfolio::stats::kurtosis</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" compoundref="d2/d99/dataframe_8h" startline="194" endline="233">pyfolio::DataFrame::loc</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" compoundref="d3/d11/error__handling_8h" startline="123" endline="135">pyfolio::Result&lt; T &gt;::map</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a2233d9e06edde686d5b6620a2830130a" compoundref="d2/dfc/regime__detection_8h" startline="382" endline="478">pyfolio::analytics::RegimeDetector::markov_switching_detection</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae12cd4f5a2e889c8d7ff4ac4ab513f5e" compoundref="d4/dc1/cached__performance__metrics_8h" startline="483" endline="516">pyfolio::analytics::CachedPerformanceCalculator::max_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a919af12e2600a7e77163a20bf6f98609" compoundref="d8/de8/drawdown_8h" startline="66" endline="81">pyfolio::performance::max_drawdown</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" compoundref="d5/db2/analytics_2statistics_8h" startline="397" endline="445">pyfolio::Statistics::max_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aff3558ae3dd3ed4381a805f730d47b53" compoundref="d8/de8/drawdown_8h" startline="86" endline="161">pyfolio::performance::max_drawdown_info</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a0ded7b265023215831bffb8b799ba59a" compoundref="d3/dbe/math_2statistics_8h" startline="112" endline="119">pyfolio::stats::mean</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad798a4da69bff9c8bb9d335eaba6ec6" compoundref="d8/d51/time__series_8h" startline="778" endline="797">pyfolio::TimeSeries&lt; MarketIndicators &gt;::mean</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a376eed0b5df19f13f64b76230fdf6718" compoundref="d7/d06/ratios_8h" startline="217" endline="251">pyfolio::performance::omega_ratio</referencedby>
        <referencedby refid="d6/d4f/classpyfolio_1_1DateTime_1adfc972d8ea84c03f9a6d9eb9e661b6cd" compoundref="de/d1b/datetime_8h" startline="150" endline="173">pyfolio::DateTime::parse</referencedby>
        <referencedby refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1af5ccaefdc7c758341967765eae7e199b" compoundref="d4/d45/json__serializer_8h" startline="236" endline="290">pyfolio::web::JsonSerializer::parse_transaction_record</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1aea9b2c25523d93f5afb06c51f77c6f47" compoundref="d3/dbe/math_2statistics_8h" startline="320" endline="350">pyfolio::stats::percentile</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1aa0e53cbd1e3be9ff3caf6608bac7960d" compoundref="d3/dbe/math_2statistics_8h" startline="364" endline="370">pyfolio::stats::quantile</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a92bdc2235a48b8715a1790c9203d08b9" compoundref="d2/d99/dataframe_8h" startline="106" endline="116">pyfolio::DataFrame::remove_column</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a07f089ab270bd9a2daf14c4802966942" compoundref="d8/de8/drawdown_8h" startline="319" endline="354">pyfolio::performance::rolling_max_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a5e53c9105f237045953172393a34c5c2" compoundref="d4/d73/returns_8h" startline="175" endline="197">pyfolio::performance::rolling_returns</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a65aa70a47c152e3dbb1e73ea2dd1f0c4" compoundref="d7/d06/ratios_8h" startline="330" endline="368">pyfolio::performance::rolling_sharpe_ratio</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a8a0797d8f8603e3757181fb825c960b8" compoundref="d4/d73/returns_8h" startline="225" endline="254">pyfolio::performance::rolling_volatility</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1aae9dcab036865e9b023c1b9464a65611" compoundref="d7/d00/round__trips_8h" startline="291" endline="348">pyfolio::transactions::round_trip_performance_by_period</referencedby>
        <referencedby refid="d8/ddb/namespacepyfolio_1_1io_1a9bc0f126fc69a4d2e976f6b06fec79ee" compoundref="d2/db9/data__loader_8h" startline="300" endline="330">pyfolio::io::save_positions_to_csv</referencedby>
        <referencedby refid="d8/ddb/namespacepyfolio_1_1io_1ac5936d5d5b52389eca310e60b1e799b1" compoundref="d2/db9/data__loader_8h" startline="274" endline="298">pyfolio::io::save_returns_to_csv</referencedby>
        <referencedby refid="d8/ddb/namespacepyfolio_1_1io_1a2e15bed59889eb6a31375d80d5691b1b" compoundref="d2/db9/data__loader_8h" startline="332" endline="358">pyfolio::io::save_transactions_to_csv</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a00a9bb8b81f58c827f311295bd906022" compoundref="d2/d99/dataframe_8h" startline="238" endline="252">pyfolio::DataFrame::select</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a49db7f0e6fefba365991ee6dc7bc77a8" compoundref="d2/d99/dataframe_8h" startline="177" endline="189">pyfolio::DataFrame::set_at</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a81cf0052efc5c5dbe0ea46f4ac5d713b" compoundref="d2/d99/dataframe_8h" startline="135" endline="149">pyfolio::DataFrame::set_column</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aa8dd6ffc556adc3f76dc32645ec6b57c" compoundref="d7/d06/ratios_8h" startline="15" endline="57">pyfolio::performance::sharpe_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1add05d2ec066eecbb3feb17b3ecab1fe8" compoundref="d5/db2/analytics_2statistics_8h" startline="287" endline="305">pyfolio::Statistics::sharpe_ratio</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a5df7d33f99e4ea05ccf659ac88173b4e" compoundref="d3/dbe/math_2statistics_8h" startline="164" endline="193">pyfolio::stats::skewness</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" compoundref="d2/d99/dataframe_8h" startline="258" endline="304">pyfolio::DataFrame::sort_by</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a2b9a9772352ff85db5af94511638114f" compoundref="d7/d06/ratios_8h" startline="62" endline="111">pyfolio::performance::sortino_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1ae3abd35508b1c2c76a918a8d58338e41" compoundref="d5/db2/analytics_2statistics_8h" startline="309" endline="342">pyfolio::Statistics::sortino_ratio</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82439ade72c213e3ffd477dd6a2058e5" compoundref="d8/d51/time__series_8h" startline="802" endline="824">pyfolio::TimeSeries&lt; MarketIndicators &gt;::std</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a774beb5ef6d09f2a32210cda918d25e7" compoundref="d2/dfc/regime__detection_8h" startline="491" endline="574">pyfolio::analytics::RegimeDetector::structural_break_detection</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ab0309859ab0f7c06dd583111fc9ae8d6" compoundref="d7/d0c/holdings_8h" startline="185" endline="220">pyfolio::positions::PortfolioHoldings::to_dataframe</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" compoundref="d0/db6/transaction_8h" startline="483" endline="512">pyfolio::transactions::TransactionSeries::to_dataframe</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" compoundref="d0/db6/transaction_8h" startline="375" endline="386">pyfolio::transactions::TransactionSeries::total_notional_value</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a6bc9f0c706b2d89a0eb6c539eddef077" compoundref="d4/d73/returns_8h" startline="259" endline="270">pyfolio::performance::total_return</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a2e0bb5b9b5052088b4ec146150811489" compoundref="d5/db2/analytics_2statistics_8h" startline="564" endline="598">pyfolio::Statistics::tracking_error</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1ae0eb073ae0b6cba1b6f6ed684179da8c" compoundref="d7/d06/ratios_8h" startline="256" endline="325">pyfolio::performance::treynor_ratio</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a49248a12c768f69751c468d8d331b0aa" compoundref="d7/d0c/holdings_8h" startline="80" endline="106">pyfolio::positions::PortfolioHoldings::update_holding</referencedby>
        <referencedby refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" compoundref="d0/db6/transaction_8h" startline="116" endline="134">pyfolio::transactions::TransactionRecord::validate</referencedby>
        <referencedby refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a2535e27fe2a3b80ae855b36c20d0af49" compoundref="d2/db9/data__loader_8h" startline="495" endline="500">pyfolio::io::validation::validate_positions</referencedby>
        <referencedby refid="d5/d2b/namespacepyfolio_1_1utils_1a370230a288b281c76873fb0472d69841" compoundref="db/d38/validation_8h" startline="22" endline="34">pyfolio::utils::validate_prices</referencedby>
        <referencedby refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1abcc020a32adbc5f5cf4f5497992bd947" compoundref="d2/db9/data__loader_8h" startline="488" endline="493">pyfolio::io::validation::validate_returns</referencedby>
        <referencedby refid="d5/d2b/namespacepyfolio_1_1utils_1afea61375d6757436d1f01bed259c58a3" compoundref="db/d38/validation_8h" startline="11" endline="17">pyfolio::utils::validate_returns</referencedby>
        <referencedby refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a9675e91fd8c5ddb8feb34ee897725c82" compoundref="d2/db9/data__loader_8h" startline="502" endline="507">pyfolio::io::validation::validate_transactions</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a1f80321b9a21528dec7e6978131ee2e7" compoundref="d3/dbe/math_2statistics_8h" startline="376" endline="391">pyfolio::stats::value_at_risk</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1afae76bfc655b39b929869957f17e2406" compoundref="d3/dbe/math_2statistics_8h" startline="125" endline="145">pyfolio::stats::variance</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1ab8f25fc631e3be5209e6375a9777d9d5" compoundref="d2/dfc/regime__detection_8h" startline="579" endline="647">pyfolio::analytics::RegimeDetector::volatility_regime_detection</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T pyfolio::Result&lt; T &gt;::value_or</definition>
        <argsstring>(const T &amp;default_value) const</argsstring>
        <name>value_or</name>
        <qualifiedname>pyfolio::Result::value_or</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="119" column="7" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="119" bodyend="119"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; decltype(func(std::declval&lt; T &gt;()))&gt;</type>
        <definition>Result&lt; decltype(func(std::declval&lt; T &gt;()))&gt; pyfolio::Result&lt; T &gt;::map</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>map</name>
        <qualifiedname>pyfolio::Result::map</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="123" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="123" bodyend="135"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" compoundref="d3/d11/error__handling_8h" startline="89" endline="89">pyfolio::Result&lt; T &gt;::is_error</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" compoundref="d3/d11/error__handling_8h" startline="68" endline="68">pyfolio::Result&lt; T &gt;::Result</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>decltype(func(std::declval&lt; T &gt;()))</type>
        <definition>decltype(func(std::declval&lt; T &gt;())) pyfolio::Result&lt; T &gt;::and_then</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>and_then</name>
        <qualifiedname>pyfolio::Result::and_then</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="138" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="138" bodyend="150"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" compoundref="d3/d11/error__handling_8h" startline="89" endline="89">pyfolio::Result&lt; T &gt;::is_error</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result pyfolio::Result&lt; T &gt;::or_else</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>or_else</name>
        <qualifiedname>pyfolio::Result::or_else</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="153" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="153" bodyend="159"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" compoundref="d3/d11/error__handling_8h" startline="68" endline="68">pyfolio::Result&lt; T &gt;::Result</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; T &gt;::success</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>success</name>
        <qualifiedname>pyfolio::Result::success</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="74" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="74" bodyend="74"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" compoundref="d3/d11/error__handling_8h" startline="68" endline="68">pyfolio::Result&lt; T &gt;::Result</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" compoundref="d3/d11/error__handling_8h" startline="95" endline="101">pyfolio::Result&lt; T &gt;::value</references>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" compoundref="d2/d99/dataframe_8h" startline="88" endline="101">pyfolio::DataFrame::add_column</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" compoundref="d0/db6/transaction_8h" startline="184" endline="194">pyfolio::transactions::TransactionSeries::add_transaction</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1acabfd3a56cd8250c87a2f50b76d4ed4b" compoundref="d4/d73/returns_8h" startline="147" endline="170">pyfolio::performance::aggregate_returns</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1af30bc2537515dd9bf004768149ace4a4" compoundref="d5/db2/analytics_2statistics_8h" startline="478" endline="518">pyfolio::Statistics::alpha_beta</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1aa40a3a7468229f09a6950c0d9e8b459f" compoundref="d0/db7/allocation_8h" startline="268" endline="343">pyfolio::positions::AllocationAnalyzer::analyze_allocation_stability</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a914e6a4ba11f6346e18dad6f0150e7ed" compoundref="d0/db7/allocation_8h" startline="151" endline="196">pyfolio::positions::AllocationAnalyzer::analyze_by_group</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a454a305e75cc2d0555e8e27a1ab216d6" compoundref="dd/d45/trading__costs_8h" startline="113" endline="155">pyfolio::transactions::TradingCostAnalyzer::analyze_costs</referencedby>
        <referencedby refid="d7/d21/classpyfolio_1_1attribution_1_1AttributionAnalyzer_1aba8060cedc814707e65a74e7f2e0a9f9" compoundref="da/dd4/attribution_8h" startline="531" endline="549">pyfolio::attribution::AttributionAnalyzer::analyze_factor_attribution</referencedby>
        <referencedby refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a0b79ac7ee0ea18fbb4280bdd518040f4" compoundref="d6/dfe/bayesian_8h" startline="228" endline="295">pyfolio::analytics::BayesianAnalyzer::analyze_performance</referencedby>
        <referencedby refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a2a89a113f35927f33af40fa23ed44a70" compoundref="df/de7/performance__analysis__suite_8h" startline="255" endline="403">pyfolio::analytics::PerformanceAnalysisSuite::analyze_performance</referencedby>
        <referencedby refid="d3/d03/classpyfolio_1_1analytics_1_1ParallelPerformanceAnalysisSuite_1a7c39e9da13b225d9186ed324da6514d5" compoundref="dd/d71/parallel__performance__suite_8h" startline="158" endline="334">pyfolio::analytics::ParallelPerformanceAnalysisSuite::analyze_performance_parallel</referencedby>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a9b770c687ae049208149c5023b673cc2" compoundref="db/d26/capacity_8h" startline="253" endline="310">pyfolio::capacity::CapacityAnalyzer::analyze_portfolio_capacity</referencedby>
        <referencedby refid="d2/d15/classpyfolio_1_1capacity_1_1CapacityAnalyzer_1a520ddf5e6d98e79e3db51abca6520e6f" compoundref="db/d26/capacity_8h" startline="189" endline="248">pyfolio::capacity::CapacityAnalyzer::analyze_security_capacity</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a98139e1c2481720f61ac7a7f2959d9af" compoundref="de/d88/performance__metrics_8h" startline="175" endline="183">pyfolio::PerformanceMetrics::annual_return</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a6f7e64c2f975ec5facdf779b6d27533a" compoundref="de/d88/performance__metrics_8h" startline="186" endline="194">pyfolio::PerformanceMetrics::annual_volatility</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a570a25f1233fa82e4d5c237cca260e59" compoundref="d4/d73/returns_8h" startline="125" endline="142">pyfolio::performance::annualize_returns</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a91b2265984269f4a5eb36d8cefcf82cf" compoundref="d2/d99/dataframe_8h" startline="160" endline="171">pyfolio::DataFrame::at</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a6a1add6f9d8fea40487d684d6566addc" compoundref="d8/d51/time__series_8h" startline="568" endline="575">pyfolio::TimeSeries&lt; MarketIndicators &gt;::at</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a5bc013d5187b88b0f9acf132d7fe7696" compoundref="d7/d0c/holdings_8h" startline="274" endline="283">pyfolio::positions::HoldingsSeries::at_time</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a39a12989a144ef0b2ec705cb76d82713" compoundref="d8/d51/time__series_8h" startline="310" endline="319">pyfolio::TimeSeries&lt; MarketIndicators &gt;::at_time</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aa2afb12cd873b86de28fef77344ad2b2" compoundref="d8/de8/drawdown_8h" startline="286" endline="314">pyfolio::performance::average_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1ac7636a30bc37db92e05e85e19917a00b" compoundref="d8/de8/drawdown_8h" startline="359" endline="386">pyfolio::performance::average_recovery_time</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" compoundref="d0/db6/transaction_8h" startline="408" endline="419">pyfolio::transactions::TransactionSeries::average_transaction_size</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" compoundref="d7/d0c/holdings_8h" startline="288" endline="368">pyfolio::positions::HoldingsSeries::build_from_transactions</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a7d98d0027ba1c14dbcbcfe4428aa8024" compoundref="d8/d51/time__series_8h" startline="176" endline="213">pyfolio::TimeSeries&lt; MarketIndicators &gt;::bulk_insert</referencedby>
        <referencedby refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" compoundref="da/dd4/attribution_8h" startline="417" endline="484">pyfolio::attribution::AlphaBetaAnalysis::calculate</referencedby>
        <referencedby refid="d0/ddd/structpyfolio_1_1transactions_1_1RoundTripStatistics_1a4c27b81823966c6d5b55fd44a02334cd" compoundref="d7/d00/round__trips_8h" startline="193" endline="238">pyfolio::transactions::RoundTripStatistics::calculate</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1acc94860d07c43fb8cfdbac14aeca5da6" compoundref="d0/db6/transaction_8h" startline="518" endline="543">pyfolio::transactions::calculate_average_price</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aee9b783d9de6756d4fd9c98c86274b05" compoundref="d4/d73/returns_8h" startline="275" endline="296">pyfolio::performance::calculate_cagr</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1af08f7acfb54afc6584e949d822c895ce" compoundref="de/d88/performance__metrics_8h" startline="269" endline="278">pyfolio::PerformanceMetrics::calculate_comprehensive_metrics</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a530162fa9e593cbe432222f1d2d21d79" compoundref="d0/db7/allocation_8h" startline="104" endline="145">pyfolio::positions::AllocationAnalyzer::calculate_concentration</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1ac3157a75ae2536e6e77a7561917be03e" compoundref="df/d46/var_8h" startline="252" endline="302">pyfolio::risk::VaRCalculator::calculate_cornish_fisher_var</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1aaae9b89dee86559c4a7107df21cb26b0" compoundref="dd/d45/trading__costs_8h" startline="354" endline="363">pyfolio::transactions::calculate_cost_ratio</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a0643c69995dcd3f223563def5f3efb99" compoundref="d4/d73/returns_8h" startline="102" endline="120">pyfolio::performance::calculate_cumulative_returns</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a485b4a7f1c9f3090402383fda316c8f6" compoundref="d8/de8/drawdown_8h" startline="28" endline="61">pyfolio::performance::calculate_drawdowns</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a4d13d4b5eb0f58d8a8bb4de796cc4200" compoundref="dd/d45/trading__costs_8h" startline="198" endline="207">pyfolio::transactions::TradingCostAnalyzer::calculate_effective_spread</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a0b36bd99af8d88af1dc5578ef684c6e8" compoundref="d4/d73/returns_8h" startline="83" endline="97">pyfolio::performance::calculate_excess_returns</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a5355f08aadc5dc96a9bc0443d70eb93b" compoundref="df/d46/var_8h" startline="144" endline="199">pyfolio::risk::VaRCalculator::calculate_historical_var</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a01685999c930baff8b7925a2a42b752a" compoundref="dd/d45/trading__costs_8h" startline="160" endline="193">pyfolio::transactions::TradingCostAnalyzer::calculate_implementation_shortfall</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aa845ba07f3b5467f5cac8d9fc83e2368" compoundref="d4/d73/returns_8h" startline="49" endline="78">pyfolio::performance::calculate_log_returns</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a5b07dc41d33ed83488dff2bcc50dd777" compoundref="df/d46/var_8h" startline="368" endline="437">pyfolio::risk::VaRCalculator::calculate_marginal_var</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a297d2eb32efafc48a09197a2cd0dd2ab" compoundref="df/d46/var_8h" startline="307" endline="363">pyfolio::risk::VaRCalculator::calculate_monte_carlo_var</referencedby>
        <referencedby refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" compoundref="da/dd4/attribution_8h" startline="260" endline="338">pyfolio::attribution::BrinsonAttribution::calculate_multi_period_attribution</referencedby>
        <referencedby refid="da/da9/classpyfolio_1_1risk_1_1VaRCalculator_1a1c475db5eee0c7ae9a7472688f7bb8fc" compoundref="df/d46/var_8h" startline="204" endline="247">pyfolio::risk::VaRCalculator::calculate_parametric_var</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a0e3a4ce0474850feced4c15ca589cb97" compoundref="d4/dc1/cached__performance__metrics_8h" startline="412" endline="438">pyfolio::analytics::CachedPerformanceCalculator::calculate_performance_metrics</referencedby>
        <referencedby refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" compoundref="da/dd4/attribution_8h" startline="102" endline="156">pyfolio::attribution::BrinsonAttribution::calculate_period_attribution</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aba556ae09a3dbbdad98c878c5b84be4a" compoundref="d4/d73/returns_8h" startline="15" endline="44">pyfolio::performance::calculate_returns</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" compoundref="d0/db6/transaction_8h" startline="435" endline="466">pyfolio::transactions::TransactionSeries::calculate_statistics</referencedby>
        <referencedby refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a03d3ac2bfd1691d61e27da8e7d951c22" compoundref="d5/db2/analytics_2statistics_8h" startline="42" endline="104">pyfolio::analytics::statistics::calculate_summary</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" compoundref="d0/db6/transaction_8h" startline="471" endline="478">pyfolio::transactions::TransactionSeries::calculate_transaction_costs</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1a735b0817892b8545a3e238c24561a185" compoundref="d0/db6/transaction_8h" startline="548" endline="578">pyfolio::transactions::calculate_turnover</referencedby>
        <referencedby refid="de/d7a/namespacepyfolio_1_1capacity_1a3b07998aa0b60d8d660d3240b77f26ca" compoundref="db/d26/capacity_8h" startline="471" endline="491">pyfolio::capacity::calculate_turnover_capacity</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a187ff948556631bd1ebbe0c3c87bdb76" compoundref="d4/d73/returns_8h" startline="202" endline="220">pyfolio::performance::calculate_volatility</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a9bb5c04c5c7d86d34a5867ebcbc2ec9c" compoundref="d7/d06/ratios_8h" startline="116" endline="159">pyfolio::performance::calmar_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1ad65c7ac81b945bde674200d8ca6b389b" compoundref="d5/db2/analytics_2statistics_8h" startline="346" endline="378">pyfolio::Statistics::calmar_ratio</referencedby>
        <referencedby refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1acadbdac004b215eef082e50ea5341667" compoundref="dc/d51/intraday_8cpp" startline="101" endline="120">pyfolio::intraday::IntradayAnalyzer::check_and_process_intraday</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a411a637e64ea20e90ff6ad18248fbc4d" compoundref="de/d88/performance__metrics_8h" startline="257" endline="260">pyfolio::PerformanceMetrics::common_sense_ratio</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a1aca034860dac7ddacbac6f9dd0b930c" compoundref="d3/dbe/math_2statistics_8h" startline="397" endline="424">pyfolio::stats::conditional_value_at_risk</referencedby>
        <referencedby refid="d2/da5/namespacepyfolio_1_1risk_1ac091b780b885e60eb245538dd9ec1910" compoundref="df/d46/var_8h" startline="603" endline="611">pyfolio::risk::conditional_var</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aea9501b23c640378f687a97c51874232" compoundref="d4/d73/returns_8h" startline="301" endline="311">pyfolio::performance::convert_returns</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1aab195d82ad5f7716bdffe6017cf863a3" compoundref="d2/d99/dataframe_8h" startline="403" endline="443">pyfolio::DataFrame::corr</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae8d11622fcee575f2c19849d443dbb94" compoundref="d4/dc1/cached__performance__metrics_8h" startline="333" endline="356">pyfolio::analytics::CachedPerformanceCalculator::correlation</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1ae62df134ebe0d79d73c16894c3dc364d" compoundref="d3/dbe/math_2statistics_8h" startline="236" endline="278">pyfolio::stats::correlation</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a41ce57e7df0fc468024c1fb40b2c773a" compoundref="d8/d51/time__series_8h" startline="1152" endline="1194">pyfolio::TimeSeries&lt; MarketIndicators &gt;::correlation</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a59a3674c586b6114719f5b426ca46a21" compoundref="dd/d45/trading__costs_8h" startline="212" endline="249">pyfolio::transactions::TradingCostAnalyzer::cost_breakdown_by_period</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1af8d120442d5971c10a506129f562be2c" compoundref="d3/dbe/math_2statistics_8h" startline="284" endline="314">pyfolio::stats::covariance</referencedby>
        <referencedby refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a709624b3190081f3a358fc6aac367757" compoundref="d0/db6/transaction_8h" startline="67" endline="79">pyfolio::transactions::TransactionRecord::create</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1ab9ceddea46b0adf1cd15fbada715d7c7" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="778" endline="809">pyfolio::visualization::PlotlyEngine::create_3d_surface</referencedby>
        <referencedby refid="d2/da5/namespacepyfolio_1_1risk_1a0fbdfe0d8229ca14ca8adb34b32f53fd" compoundref="d4/da5/factor__exposure_8h" startline="352" endline="402">pyfolio::risk::create_factor_model_from_returns</referencedby>
        <referencedby refid="d7/d68/namespacepyfolio_1_1reporting_1aac9c6c66a273fe37313f67bd6bd67903" compoundref="d3/d66/tears_8h" startline="424" endline="439">pyfolio::reporting::create_full_tear_sheet</referencedby>
        <referencedby refid="d7/d68/namespacepyfolio_1_1reporting_1a31cb157f7b3fd4e572b2f62db5308edd" compoundref="d3/d66/tears_8h" startline="447" endline="459">pyfolio::reporting::create_position_tear_sheet</referencedby>
        <referencedby refid="d7/d68/namespacepyfolio_1_1reporting_1aac57d5e791c078f956065e1a4d2cdc01" compoundref="d3/d66/tears_8h" startline="475" endline="487">pyfolio::reporting::create_round_trip_tear_sheet</referencedby>
        <referencedby refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" compoundref="d3/d66/tears_8h" startline="368" endline="422">pyfolio::reporting::create_simple_tear_sheet</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a8eac6556a8862a0eb2cc2463204eec9e" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="811" endline="840">pyfolio::visualization::PlotlyEngine::create_subplots_dashboard</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a12121c2d7a3013e7a3ddce11d1a13976" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="719" endline="745">pyfolio::visualization::PlotlyEngine::create_treemap</referencedby>
        <referencedby refid="d7/d68/namespacepyfolio_1_1reporting_1a8ccd9b1e38e0190c91d5d06595b486fa" compoundref="d3/d66/tears_8h" startline="461" endline="473">pyfolio::reporting::create_txn_tear_sheet</referencedby>
        <referencedby refid="db/d7c/classpyfolio_1_1visualization_1_1PlotlyEngine_1a6f5008f5153cb749751ea01126007de0" compoundref="d2/dd1/plotly__enhanced_8cpp" startline="747" endline="776">pyfolio::visualization::PlotlyEngine::create_waterfall_chart</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" compoundref="d0/db6/transaction_8h" startline="288" endline="335">pyfolio::transactions::TransactionSeries::daily_summary</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a0bf6f736e050db71389e883612335aa4" compoundref="d2/d99/dataframe_8h" startline="354" endline="398">pyfolio::DataFrame::describe</referencedby>
        <referencedby refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1a55e4461ef8ea907d50c4a3e83bee9872" compoundref="dc/d51/intraday_8cpp" startline="10" endline="55">pyfolio::intraday::IntradayAnalyzer::detect_intraday</referencedby>
        <referencedby refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a20ed44cf22769cfb68ec394a8f95d47d" compoundref="d6/dfe/bayesian_8h" startline="300" endline="330">pyfolio::analytics::BayesianAnalyzer::detect_regimes</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a064970a0664b36d4aaa708d9e749d628" compoundref="d2/dfc/regime__detection_8h" startline="228" endline="272">pyfolio::analytics::RegimeDetector::detect_regimes</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1ace0a88e334558363898722abd949922b" compoundref="d8/d51/time__series_8h" startline="1126" endline="1147">pyfolio::TimeSeries&lt; MarketIndicators &gt;::dot</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1af281becf792a699a5d4fff96339b89e3" compoundref="d5/db2/analytics_2statistics_8h" startline="455" endline="474">pyfolio::Statistics::downside_deviation</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a95ab1789aea3818a1e9e07c746280c53" compoundref="d8/de8/drawdown_8h" startline="166" endline="200">pyfolio::performance::drawdown_duration</referencedby>
        <referencedby refid="da/d6e/classpyfolio_1_1intraday_1_1IntradayAnalyzer_1ad5f70c82e839ca853a0ab7132e4c7259" compoundref="dc/d51/intraday_8cpp" startline="57" endline="99">pyfolio::intraday::IntradayAnalyzer::estimate_intraday_positions</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1ab1eabb16efcab66bc24ea2fc4834093f" compoundref="dd/d45/trading__costs_8h" startline="254" endline="290">pyfolio::transactions::TradingCostAnalyzer::estimate_optimal_trade_size</referencedby>
        <referencedby refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1a566c275feb01e5f83234c36b9d13a885" compoundref="d7/d0c/holdings_8h" startline="400" endline="428">pyfolio::positions::HoldingsSeries::exposure_series</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" compoundref="d0/db6/transaction_8h" startline="211" endline="219">pyfolio::transactions::TransactionSeries::filter_by_date_range</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" compoundref="d0/db6/transaction_8h" startline="199" endline="206">pyfolio::transactions::TransactionSeries::filter_by_symbol</referencedby>
        <referencedby refid="dd/dcf/classpyfolio_1_1analytics_1_1BayesianAnalyzer_1a7eceaad081c1c0baebefd3ffa8762459" compoundref="d6/dfe/bayesian_8h" startline="335" endline="378">pyfolio::analytics::BayesianAnalyzer::forecast_returns</referencedby>
        <referencedby refid="d6/d82/classpyfolio_1_1io_1_1CSVParser_1ab4972ef795c3917b13c5ef9e92c97f1b" compoundref="d2/db9/data__loader_8h" startline="528" endline="537">pyfolio::io::CSVParser::get_column_index</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a0d055a35906794c27b9136229a063a65" compoundref="d7/d0c/holdings_8h" startline="111" endline="117">pyfolio::positions::PortfolioHoldings::get_holding</referencedby>
        <referencedby refid="d0/d6c/structpyfolio_1_1analytics_1_1MarketIndicators_1a3472ae4a6b393649294553e755691488" compoundref="d4/d7b/market__indicators_8h" startline="103" endline="128">pyfolio::analytics::MarketIndicators::get_indicator</referencedby>
        <referencedby refid="d2/da5/namespacepyfolio_1_1risk_1ac7c4871092a6b879c5ce42bfefcbce07" compoundref="df/d46/var_8h" startline="590" endline="598">pyfolio::risk::historical_var</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a72a6639531f459b9963884e4d4ac571e" compoundref="d7/d06/ratios_8h" startline="164" endline="212">pyfolio::performance::information_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a0fd32c54eb1fea5a675633d5f85b7fc0" compoundref="d5/db2/analytics_2statistics_8h" startline="522" endline="561">pyfolio::Statistics::information_ratio</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1ae51a470f87ae34ae1f58305531f9dcf8" compoundref="d3/dbe/math_2statistics_8h" startline="199" endline="230">pyfolio::stats::kurtosis</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" compoundref="d2/d99/dataframe_8h" startline="194" endline="233">pyfolio::DataFrame::loc</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" compoundref="d3/d11/error__handling_8h" startline="123" endline="135">pyfolio::Result&lt; T &gt;::map</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a2233d9e06edde686d5b6620a2830130a" compoundref="d2/dfc/regime__detection_8h" startline="382" endline="478">pyfolio::analytics::RegimeDetector::markov_switching_detection</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae12cd4f5a2e889c8d7ff4ac4ab513f5e" compoundref="d4/dc1/cached__performance__metrics_8h" startline="483" endline="516">pyfolio::analytics::CachedPerformanceCalculator::max_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a919af12e2600a7e77163a20bf6f98609" compoundref="d8/de8/drawdown_8h" startline="66" endline="81">pyfolio::performance::max_drawdown</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" compoundref="d5/db2/analytics_2statistics_8h" startline="397" endline="445">pyfolio::Statistics::max_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aff3558ae3dd3ed4381a805f730d47b53" compoundref="d8/de8/drawdown_8h" startline="86" endline="161">pyfolio::performance::max_drawdown_info</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a8bc981bc9cbd284d47b40f4ce72c14a5" compoundref="d4/dc1/cached__performance__metrics_8h" startline="282" endline="302">pyfolio::analytics::CachedPerformanceCalculator::mean</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a0ded7b265023215831bffb8b799ba59a" compoundref="d3/dbe/math_2statistics_8h" startline="112" endline="119">pyfolio::stats::mean</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad798a4da69bff9c8bb9d335eaba6ec6" compoundref="d8/d51/time__series_8h" startline="778" endline="797">pyfolio::TimeSeries&lt; MarketIndicators &gt;::mean</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a376eed0b5df19f13f64b76230fdf6718" compoundref="d7/d06/ratios_8h" startline="217" endline="251">pyfolio::performance::omega_ratio</referencedby>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a92b8d67fd5072f6ff834101212b172fa" compoundref="d9/d36/parallel__algorithms_8h" startline="314" endline="384">pyfolio::parallel::ParallelAlgorithms::parallel_correlation</referencedby>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1af891348d5d6cc6b7f50308ef2e29201c" compoundref="d9/d36/parallel__algorithms_8h" startline="268" endline="281">pyfolio::parallel::ParallelAlgorithms::parallel_mean</referencedby>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a3ba756e53e41ef4d081bd813d026afeb" compoundref="d9/d36/parallel__algorithms_8h" startline="212" endline="262">pyfolio::parallel::ParallelAlgorithms::parallel_reduce</referencedby>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1ad92d62a79d4044197fdf6532ea08eb8f" compoundref="d9/d36/parallel__algorithms_8h" startline="287" endline="308">pyfolio::parallel::ParallelAlgorithms::parallel_std_deviation</referencedby>
        <referencedby refid="d6/d4f/classpyfolio_1_1DateTime_1adfc972d8ea84c03f9a6d9eb9e661b6cd" compoundref="de/d1b/datetime_8h" startline="150" endline="173">pyfolio::DateTime::parse</referencedby>
        <referencedby refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1af5ccaefdc7c758341967765eae7e199b" compoundref="d4/d45/json__serializer_8h" startline="236" endline="290">pyfolio::web::JsonSerializer::parse_transaction_record</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1aea9b2c25523d93f5afb06c51f77c6f47" compoundref="d3/dbe/math_2statistics_8h" startline="320" endline="350">pyfolio::stats::percentile</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a92bdc2235a48b8715a1790c9203d08b9" compoundref="d2/d99/dataframe_8h" startline="106" endline="116">pyfolio::DataFrame::remove_column</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a07f089ab270bd9a2daf14c4802966942" compoundref="d8/de8/drawdown_8h" startline="319" endline="354">pyfolio::performance::rolling_max_drawdown</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a5e53c9105f237045953172393a34c5c2" compoundref="d4/d73/returns_8h" startline="175" endline="197">pyfolio::performance::rolling_returns</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a65aa70a47c152e3dbb1e73ea2dd1f0c4" compoundref="d7/d06/ratios_8h" startline="330" endline="368">pyfolio::performance::rolling_sharpe_ratio</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a8a0797d8f8603e3757181fb825c960b8" compoundref="d4/d73/returns_8h" startline="225" endline="254">pyfolio::performance::rolling_volatility</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1aae9dcab036865e9b023c1b9464a65611" compoundref="d7/d00/round__trips_8h" startline="291" endline="348">pyfolio::transactions::round_trip_performance_by_period</referencedby>
        <referencedby refid="d8/ddb/namespacepyfolio_1_1io_1a9bc0f126fc69a4d2e976f6b06fec79ee" compoundref="d2/db9/data__loader_8h" startline="300" endline="330">pyfolio::io::save_positions_to_csv</referencedby>
        <referencedby refid="d8/ddb/namespacepyfolio_1_1io_1ac5936d5d5b52389eca310e60b1e799b1" compoundref="d2/db9/data__loader_8h" startline="274" endline="298">pyfolio::io::save_returns_to_csv</referencedby>
        <referencedby refid="d8/ddb/namespacepyfolio_1_1io_1a2e15bed59889eb6a31375d80d5691b1b" compoundref="d2/db9/data__loader_8h" startline="332" endline="358">pyfolio::io::save_transactions_to_csv</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a00a9bb8b81f58c827f311295bd906022" compoundref="d2/d99/dataframe_8h" startline="238" endline="252">pyfolio::DataFrame::select</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a49db7f0e6fefba365991ee6dc7bc77a8" compoundref="d2/d99/dataframe_8h" startline="177" endline="189">pyfolio::DataFrame::set_at</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a81cf0052efc5c5dbe0ea46f4ac5d713b" compoundref="d2/d99/dataframe_8h" startline="135" endline="149">pyfolio::DataFrame::set_column</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1a78e06e24b176ddec6dc0640e175bdd1f" compoundref="d4/dc1/cached__performance__metrics_8h" startline="444" endline="477">pyfolio::analytics::CachedPerformanceCalculator::sharpe_ratio</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1aa8dd6ffc556adc3f76dc32645ec6b57c" compoundref="d7/d06/ratios_8h" startline="15" endline="57">pyfolio::performance::sharpe_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1add05d2ec066eecbb3feb17b3ecab1fe8" compoundref="d5/db2/analytics_2statistics_8h" startline="287" endline="305">pyfolio::Statistics::sharpe_ratio</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a5df7d33f99e4ea05ccf659ac88173b4e" compoundref="d3/dbe/math_2statistics_8h" startline="164" endline="193">pyfolio::stats::skewness</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" compoundref="d2/d99/dataframe_8h" startline="258" endline="304">pyfolio::DataFrame::sort_by</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a2b9a9772352ff85db5af94511638114f" compoundref="d7/d06/ratios_8h" startline="62" endline="111">pyfolio::performance::sortino_ratio</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1ae3abd35508b1c2c76a918a8d58338e41" compoundref="d5/db2/analytics_2statistics_8h" startline="309" endline="342">pyfolio::Statistics::sortino_ratio</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a5784ddc0d8e243ae533e21f2f9b5054a" compoundref="de/d88/performance__metrics_8h" startline="263" endline="266">pyfolio::PerformanceMetrics::stability_of_timeseries</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1ae9a69383818faf0de2b2e0a99d4179d9" compoundref="d3/dbe/math_2statistics_8h" startline="151" endline="158">pyfolio::stats::standard_deviation</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82439ade72c213e3ffd477dd6a2058e5" compoundref="d8/d51/time__series_8h" startline="802" endline="824">pyfolio::TimeSeries&lt; MarketIndicators &gt;::std</referencedby>
        <referencedby refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1ae2b363deb9d87338d104b96de4ae3a7f" compoundref="d4/dc1/cached__performance__metrics_8h" startline="308" endline="327">pyfolio::analytics::CachedPerformanceCalculator::std_deviation</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1a774beb5ef6d09f2a32210cda918d25e7" compoundref="d2/dfc/regime__detection_8h" startline="491" endline="574">pyfolio::analytics::RegimeDetector::structural_break_detection</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1ac6c146bcc32eea3eca50844ceb910a9b" compoundref="de/d88/performance__metrics_8h" startline="251" endline="254">pyfolio::PerformanceMetrics::tail_ratio</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ab0309859ab0f7c06dd583111fc9ae8d6" compoundref="d7/d0c/holdings_8h" startline="185" endline="220">pyfolio::positions::PortfolioHoldings::to_dataframe</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" compoundref="d0/db6/transaction_8h" startline="483" endline="512">pyfolio::transactions::TransactionSeries::to_dataframe</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" compoundref="d0/db6/transaction_8h" startline="375" endline="386">pyfolio::transactions::TransactionSeries::total_notional_value</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1a6bc9f0c706b2d89a0eb6c539eddef077" compoundref="d4/d73/returns_8h" startline="259" endline="270">pyfolio::performance::total_return</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a2e0bb5b9b5052088b4ec146150811489" compoundref="d5/db2/analytics_2statistics_8h" startline="564" endline="598">pyfolio::Statistics::tracking_error</referencedby>
        <referencedby refid="d8/dd9/namespacepyfolio_1_1performance_1ae0eb073ae0b6cba1b6f6ed684179da8c" compoundref="d7/d06/ratios_8h" startline="256" endline="325">pyfolio::performance::treynor_ratio</referencedby>
        <referencedby refid="d7/ddc/classpyfolio_1_1TimeSeries_1aa0d2f984a31a4e1aa0c38955db2b3930" compoundref="d8/d51/time__series_8h" startline="156" endline="170">pyfolio::TimeSeries&lt; MarketIndicators &gt;::try_push_back</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a73f78d1e5ebebe459b1e9b8c2f5c695f" compoundref="de/d88/performance__metrics_8h" startline="241" endline="248">pyfolio::PerformanceMetrics::up_down_capture_ratio</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a49248a12c768f69751c468d8d331b0aa" compoundref="d7/d0c/holdings_8h" startline="80" endline="106">pyfolio::positions::PortfolioHoldings::update_holding</referencedby>
        <referencedby refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" compoundref="d0/db6/transaction_8h" startline="116" endline="134">pyfolio::transactions::TransactionRecord::validate</referencedby>
        <referencedby refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a2535e27fe2a3b80ae855b36c20d0af49" compoundref="d2/db9/data__loader_8h" startline="495" endline="500">pyfolio::io::validation::validate_positions</referencedby>
        <referencedby refid="d5/d2b/namespacepyfolio_1_1utils_1a370230a288b281c76873fb0472d69841" compoundref="db/d38/validation_8h" startline="22" endline="34">pyfolio::utils::validate_prices</referencedby>
        <referencedby refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1abcc020a32adbc5f5cf4f5497992bd947" compoundref="d2/db9/data__loader_8h" startline="488" endline="493">pyfolio::io::validation::validate_returns</referencedby>
        <referencedby refid="d5/d2b/namespacepyfolio_1_1utils_1afea61375d6757436d1f01bed259c58a3" compoundref="db/d38/validation_8h" startline="11" endline="17">pyfolio::utils::validate_returns</referencedby>
        <referencedby refid="d5/dc0/namespacepyfolio_1_1io_1_1validation_1a9675e91fd8c5ddb8feb34ee897725c82" compoundref="d2/db9/data__loader_8h" startline="502" endline="507">pyfolio::io::validation::validate_transactions</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1a1f80321b9a21528dec7e6978131ee2e7" compoundref="d3/dbe/math_2statistics_8h" startline="376" endline="391">pyfolio::stats::value_at_risk</referencedby>
        <referencedby refid="d6/ddc/namespacepyfolio_1_1stats_1afae76bfc655b39b929869957f17e2406" compoundref="d3/dbe/math_2statistics_8h" startline="125" endline="145">pyfolio::stats::variance</referencedby>
        <referencedby refid="d0/dfb/classpyfolio_1_1analytics_1_1RegimeDetector_1ab8f25fc631e3be5209e6375a9777d9d5" compoundref="d2/dfc/regime__detection_8h" startline="579" endline="647">pyfolio::analytics::RegimeDetector::volatility_regime_detection</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; T &gt;::success</definition>
        <argsstring>(T &amp;&amp;value)</argsstring>
        <name>success</name>
        <qualifiedname>pyfolio::Result::success</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="76" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="76" bodyend="76"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" compoundref="d3/d11/error__handling_8h" startline="68" endline="68">pyfolio::Result&lt; T &gt;::Result</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" compoundref="d3/d11/error__handling_8h" startline="95" endline="101">pyfolio::Result&lt; T &gt;::value</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; T &gt;::error</definition>
        <argsstring>(ErrorCode code, const std::string &amp;message, const std::string &amp;context=&quot;&quot;, std::source_location loc=std::source_location::current())</argsstring>
        <name>error</name>
        <qualifiedname>pyfolio::Result::error</qualifiedname>
        <param>
          <type><ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9" kindref="member">ErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>context</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::source_location</type>
          <declname>loc</declname>
          <defval>std::source_location::current()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="79" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="79" bodyend="84"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" compoundref="d3/d11/error__handling_8h" startline="68" endline="68">pyfolio::Result&lt; T &gt;::Result</references>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1a92b8d67fd5072f6ff834101212b172fa" compoundref="d9/d36/parallel__algorithms_8h" startline="314" endline="384">pyfolio::parallel::ParallelAlgorithms::parallel_correlation</referencedby>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1af891348d5d6cc6b7f50308ef2e29201c" compoundref="d9/d36/parallel__algorithms_8h" startline="268" endline="281">pyfolio::parallel::ParallelAlgorithms::parallel_mean</referencedby>
        <referencedby refid="d1/d34/classpyfolio_1_1parallel_1_1ParallelAlgorithms_1ad92d62a79d4044197fdf6532ea08eb8f" compoundref="d9/d36/parallel__algorithms_8h" startline="287" endline="308">pyfolio::parallel::ParallelAlgorithms::parallel_std_deviation</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" compoundref="d3/d11/error__handling_8h" startline="70" endline="70">pyfolio::Result&lt; T &gt;::Result</referencedby>
        <referencedby refid="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" compoundref="d3/d11/error__handling_8h" startline="71" endline="71">pyfolio::Result&lt; T &gt;::Result</referencedby>
        <referencedby refid="db/db8/classpyfolio_1_1web_1_1JsonSerializer_1ae12c7f18031cb7d03ec2756e85b2bb6d" compoundref="d4/d45/json__serializer_8h" startline="152" endline="167">pyfolio::web::JsonSerializer::serialize_result</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Result&lt;T&gt; monad for robust error handling without exceptions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="62" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="62" bodyend="160"/>
    <listofallmembers>
      <member refid="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>and_then</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a756495b89dd42029dfa66d87c9a6d614" prot="private" virt="non-virtual"><scope>pyfolio::Result</scope><name>data_</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>error</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>error</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>has_value</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>is_error</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>is_ok</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>map</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>or_else</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>success</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>success</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>value</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>value</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" prot="public" virt="non-virtual"><scope>pyfolio::Result</scope><name>value_or</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
