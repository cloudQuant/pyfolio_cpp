<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dc/ddd/classpyfolio_1_1BusinessCalendar" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::BusinessCalendar</compoundname>
    <includes refid="de/d1b/datetime_8h" local="no">datetime.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a9d56e681101beceefbd2e8a2d5e4a09e" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::chrono::year_month_day &gt;</type>
        <definition>std::set&lt;std::chrono::year_month_day&gt; pyfolio::BusinessCalendar::holidays_</definition>
        <argsstring></argsstring>
        <name>holidays_</name>
        <qualifiedname>pyfolio::BusinessCalendar::holidays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="21" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1adcc204f77d7524069f990228bb4a8fb2" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string pyfolio::BusinessCalendar::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>pyfolio::BusinessCalendar::name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="22" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="22" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1ad2a498a5b8727d5b243b28831ea75a85" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::BusinessCalendar::BusinessCalendar</definition>
        <argsstring>(const std::string &amp;name=&quot;NYSE&quot;)</argsstring>
        <name>BusinessCalendar</name>
        <qualifiedname>pyfolio::BusinessCalendar::BusinessCalendar</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <defval>&quot;NYSE&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="25" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::BusinessCalendar::is_business_day</definition>
        <argsstring>(const std::chrono::year_month_day &amp;date) const</argsstring>
        <name>is_business_day</name>
        <qualifiedname>pyfolio::BusinessCalendar::is_business_day</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Check if a date is a business day. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="30" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="30" bodyend="41"/>
        <referencedby refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a606d7f0aa04e6d5099608f52c82606b8" compoundref="de/d1b/datetime_8h" startline="70" endline="85">business_days_between</referencedby>
        <referencedby refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1aefc7d92eb158b3c500a314814700ca5a" compoundref="de/d1b/datetime_8h" startline="369" endline="371">is_business_day</referencedby>
        <referencedby refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1aabfb6559b0ab5f76e5bc54bc48bf8280" compoundref="de/d1b/datetime_8h" startline="46" endline="53">next_business_day</referencedby>
        <referencedby refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a3f2c671788b7ecc51164df1d2cba5ac6" compoundref="de/d1b/datetime_8h" startline="58" endline="65">previous_business_day</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1aabfb6559b0ab5f76e5bc54bc48bf8280" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::chrono::year_month_day</type>
        <definition>std::chrono::year_month_day pyfolio::BusinessCalendar::next_business_day</definition>
        <argsstring>(const std::chrono::year_month_day &amp;date) const</argsstring>
        <name>next_business_day</name>
        <qualifiedname>pyfolio::BusinessCalendar::next_business_day</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Get the next business day. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="46" column="33" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="46" bodyend="53"/>
        <references refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" compoundref="de/d1b/datetime_8h" startline="30" endline="41">is_business_day</references>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a3f2c671788b7ecc51164df1d2cba5ac6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::chrono::year_month_day</type>
        <definition>std::chrono::year_month_day pyfolio::BusinessCalendar::previous_business_day</definition>
        <argsstring>(const std::chrono::year_month_day &amp;date) const</argsstring>
        <name>previous_business_day</name>
        <qualifiedname>pyfolio::BusinessCalendar::previous_business_day</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Get the previous business day. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="58" column="33" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="58" bodyend="65"/>
        <references refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" compoundref="de/d1b/datetime_8h" startline="30" endline="41">is_business_day</references>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a606d7f0aa04e6d5099608f52c82606b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int pyfolio::BusinessCalendar::business_days_between</definition>
        <argsstring>(const std::chrono::year_month_day &amp;start, const std::chrono::year_month_day &amp;end) const</argsstring>
        <name>business_days_between</name>
        <qualifiedname>pyfolio::BusinessCalendar::business_days_between</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para><ref refid="d7/df8/namespacepyfolio_1a03c09fd9b3b52c867944288b0322d060" kindref="member">Count</ref> business days between two dates (exclusive of start, inclusive of end) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="70" column="9" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="70" bodyend="85"/>
        <references refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" compoundref="de/d1b/datetime_8h" startline="30" endline="41">is_business_day</references>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a4eb09daeb43ef70ced656afa1b1e8119" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::BusinessCalendar::add_holiday</definition>
        <argsstring>(const std::chrono::year_month_day &amp;date)</argsstring>
        <name>add_holiday</name>
        <qualifiedname>pyfolio::BusinessCalendar::add_holiday</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Add holidays to the calendar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="90" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="90" bodyend="90"/>
        <referencedby refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a0177da4553069a3a716fa7376309debf" compoundref="de/d1b/datetime_8h" startline="373" endline="375">add_holiday</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a80958bdfc47f0547a79e24c969e67d45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::BusinessCalendar::remove_holiday</definition>
        <argsstring>(const std::chrono::year_month_day &amp;date)</argsstring>
        <name>remove_holiday</name>
        <qualifiedname>pyfolio::BusinessCalendar::remove_holiday</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Remove holidays from the calendar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="95" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a37e4f2d036eefb42604b66da39530949" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::BusinessCalendar::is_holiday</definition>
        <argsstring>(const std::chrono::year_month_day &amp;date) const</argsstring>
        <name>is_holiday</name>
        <qualifiedname>pyfolio::BusinessCalendar::is_holiday</qualifiedname>
        <param>
          <type>const std::chrono::year_month_day &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Check if a date is a holiday. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="100" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="100" bodyend="100"/>
        <referencedby refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a5711cab9566628674bb976d7d4d71cdf" compoundref="de/d1b/datetime_8h" startline="365" endline="367">is_holiday</referencedby>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a5711cab9566628674bb976d7d4d71cdf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::BusinessCalendar::is_holiday</definition>
        <argsstring>(const DateTime &amp;date) const</argsstring>
        <name>is_holiday</name>
        <qualifiedname>pyfolio::BusinessCalendar::is_holiday</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="103" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="365" bodyend="367"/>
        <references refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a37e4f2d036eefb42604b66da39530949" compoundref="de/d1b/datetime_8h" startline="100" endline="100">is_holiday</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1a14bed41e6c19c2dfd9c0d36a5edcd29f" compoundref="de/d1b/datetime_8h" startline="188" endline="190">pyfolio::DateTime::to_date</references>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1aefc7d92eb158b3c500a314814700ca5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::BusinessCalendar::is_business_day</definition>
        <argsstring>(const DateTime &amp;date) const</argsstring>
        <name>is_business_day</name>
        <qualifiedname>pyfolio::BusinessCalendar::is_business_day</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="104" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="369" bodyend="371"/>
        <references refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" compoundref="de/d1b/datetime_8h" startline="30" endline="41">is_business_day</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1a14bed41e6c19c2dfd9c0d36a5edcd29f" compoundref="de/d1b/datetime_8h" startline="188" endline="190">pyfolio::DateTime::to_date</references>
      </memberdef>
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a0177da4553069a3a716fa7376309debf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::BusinessCalendar::add_holiday</definition>
        <argsstring>(const DateTime &amp;date)</argsstring>
        <name>add_holiday</name>
        <qualifiedname>pyfolio::BusinessCalendar::add_holiday</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="105" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="373" bodyend="375"/>
        <references refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a4eb09daeb43ef70ced656afa1b1e8119" compoundref="de/d1b/datetime_8h" startline="90" endline="90">add_holiday</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1a14bed41e6c19c2dfd9c0d36a5edcd29f" compoundref="de/d1b/datetime_8h" startline="188" endline="190">pyfolio::DateTime::to_date</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="dc/ddd/classpyfolio_1_1BusinessCalendar_1a38ab51ec18c93e0ecd469ad39f12b248" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::BusinessCalendar::initialize_default_holidays</definition>
        <argsstring>()</argsstring>
        <name>initialize_default_holidays</name>
        <qualifiedname>pyfolio::BusinessCalendar::initialize_default_holidays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="108" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="108" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Business calendar for handling trading days and holidays. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" line="19" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h" bodystart="19" bodyend="124"/>
    <listofallmembers>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a4eb09daeb43ef70ced656afa1b1e8119" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>add_holiday</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a0177da4553069a3a716fa7376309debf" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>add_holiday</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a606d7f0aa04e6d5099608f52c82606b8" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>business_days_between</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1ad2a498a5b8727d5b243b28831ea75a85" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>BusinessCalendar</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a9d56e681101beceefbd2e8a2d5e4a09e" prot="private" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>holidays_</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a38ab51ec18c93e0ecd469ad39f12b248" prot="private" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>initialize_default_holidays</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1accee21b524cbcd2341bf14a748d2413d" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>is_business_day</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1aefc7d92eb158b3c500a314814700ca5a" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>is_business_day</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a37e4f2d036eefb42604b66da39530949" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>is_holiday</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a5711cab9566628674bb976d7d4d71cdf" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>is_holiday</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1adcc204f77d7524069f990228bb4a8fb2" prot="private" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>name_</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1aabfb6559b0ab5f76e5bc54bc48bf8280" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>next_business_day</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a3f2c671788b7ecc51164df1d2cba5ac6" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>previous_business_day</name></member>
      <member refid="dc/ddd/classpyfolio_1_1BusinessCalendar_1a80958bdfc47f0547a79e24c969e67d45" prot="public" virt="non-virtual"><scope>pyfolio::BusinessCalendar</scope><name>remove_holiday</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
