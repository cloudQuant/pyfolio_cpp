<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d0/db6/transaction_8h" kind="file" language="C++">
    <compoundname>transaction.h</compoundname>
    <includes refid="d2/d99/dataframe_8h" local="yes">../core/dataframe.h</includes>
    <includes refid="de/d1b/datetime_8h" local="yes">../core/datetime.h</includes>
    <includes refid="d3/d11/error__handling_8h" local="yes">../core/error_handling.h</includes>
    <includes refid="d8/d51/time__series_8h" local="yes">../core/time_series.h</includes>
    <includes refid="d9/d49/types_8h" local="yes">../core/types.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">numeric</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includedby refid="d8/d00/attribution__example_8cpp" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp</includedby>
    <includedby refid="d1/db6/capacity__analysis__example_8cpp" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/capacity_analysis_example.cpp</includedby>
    <includedby refid="db/dc6/risk__analysis__example_8cpp" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/risk_analysis_example.cpp</includedby>
    <includedby refid="d7/d56/transaction__analysis__example_8cpp" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/transaction_analysis_example.cpp</includedby>
    <includedby refid="d2/d40/turnover__enhanced_8h" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/turnover_enhanced.h</includedby>
    <includedby refid="db/d26/capacity_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h</includedby>
    <includedby refid="d2/db9/data__loader_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h</includedby>
    <includedby refid="d7/d0c/holdings_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h</includedby>
    <includedby refid="d3/d30/pyfolio_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/pyfolio.h</includedby>
    <includedby refid="d3/d66/tears_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/reporting/tears.h</includedby>
    <includedby refid="d7/d00/round__trips_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/round_trips.h</includedby>
    <includedby refid="dd/d45/trading__costs_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/trading_costs.h</includedby>
    <includedby refid="d2/d59/intraday_8h" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h</includedby>
    <includedby refid="dc/d16/matplotlib__integration_8h" local="no">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h</includedby>
    <includedby refid="d4/d45/json__serializer_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web/json_serializer.h</includedby>
    <includedby refid="de/de7/rest__api__server_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web/rest_api_server.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>../core/dataframe.h</label>
        <link refid="d2/d99/dataframe_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>datetime.h</label>
        <link refid="de/d1b/datetime_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>error_handling.h</label>
        <link refid="d3/d11/error__handling_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>time_series.h</label>
        <link refid="d8/d51/time__series_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>../math/simd_math.h</label>
        <link refid="d6/d99/simd__math_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h</label>
        <link refid="d0/db6/transaction_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="27">
        <label>any</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="22">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>concepts</label>
      </node>
      <node id="14">
        <label>cstddef</label>
      </node>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="23">
        <label>deque</label>
      </node>
      <node id="5">
        <label>exception</label>
      </node>
      <node id="6">
        <label>functional</label>
      </node>
      <node id="24">
        <label>limits</label>
      </node>
      <node id="25">
        <label>map</label>
      </node>
      <node id="26">
        <label>numeric</label>
      </node>
      <node id="7">
        <label>optional</label>
      </node>
      <node id="18">
        <label>set</label>
      </node>
      <node id="8">
        <label>source_location</label>
      </node>
      <node id="21">
        <label>span</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="28">
        <label>typeindex</label>
      </node>
      <node id="10">
        <label>variant</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp</label>
        <link refid="d8/d00/attribution__example_8cpp"/>
      </node>
      <node id="10">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/basic_example.cpp</label>
        <link refid="d3/d6a/basic__example_8cpp"/>
      </node>
      <node id="11">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/bayesian_analysis_example.cpp</label>
        <link refid="da/d7c/bayesian__analysis__example_8cpp"/>
      </node>
      <node id="3">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/capacity_analysis_example.cpp</label>
        <link refid="d1/db6/capacity__analysis__example_8cpp"/>
      </node>
      <node id="16">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/plotly_enhanced_example.cpp</label>
        <link refid="d7/d5f/plotly__enhanced__example_8cpp"/>
      </node>
      <node id="24">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/rest_api_example.cpp</label>
        <link refid="d1/d43/rest__api__example_8cpp"/>
      </node>
      <node id="4">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/risk_analysis_example.cpp</label>
        <link refid="db/dc6/risk__analysis__example_8cpp"/>
      </node>
      <node id="5">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/transaction_analysis_example.cpp</label>
        <link refid="d7/d56/transaction__analysis__example_8cpp"/>
      </node>
      <node id="6">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/turnover_enhanced.h</label>
        <link refid="d2/d40/turnover__enhanced_8h"/>
      </node>
      <node id="13">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h</label>
        <link refid="da/dd4/attribution_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/capacity/capacity.h</label>
        <link refid="db/d26/capacity_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/io/data_loader.h</label>
        <link refid="d2/db9/data__loader_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h</label>
        <link refid="d0/db7/allocation_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h</label>
        <link refid="d7/d0c/holdings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/positions.h</label>
        <link refid="d0/d04/positions_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/pyfolio.h</label>
        <link refid="d3/d30/pyfolio_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/reporting/tears.h</label>
        <link refid="d3/d66/tears_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/round_trips.h</label>
        <link refid="d7/d00/round__trips_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/trading_costs.h</label>
        <link refid="dd/d45/trading__costs_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h</label>
        <link refid="d0/db6/transaction_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h</label>
        <link refid="d2/d59/intraday_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h</label>
        <link refid="dc/d16/matplotlib__integration_8h"/>
      </node>
      <node id="20">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h</label>
        <link refid="d1/dcd/plotly__enhanced_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web/json_serializer.h</label>
        <link refid="d4/d45/json__serializer_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web/rest_api_server.h</label>
        <link refid="de/de7/rest__api__server_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp</label>
        <link refid="dc/d51/intraday_8cpp"/>
      </node>
      <node id="21">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp</label>
        <link refid="d2/dd1/plotly__enhanced_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" prot="public">pyfolio::transactions::TransactionRecord</innerclass>
    <innerclass refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" prot="public">pyfolio::transactions::TransactionSeries</innerclass>
    <innerclass refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" prot="public">pyfolio::transactions::TransactionSeries::TransactionStatistics</innerclass>
    <innernamespace refid="d7/df8/namespacepyfolio">pyfolio</innernamespace>
    <innernamespace refid="dc/d4e/namespacepyfolio_1_1transactions">pyfolio::transactions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d2/d99/dataframe_8h" kindref="compound">../core/dataframe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d1b/datetime_8h" kindref="compound">../core/datetime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d11/error__handling_8h" kindref="compound">../core/error_handling.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d51/time__series_8h" kindref="compound">../core/time_series.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d49/types_8h" kindref="compound">../core/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">pyfolio::transactions</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kindref="member">TransactionType</ref><sp/>{<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">Buy</ref>,<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa3068c5a98c003498f1fec0c489212e8b" kindref="member">Sell</ref><sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a24807d5be1ef4afafe5c1398c4a6124c" kindref="member">TransactionRecord</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref><sp/>symbol_;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref><sp/>shares_;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1a7801b507a1c22f3c1a83bdef81846fc6" kindref="member">Price</ref><sp/>price_;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref><sp/>timestamp_;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1a49f3a0c47eb3421e87ad773e9b97ff2a" kindref="member">Currency</ref><sp/>currency_;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>commission_;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>slippage_;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>exchange_;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>order_id_;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kindref="member">TransactionType</ref><sp/>type_;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a24807d5be1ef4afafe5c1398c4a6124c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a24807d5be1ef4afafe5c1398c4a6124c" kindref="member">TransactionRecord</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>,<sp/><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>,<sp/><ref refid="d7/df8/namespacepyfolio_1a7801b507a1c22f3c1a83bdef81846fc6" kindref="member">Price</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kindref="member">TransactionType</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref><sp/>=<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">TransactionType::Buy</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a49f3a0c47eb3421e87ad773e9b97ff2a" kindref="member">Currency</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a4aad9d278d99a6ea902df97607a37e92" kindref="member">commission</ref><sp/>=<sp/>0.0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a0e638d5d35ac200e4c4c6dca89d87d09" kindref="member">slippage</ref><sp/>=<sp/>0.0)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>symbol_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>),<sp/>shares_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>),<sp/>price_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>),<sp/>timestamp_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>),<sp/>currency_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref>),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commission_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a4aad9d278d99a6ea902df97607a37e92" kindref="member">commission</ref>),<sp/>slippage_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a0e638d5d35ac200e4c4c6dca89d87d09" kindref="member">slippage</ref>),<sp/>type_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alternative<sp/>constructor<sp/>matching<sp/>test<sp/>expectations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a37426455c247fb3ca0b39ef80d38b7f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a37426455c247fb3ca0b39ef80d38b7f4" kindref="member">TransactionRecord</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>,<sp/><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>,<sp/><ref refid="d7/df8/namespacepyfolio_1a7801b507a1c22f3c1a83bdef81846fc6" kindref="member">Price</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>,<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kindref="member">TransactionType</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a49f3a0c47eb3421e87ad773e9b97ff2a" kindref="member">Currency</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>symbol_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>),<sp/>shares_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>),<sp/>price_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>),<sp/>timestamp_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>),<sp/>currency_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref>),<sp/>commission_(0.0),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slippage_(0.0),<sp/>type_(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>symbol_;<sp/>}</highlight></codeline>
<codeline lineno="52" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shares_;<sp/>}</highlight></codeline>
<codeline lineno="53" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1a7801b507a1c22f3c1a83bdef81846fc6" kindref="member">Price</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>price_;<sp/>}</highlight></codeline>
<codeline lineno="54" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timestamp_;<sp/>}</highlight></codeline>
<codeline lineno="55" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeb961e2ac802dc5d6163a7119e26f6b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeb961e2ac802dc5d6163a7119e26f6b3" kindref="member">date</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timestamp_;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>Alias<sp/>for<sp/>test<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a49f3a0c47eb3421e87ad773e9b97ff2a" kindref="member">Currency</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currency_;<sp/>}</highlight></codeline>
<codeline lineno="57" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a4aad9d278d99a6ea902df97607a37e92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a4aad9d278d99a6ea902df97607a37e92" kindref="member">commission</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commission_;<sp/>}</highlight></codeline>
<codeline lineno="58" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a0e638d5d35ac200e4c4c6dca89d87d09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a0e638d5d35ac200e4c4c6dca89d87d09" kindref="member">slippage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slippage_;<sp/>}</highlight></codeline>
<codeline lineno="59" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a66cd86a887732ad4edeab23b4a84d6b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a66cd86a887732ad4edeab23b4a84d6b9" kindref="member">exchange</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exchange_;<sp/>}</highlight></codeline>
<codeline lineno="60" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ae04f14d17f1c8788910820d8f1394cc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ae04f14d17f1c8788910820d8f1394cc5" kindref="member">order_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>order_id_;<sp/>}</highlight></codeline>
<codeline lineno="61" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kindref="member">TransactionType</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type_;<sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculated<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ab333853e90bed6b19085716a30e14890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ab333853e90bed6b19085716a30e14890" kindref="member">notional_value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::abs(shares_)<sp/>*<sp/>price_;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Static<sp/>factory<sp/>method<sp/>for<sp/>validation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a709624b3190081f3a358fc6aac367757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TransactionRecord&gt;</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a709624b3190081f3a358fc6aac367757" kindref="member">create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>,<sp/><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>,<sp/><ref refid="d7/df8/namespacepyfolio_1a7801b507a1c22f3c1a83bdef81846fc6" kindref="member">Price</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6f" kindref="member">TransactionType</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a49f3a0c47eb3421e87ad773e9b97ff2a" kindref="member">Currency</ref>&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TransactionRecord&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Symbol<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref><sp/>&lt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TransactionRecord&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Price<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref><sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TransactionRecord&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Shares<sp/>cannot<sp/>be<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TransactionRecord&gt;::success</ref>(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a24807d5be1ef4afafe5c1398c4a6124c" kindref="member">TransactionRecord</ref>(<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a23d1be68fe932ae0a837e91900832d27" kindref="member">symbol</ref>,<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a6fd1a872bd04059ded648869a386e2f4" kindref="member">timestamp</ref>,<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3f7b867b26e9bfa9dc1f68d04adf7cd6" kindref="member">shares</ref>,<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a7151515d54d7ffa33f422324be4978c8" kindref="member">price</ref>,<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a8347848450d2ec1b3c9fe62c22465b34" kindref="member">type</ref>,<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a5387d0cf6dfb7cde55f5deb39c8334e2" kindref="member">currency</ref>));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1abff8f45c13a638ca8ffd31bb0c0daf96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1abff8f45c13a638ca8ffd31bb0c0daf96" kindref="member">set_exchange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a66cd86a887732ad4edeab23b4a84d6b9" kindref="member">exchange</ref>)<sp/>{<sp/>exchange_<sp/>=<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a66cd86a887732ad4edeab23b4a84d6b9" kindref="member">exchange</ref>;<sp/>}</highlight></codeline>
<codeline lineno="83" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a889c2adb037688ff9c7926f88c638150" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a889c2adb037688ff9c7926f88c638150" kindref="member">set_order_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ae04f14d17f1c8788910820d8f1394cc5" kindref="member">order_id</ref>)<sp/>{<sp/>order_id_<sp/>=<sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1ae04f14d17f1c8788910820d8f1394cc5" kindref="member">order_id</ref>;<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeed8a515d5b9e104f00010c1c818d41a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aeed8a515d5b9e104f00010c1c818d41a" kindref="member">value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shares_<sp/>*<sp/>price_;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a00a9205c8733a32c7627e23e8000f32b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a00a9205c8733a32c7627e23e8000f32b" kindref="member">net_cash_flow</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Negative<sp/>for<sp/>buys,<sp/>positive<sp/>for<sp/>sells</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(shares_<sp/>*<sp/>price_<sp/>+<sp/>commission_<sp/>+<sp/>std::abs(shares_<sp/>*<sp/>slippage_));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3c2ebe027cd58a1ef333bf4b49e450e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3c2ebe027cd58a1ef333bf4b49e450e6" kindref="member">total_cost</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commission_<sp/>+<sp/>std::abs(shares_<sp/>*<sp/>slippage_);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3df396e26103be078c6a0b7930b120bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a3df396e26103be078c6a0b7930b120bf" kindref="member">is_buy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shares_<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a284d0c12f4b1f7d8bc89d049b42789e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1a284d0c12f4b1f7d8bc89d049b42789e6" kindref="member">is_sell</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shares_<sp/>&lt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;void&gt;</ref><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" kindref="member">validate</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol_.empty())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;void&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>symbol<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shares_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;void&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>shares<sp/>cannot<sp/>be<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(price_<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;void&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>price<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(commission_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;void&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Commission<sp/>cannot<sp/>be<sp/>negative&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;void&gt;::success</ref>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" kindref="member">TransactionSeries</ref><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TransactionRecord&gt;<sp/>transactions_;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sort_by_timestamp()<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(transactions_.begin(),<sp/>transactions_.end(),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>b)<sp/>{<sp/>return<sp/>a.timestamp()<sp/>&lt;<sp/>b.timestamp();<sp/>});</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" kindref="member">iterator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::vector&lt;TransactionRecord&gt;::iterator;</highlight></codeline>
<codeline lineno="151" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" kindref="member">const_iterator</ref><sp/>=<sp/>std::vector&lt;TransactionRecord&gt;::const_iterator;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" kindref="member">TransactionSeries</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a634c4e1cd3f544e76506eb93b727c159" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a634c4e1cd3f544e76506eb93b727c159" kindref="member">TransactionSeries</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TransactionRecord&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>)<sp/>:<sp/>transactions_(<ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_by_timestamp();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2e055702744625143626e1c3bb60ddb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a2e055702744625143626e1c3bb60ddb1" kindref="member">TransactionSeries</ref>(std::vector&lt;TransactionRecord&gt;&amp;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>)<sp/>:<sp/>transactions_(std::move(<ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>))<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_by_timestamp();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capacity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.size();<sp/>}</highlight></codeline>
<codeline lineno="166" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.empty();<sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Element<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac6b2dff2b7e435b8bbe8cfc922499cbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac6b2dff2b7e435b8bbe8cfc922499cbe" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_[i];<sp/>}</highlight></codeline>
<codeline lineno="170" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af8f76dbec2f1d5e4d8dc4eb3b077efd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af8f76dbec2f1d5e4d8dc4eb3b077efd1" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_[i];<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1fdd056e5bb444f999e769d8c34c8347" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1fdd056e5bb444f999e769d8c34c8347" kindref="member">front</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.front();<sp/>}</highlight></codeline>
<codeline lineno="173" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ad19e978acf19a75a03cb0a244863d718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ad19e978acf19a75a03cb0a244863d718" kindref="member">back</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.back();<sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1c7fed62cfc06ad403726bc4238ec70c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" kindref="member">iterator</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a1c7fed62cfc06ad403726bc4238ec70c" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.begin();<sp/>}</highlight></codeline>
<codeline lineno="177" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af522fa60fea545128a704157c2c2c9b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" kindref="member">const_iterator</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af522fa60fea545128a704157c2c2c9b3" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.begin();<sp/>}</highlight></codeline>
<codeline lineno="178" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3399af34938aeff12a0d8856c7491f8d" kindref="member">iterator</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.end();<sp/>}</highlight></codeline>
<codeline lineno="179" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a968060d822c816dfca8a17a1858a268b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a3209958f3e5c362504a4c77677370215" kindref="member">const_iterator</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a968060d822c816dfca8a17a1858a268b" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>transactions_.end();<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;void&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kindref="member">add_transaction</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>transaction)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>validation<sp/>=<sp/>transaction.<ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord_1aa98639f0ab9b3a884cd477082d29b797" kindref="member">validate</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(validation.is_error())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>validation;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions_.push_back(transaction);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_by_timestamp();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;void&gt;::success</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TransactionSeries&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" kindref="member">filter_by_symbol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/>symbol)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TransactionRecord&gt;<sp/>filtered;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_if(transactions_.begin(),<sp/>transactions_.end(),<sp/>std::back_inserter(filtered),</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;symbol](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>t)<sp/>{<sp/>return<sp/>t.symbol()<sp/>==<sp/>symbol;<sp/>});</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TransactionSeries&gt;::success</ref>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" kindref="member">TransactionSeries</ref>{std::move(filtered)});</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TransactionSeries&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aa8ef513293d1eb5c6da54bd69e50104a" kindref="member">filter_by_date_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" kindref="member">end</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;TransactionRecord&gt;<sp/>filtered;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_if(</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions_.begin(),<sp/>transactions_.end(),<sp/>std::back_inserter(filtered),</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;start,<sp/>&amp;<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ac27c6505e1c1338678f4058c8af53db7" kindref="member">end</ref>](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>t)<sp/>{<sp/>return<sp/>t.timestamp()<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>t.timestamp()<sp/>&lt;=<sp/>end;<sp/>});</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TransactionSeries&gt;::success</ref>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ab1429a8764a0b0303700d97c1b6d7720" kindref="member">TransactionSeries</ref>{std::move(filtered)});</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Symbol&gt;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" kindref="member">get_symbols</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Symbol&gt;<sp/>symbols;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::find(symbols.begin(),<sp/>symbols.end(),<sp/>txn.symbol())<sp/>==<sp/>symbols.end())<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols.push_back(txn.symbol());</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>symbols;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8ed92f3472d3597805939fae6af33b79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8ed92f3472d3597805939fae6af33b79" kindref="member">total_value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(transactions_.begin(),<sp/>transactions_.end(),<sp/>0.0,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>t)<sp/>{<sp/>return<sp/>sum<sp/>+<sp/>std::abs(t.value());<sp/>});</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af3c9618e9b0d73c0e47a2b0cdf2f68f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af3c9618e9b0d73c0e47a2b0cdf2f68f9" kindref="member">total_commissions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(transactions_.begin(),<sp/>transactions_.end(),<sp/>0.0,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>t)<sp/>{<sp/>return<sp/>sum<sp/>+<sp/>t.commission();<sp/>});</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5f7a2e489f84ec338f391ebed7267335" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5f7a2e489f84ec338f391ebed7267335" kindref="member">total_slippage</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions_.begin(),<sp/>transactions_.end(),<sp/>0.0,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>t)<sp/>{<sp/>return<sp/>sum<sp/>+<sp/>std::abs(t.shares()<sp/>*<sp/>t.slippage());<sp/>});</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1ae1b4389f0d1a53d3ebd7d2aec59e0360" kindref="member">Shares</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" kindref="member">net_shares</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/>symbol)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(transactions_.begin(),<sp/>transactions_.end(),<sp/>0.0,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;symbol](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">TransactionRecord</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>sum<sp/>+<sp/>(t.symbol()<sp/>==<sp/>symbol<sp/>?<sp/>t.shares()<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Symbol,<sp/>TransactionSeries&gt;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a5175f3775528aa30c751c91ca0120c88" kindref="member">group_by_symbol</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Symbol,<sp/>TransactionSeries&gt;<sp/>grouped;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>symbol<sp/>:<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" kindref="member">get_symbols</ref>())<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>filtered<sp/>=<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1af645536e43e4d600078407402d2b2b42" kindref="member">filter_by_symbol</ref>(symbol);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(filtered.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grouped[symbol]<sp/>=<sp/>filtered.value();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grouped;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;DataFrame&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" kindref="member">daily_summary</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;DataFrame&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>to<sp/>summarize&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;DateTime,<sp/>std::map&lt;Symbol,<sp/>double&gt;&gt;<sp/>daily_volumes;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;DateTime,<sp/>double&gt;<sp/>daily_totals;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;DateTime,<sp/>double&gt;<sp/>daily_costs;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>date<sp/>=<sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>{txn.timestamp().to_date()};</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daily_volumes[date][txn.symbol()]<sp/>+=<sp/>std::abs(txn.value());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daily_totals[date]<sp/>+=<sp/>std::abs(txn.value());</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daily_costs[date]<sp/>+=<sp/>txn.total_cost();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>DataFrame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DateTime&gt;<sp/>dates;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>totals;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>costs;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[date,<sp/>total]<sp/>:<sp/>daily_totals)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dates.push_back(date);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>totals.push_back(total);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>costs.push_back(daily_costs[date]);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref><sp/>df{dates};</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.<ref refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" kindref="member">add_column</ref>(</highlight><highlight class="stringliteral">&quot;total_value&quot;</highlight><highlight class="normal">,<sp/>totals);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.add_column(</highlight><highlight class="stringliteral">&quot;total_costs&quot;</highlight><highlight class="normal">,<sp/>costs);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>per-symbol<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>symbol<sp/>:<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" kindref="member">get_symbols</ref>())<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>symbol_volumes;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>date<sp/>:<sp/>dates)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>daily_volumes.find(date);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>daily_volumes.end())<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sym_it<sp/>=<sp/>it-&gt;second.find(symbol);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_volumes.push_back(sym_it<sp/>!=<sp/>it-&gt;second.end()<sp/>?<sp/>sym_it-&gt;second<sp/>:<sp/>0.0);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_volumes.push_back(0.0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.add_column(symbol<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_volume&quot;</highlight><highlight class="normal">,<sp/>symbol_volumes);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;DataFrame&gt;::success</ref>(std::move(df));</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae01ac1b99dd7d89c0eaefbe22f04b1f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;DateTime, std::vector&lt;TransactionRecord&gt;</ref>&gt;&gt;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae01ac1b99dd7d89c0eaefbe22f04b1f2" kindref="member">aggregate_daily</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;DateTime, std::vector&lt;TransactionRecord&gt;</ref>&gt;&gt;::error(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>to<sp/>aggregate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;DateTime,<sp/>std::vector&lt;TransactionRecord&gt;&gt;<sp/>daily_agg;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>date<sp/>=<sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>{txn.timestamp().to_date()};</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>daily_agg[date].push_back(txn);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;DateTime, std::vector&lt;TransactionRecord&gt;</ref>&gt;&gt;::success(daily_agg);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a51f62a2444cfc74dbe0a9828c1ca84da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;Symbol, std::vector&lt;TransactionRecord&gt;</ref>&gt;&gt;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a51f62a2444cfc74dbe0a9828c1ca84da" kindref="member">aggregate_by_symbol</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;Symbol, std::vector&lt;TransactionRecord&gt;</ref>&gt;&gt;::error(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>to<sp/>aggregate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Symbol,<sp/>std::vector&lt;TransactionRecord&gt;&gt;<sp/>symbol_agg;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_agg[txn.symbol()].push_back(txn);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;Symbol, std::vector&lt;TransactionRecord&gt;</ref>&gt;&gt;::success(symbol_agg);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;double&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" kindref="member">total_notional_value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>to<sp/>calculate<sp/>total&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>std::abs(txn.notional_value());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;double&gt;::success</ref>(total);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;Symbol, double&gt;</ref>&gt;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a7f135190761a25a2887a4803bdbcb199" kindref="member">net_shares_by_symbol</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;Symbol, double&gt;</ref>&gt;::error(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>to<sp/>calculate<sp/>net<sp/>shares&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;Symbol,<sp/>double&gt;<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" kindref="member">net_shares</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" kindref="member">net_shares</ref>[txn.symbol()]<sp/>+=<sp/>txn.shares();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::map&lt;Symbol, double&gt;</ref>&gt;::success(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a94c9b53a7a667ac635c714f1b37a45d2" kindref="member">net_shares</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;double&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" kindref="member">average_transaction_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>for<sp/>average&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>total_result<sp/>=<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" kindref="member">total_notional_value</ref>();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_result.is_error())<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_result;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;double&gt;::success</ref>(total_result.value()<sp/>/<sp/>transactions_.size());</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" kindref="compound">TransactionStatistics</ref><sp/>{</highlight></codeline>
<codeline lineno="425" refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1aee7ec900b42f7fc5381717b00b4fcc78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1aee7ec900b42f7fc5381717b00b4fcc78" kindref="member">total_transactions</ref>;</highlight></codeline>
<codeline lineno="426" refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1aab840b564d021caf63455ce21e9428af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1aab840b564d021caf63455ce21e9428af" kindref="member">total_notional_value</ref>;</highlight></codeline>
<codeline lineno="427" refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1a786ceec96f2e3c3fe51d9fe99d240c08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1a786ceec96f2e3c3fe51d9fe99d240c08" kindref="member">average_transaction_size</ref>;</highlight></codeline>
<codeline lineno="428" refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1adb0d232c977d2983a1536b21f220084b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1adb0d232c977d2983a1536b21f220084b" kindref="member">unique_symbols</ref>;</highlight></codeline>
<codeline lineno="429" refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1a94944979995966fa4d9287c4c92b933e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics_1a94944979995966fa4d9287c4c92b933e" kindref="member">trading_days</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TransactionStatistics&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a460b9b22d249cb9b7c844ee642c5c105" kindref="member">calculate_statistics</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TransactionStatistics&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>for<sp/>statistics&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/da5/structpyfolio_1_1transactions_1_1TransactionSeries_1_1TransactionStatistics" kindref="compound">TransactionStatistics</ref><sp/><ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>.total_transactions<sp/>=<sp/>transactions_.size();</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>total_result<sp/>=<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a24d217ff344c82f29c65c636adbe2415" kindref="member">total_notional_value</ref>();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_result.is_error())<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TransactionStatistics&gt;::error</ref>(total_result.error().code,<sp/>total_result.error().message);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>.total_notional_value<sp/>=<sp/>total_result.value();</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>avg_result<sp/>=<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aeb25129166b3ce19a96c29be7dad4187" kindref="member">average_transaction_size</ref>();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avg_result.is_error())<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TransactionStatistics&gt;::error</ref>(avg_result.error().code,<sp/>avg_result.error().message);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>.average_transaction_size<sp/>=<sp/>avg_result.value();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symbols<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8b46e9e5f73d0c798cf6c0699290c039" kindref="member">get_symbols</ref>();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>.unique_symbols<sp/>=<sp/>symbols.size();</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>unique<sp/>trading<sp/>days</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::set&lt;DateTime&gt;<sp/>unique_days;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unique_days.insert(<ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>{txn.timestamp().to_date()});</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>.trading_days<sp/>=<sp/>unique_days.size();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TransactionStatistics&gt;::success</ref>(<ref refid="d6/ddc/namespacepyfolio_1_1stats" kindref="compound">stats</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;double&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a8e8d6483b2ff1223db1ef8fbff2835ee" kindref="member">calculate_transaction_costs</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>commission_per_trade)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>for<sp/>cost<sp/>calculation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_costs<sp/>=<sp/>transactions_.size()<sp/>*<sp/>commission_per_trade;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;double&gt;::success</ref>(total_costs);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;DataFrame&gt;</ref><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" kindref="member">to_dataframe</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a37643bd16370f0331cc092cfcb15fcb4" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;DataFrame&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" kindref="member">ErrorCode::InsufficientData</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>to<sp/>convert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DateTime&gt;<sp/>timestamps;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>symbols;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>shares;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>prices;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>values;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>commissions;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>transactions_)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamps.push_back(txn.timestamp());</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbols.push_back(txn.symbol());</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shares.push_back(txn.shares());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prices.push_back(txn.price());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values.push_back(txn.value());</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commissions.push_back(txn.commission());</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref><sp/>df{timestamps};</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.<ref refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" kindref="member">add_column</ref>(</highlight><highlight class="stringliteral">&quot;symbol&quot;</highlight><highlight class="normal">,<sp/>symbols);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.add_column(</highlight><highlight class="stringliteral">&quot;shares&quot;</highlight><highlight class="normal">,<sp/>shares);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.add_column(</highlight><highlight class="stringliteral">&quot;price&quot;</highlight><highlight class="normal">,<sp/>prices);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.add_column(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>values);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>df.add_column(</highlight><highlight class="stringliteral">&quot;commission&quot;</highlight><highlight class="normal">,<sp/>commissions);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;DataFrame&gt;::success</ref>(std::move(df));</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal">};</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="518" refid="dc/d4e/namespacepyfolio_1_1transactions_1acc94860d07c43fb8cfdbac14aeca5da6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;double&gt;</ref><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1acc94860d07c43fb8cfdbac14aeca5da6" kindref="member">calculate_average_price</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kindref="compound">TransactionSeries</ref>&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>&amp;<sp/>symbol)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symbol_txns_result<sp/>=<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>.filter_by_symbol(symbol);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol_txns_result.is_error())<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(symbol_txns_result.error().code,<sp/>symbol_txns_result.error().message);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>symbol_txns<sp/>=<sp/>symbol_txns_result.value();</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol_txns.empty())<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad492e2c2490fcbf8a16aba55f377dc76" kindref="member">ErrorCode::InvalidSymbol</ref>,<sp/></highlight><highlight class="stringliteral">&quot;No<sp/>transactions<sp/>found<sp/>for<sp/>symbol:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>symbol);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_value<sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_shares<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>txn<sp/>:<sp/>symbol_txns)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_value<sp/>+=<sp/>std::abs(txn.value());</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_shares<sp/>+=<sp/>std::abs(txn.shares());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_shares<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a34e540e6594987eef203290f0a593bd2" kindref="member">ErrorCode::DivisionByZero</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>shares<sp/>is<sp/>zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;double&gt;::success</ref>(total_value<sp/>/<sp/>total_shares);</highlight></codeline>
<codeline lineno="543"><highlight class="normal">}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="dc/d4e/namespacepyfolio_1_1transactions_1a735b0817892b8545a3e238c24561a185" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;double&gt;</ref><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a735b0817892b8545a3e238c24561a185" kindref="member">calculate_turnover</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kindref="compound">TransactionSeries</ref>&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>portfolio_value,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>&amp;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(portfolio_value<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Portfolio<sp/>value<sp/>must<sp/>be<sp/>positive&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period_txns_result<sp/>=<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>.filter_by_date_range(start,<sp/>end);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(period_txns_result.is_error())<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(period_txns_result.error().code,<sp/>period_txns_result.error().message);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>period_txns<sp/>=<sp/>period_txns_result.value();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(period_txns.empty())<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;double&gt;::success</ref>(0.0);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>half<sp/>of<sp/>total<sp/>traded<sp/>value<sp/>(to<sp/>avoid<sp/>double<sp/>counting)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>traded_value<sp/>=<sp/>period_txns.total_value()<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Annualize<sp/>based<sp/>on<sp/>period<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>days<sp/>=<sp/>start.<ref refid="d6/d4f/classpyfolio_1_1DateTime_1aae730fe2db12407f5eb2af3c11e229e9" kindref="member">business_days_until</ref>(end);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(days<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;double&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ae9b7a7be8e0c7fdda56e3b3eea2c55b8" kindref="member">ErrorCode::InvalidDateRange</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>date<sp/>range<sp/>for<sp/>turnover<sp/>calculation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>annualization_factor<sp/>=<sp/><ref refid="db/d9c/namespacepyfolio_1_1constants_1accf4b9e8a1c9179437b61a3f9a0e2e53" kindref="member">constants::TRADING_DAYS_PER_YEAR</ref><sp/>/<sp/>days;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>annualized_turnover<sp/><sp/>=<sp/>(traded_value<sp/>/<sp/>portfolio_value)<sp/>*<sp/>annualization_factor;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;double&gt;::success</ref>(annualized_turnover);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pyfolio::transactions</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h"/>
  </compounddef>
</doxygen>
