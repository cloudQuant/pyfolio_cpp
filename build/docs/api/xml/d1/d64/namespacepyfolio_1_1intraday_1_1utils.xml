<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d1/d64/namespacepyfolio_1_1intraday_1_1utils" kind="namespace" language="C++">
    <compoundname>pyfolio::intraday::utils</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1afff498b520c4dce74192e2d54353c61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::intraday::utils::is_trading_hours</definition>
        <argsstring>(const DateTime &amp;dt, int start_hour=9, int end_hour=16)</argsstring>
        <name>is_trading_hours</name>
        <qualifiedname>pyfolio::intraday::utils::is_trading_hours</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start_hour</declname>
          <defval>9</defval>
        </param>
        <param>
          <type>int</type>
          <declname>end_hour</declname>
          <defval>16</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks if a given time is within trading hours </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" line="323" column="6" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" bodystart="323" bodyend="330" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h" declline="142" declcolumn="6"/>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1a60af93f70c88c8166eb73a6d9be807f0" compoundref="de/d1b/datetime_8h" startline="294" endline="299">pyfolio::DateTime::is_weekday</references>
      </memberdef>
      <memberdef kind="function" id="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a2be668e9177711820f75619a91c725f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; pyfolio::intraday::utils::normalize_positions</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;positions)</argsstring>
        <name>normalize_positions</name>
        <qualifiedname>pyfolio::intraday::utils::normalize_positions</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>positions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Normalizes position values for comparison across different scales </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" line="332" column="13" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" bodystart="332" bodyend="360" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h" declline="147" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a6b05af9b96a8f75ab4c3a5e620fc08eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double pyfolio::intraday::utils::calculate_average_absolute_deviation</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;values)</argsstring>
        <name>calculate_average_absolute_deviation</name>
        <qualifiedname>pyfolio::intraday::utils::calculate_average_absolute_deviation</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the average absolute deviation for variability measurement </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" line="362" column="8" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" bodystart="362" bodyend="378" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h" declline="152" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a25ea59a44c499d9dcc313645d1f47943" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>Result&lt; std::vector&lt; double &gt; &gt; pyfolio::intraday::utils::interpolate_missing_positions</definition>
        <argsstring>(const std::vector&lt; DateTime &gt; &amp;dates, const std::vector&lt; double &gt; &amp;known_positions, const std::vector&lt; transactions::TransactionRecord &gt; &amp;transactions)</argsstring>
        <name>interpolate_missing_positions</name>
        <qualifiedname>pyfolio::intraday::utils::interpolate_missing_positions</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt; &amp;</type>
          <declname>dates</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>known_positions</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="de/d25/classpyfolio_1_1transactions_1_1TransactionRecord" kindref="compound">transactions::TransactionRecord</ref> &gt; &amp;</type>
          <declname>transactions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interpolates missing positions based on transaction flow </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h" line="157" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h" declline="157" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d1/d64/namespacepyfolio_1_1intraday_1_1utils_1a8494a80bcf3a28a48f3f278f5d2bf559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>Result&lt; std::vector&lt; double &gt; &gt; pyfolio::intraday::utils::interpolate_missing_positions</definition>
        <argsstring>(const std::vector&lt; DateTime &gt; &amp;dates, const std::vector&lt; double &gt; &amp;known_positions, const std::vector&lt; TransactionRecord &gt; &amp;transactions)</argsstring>
        <name>interpolate_missing_positions</name>
        <qualifiedname>pyfolio::intraday::utils::interpolate_missing_positions</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt; &amp;</type>
          <declname>dates</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>known_positions</declname>
        </param>
        <param>
          <type>const std::vector&lt; TransactionRecord &gt; &amp;</type>
          <declname>transactions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" line="380" column="8" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp" bodystart="380" bodyend="397"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Utility functions for intraday analysis </para>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/utils/intraday.h" line="137" column="1"/>
  </compounddef>
</doxygen>
