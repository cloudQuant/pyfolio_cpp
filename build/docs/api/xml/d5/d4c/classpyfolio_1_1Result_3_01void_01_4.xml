<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::Result&lt; void &gt;</compoundname>
    <includes refid="d3/d11/error__handling_8h" local="no">error_handling.h</includes>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a7a4a794093f41dda1ecf109460f9146d" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &gt;</type>
        <definition>std::optional&lt;Error&gt; pyfolio::Result&lt; void &gt;::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="168" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/dfa/classpyfolio_1_1Result_1a756495b89dd42029dfa66d87c9a6d614" prot="private" static="no" mutable="no">
        <type>std::variant&lt; void, <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &gt;</type>
        <definition>std::variant&lt;void, Error&gt; pyfolio::Result&lt; void &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="64" column="18" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2b7ad7fd573e128e6c798731bf017c95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>()</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="172" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="172" bodyend="172"/>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a33accfb8898874894de20f905dcd7e76" compoundref="d3/d11/error__handling_8h" startline="180" endline="185">error</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2e98a8000a9f729b12d8e89507ee82b5" compoundref="d3/d11/error__handling_8h" startline="220" endline="226">or_else</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad0b16b02baf07c97bf78c8a58d7d0516" compoundref="d3/d11/error__handling_8h" startline="177" endline="177">success</referencedby>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a4a3f8274da2ee5cb4743a00b1e825eb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>(const Error &amp;error)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <param>
          <type>const <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="173" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="173" bodyend="173"/>
        <references refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a33accfb8898874894de20f905dcd7e76" compoundref="d3/d11/error__handling_8h" startline="180" endline="185">error</references>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad69387bf77776f058426bf79d550da37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>(Error &amp;&amp;error)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <param>
          <type><ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="174" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="174" bodyend="174"/>
        <references refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a33accfb8898874894de20f905dcd7e76" compoundref="d3/d11/error__handling_8h" startline="180" endline="185">error</references>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1aa994010130dc48b53767c6544132d696" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; void &gt;::is_ok</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_ok</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::is_ok</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="188" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1a63f47b2146287fb0d8df5edafe2694" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; void &gt;::is_error</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_error</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::is_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="190" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1262dae69a37b0905455ed82b34074e4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; void &gt;::has_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_value</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::has_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="193" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="193" bodyend="193"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ae94364189cc4ca07a0a96991f330c7ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;</type>
        <definition>const Error &amp; pyfolio::Result&lt; void &gt;::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="196" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="196" bodyend="201"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ac5d7fd944bd9edf7585f9d232a49a9a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type>decltype(func())</type>
        <definition>decltype(func()) pyfolio::Result&lt; void &gt;::and_then</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>and_then</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::and_then</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="205" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="205" bodyend="217"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" compoundref="d3/d11/error__handling_8h" startline="89" endline="89">pyfolio::Result&lt; T &gt;::is_error</references>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2e98a8000a9f729b12d8e89507ee82b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result pyfolio::Result&lt; void &gt;::or_else</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>or_else</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::or_else</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="220" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="220" bodyend="226"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" compoundref="d3/d11/error__handling_8h" startline="87" endline="87">pyfolio::Result&lt; T &gt;::is_ok</references>
        <references refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2b7ad7fd573e128e6c798731bf017c95" compoundref="d3/d11/error__handling_8h" startline="172" endline="172">Result</references>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>(const void &amp;value)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <param>
          <type>const void &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="68" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>(void &amp;&amp;value)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <param>
          <type>void &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="69" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>(const Error &amp;error)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <param>
          <type>const <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="70" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::Result&lt; void &gt;::Result</definition>
        <argsstring>(Error &amp;&amp;error)</argsstring>
        <name>Result</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::Result</qualifiedname>
        <param>
          <type><ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;&amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="71" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d0/da5/structpyfolio_1_1Error" kindref="compound">Error</ref> &amp;</type>
        <definition>const Error &amp; pyfolio::Result&lt; void &gt;::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="111" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; void &gt;::is_ok</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_ok</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::is_ok</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="87" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; void &gt;::is_error</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_error</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::is_error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="89" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::Result&lt; void &gt;::has_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_value</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::has_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="92" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const void &amp;</type>
        <definition>const void &amp; pyfolio::Result&lt; void &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="95" column="13" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void &amp;</type>
        <definition>void &amp; pyfolio::Result&lt; void &gt;::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="103" column="7" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="103" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::Result&lt; void &gt;::value_or</definition>
        <argsstring>(const void &amp;default_value) const</argsstring>
        <name>value_or</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::value_or</qualifiedname>
        <param>
          <type>const void &amp;</type>
          <declname>default_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="119" column="7" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; decltype(func(std::declval&lt; void &gt;()))&gt;</type>
        <definition>Result&lt; decltype(func(std::declval&lt; void &gt;()))&gt; pyfolio::Result&lt; void &gt;::map</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>map</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::map</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="123" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="123" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>decltype(func(std::declval&lt; void &gt;()))</type>
        <definition>decltype(func(std::declval&lt; void &gt;())) pyfolio::Result&lt; void &gt;::and_then</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>and_then</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::and_then</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="138" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="138" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>Result pyfolio::Result&lt; void &gt;::or_else</definition>
        <argsstring>(F &amp;&amp;func) const</argsstring>
        <name>or_else</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::or_else</qualifiedname>
        <param>
          <type>F &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="153" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="153" bodyend="159"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad0b16b02baf07c97bf78c8a58d7d0516" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; void &gt;::success</definition>
        <argsstring>()</argsstring>
        <name>success</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::success</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="177" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="177" bodyend="177"/>
        <references refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2b7ad7fd573e128e6c798731bf017c95" compoundref="d3/d11/error__handling_8h" startline="172" endline="172">Result</references>
      </memberdef>
      <memberdef kind="function" id="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a33accfb8898874894de20f905dcd7e76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; void &gt;::error</definition>
        <argsstring>(ErrorCode code, const std::string &amp;message, const std::string &amp;context=&quot;&quot;, std::source_location loc=std::source_location::current())</argsstring>
        <name>error</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::error</qualifiedname>
        <param>
          <type><ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9" kindref="member">ErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>context</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::source_location</type>
          <declname>loc</declname>
          <defval>std::source_location::current()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="180" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="180" bodyend="185"/>
        <references refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2b7ad7fd573e128e6c798731bf017c95" compoundref="d3/d11/error__handling_8h" startline="172" endline="172">Result</references>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a4a3f8274da2ee5cb4743a00b1e825eb8" compoundref="d3/d11/error__handling_8h" startline="173" endline="173">Result</referencedby>
        <referencedby refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad69387bf77776f058426bf79d550da37" compoundref="d3/d11/error__handling_8h" startline="174" endline="174">Result</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; void &gt;::success</definition>
        <argsstring>(const void &amp;value)</argsstring>
        <name>success</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::success</qualifiedname>
        <param>
          <type>const void &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="74" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; void &gt;::success</definition>
        <argsstring>(void &amp;&amp;value)</argsstring>
        <name>success</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::success</qualifiedname>
        <param>
          <type>void &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="76" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref></type>
        <definition>static Result pyfolio::Result&lt; void &gt;::error</definition>
        <argsstring>(ErrorCode code, const std::string &amp;message, const std::string &amp;context=&quot;&quot;, std::source_location loc=std::source_location::current())</argsstring>
        <name>error</name>
        <qualifiedname>pyfolio::Result&lt; void &gt;::error</qualifiedname>
        <param>
          <type><ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9" kindref="member">ErrorCode</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>context</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>std::source_location</type>
          <declname>loc</declname>
          <defval>std::source_location::current()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="79" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="79" bodyend="84"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Specialization for <ref refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4" kindref="compound">Result&lt;void&gt;</ref> </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" line="166" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h" bodystart="166" bodyend="227"/>
    <listofallmembers>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ac5d7fd944bd9edf7585f9d232a49a9a4" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>and_then</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1aca4a6f44f1b34df6a52348db60363f00" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>and_then</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a756495b89dd42029dfa66d87c9a6d614" prot="private" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>data_</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a33accfb8898874894de20f905dcd7e76" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>error</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ae94364189cc4ca07a0a96991f330c7ab" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>error</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a283b3c95dbf4bfbe61d4fac4da7073bc" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>error</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>error</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a7a4a794093f41dda1ecf109460f9146d" prot="private" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>error_</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1262dae69a37b0905455ed82b34074e4" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>has_value</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1aff4544ce8aa6d0fdd43a36c3438413a6" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>has_value</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a1a63f47b2146287fb0d8df5edafe2694" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>is_error</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a92a57a301998e4a29618a03f53dfbed0" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>is_error</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1aa994010130dc48b53767c6544132d696" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>is_ok</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a09c05ae8d4f48da687ab95eeb91a1440" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>is_ok</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a2566afd7adce4134206881d5777435a6" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>map</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2e98a8000a9f729b12d8e89507ee82b5" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>or_else</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a3e48fb51d0f66247ce78c32ec1432df8" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>or_else</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a2b7ad7fd573e128e6c798731bf017c95" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1a4a3f8274da2ee5cb4743a00b1e825eb8" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad69387bf77776f058426bf79d550da37" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a863809a5460427bc2853c327eb794e42" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a1e86c2d4a75af491011fa98f2b4bc72f" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1ac8ab622197e02c3cff4ccb81caeabe58" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a04612ba9c8bda9458b58789d4f1afa11" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>Result</name></member>
      <member refid="d5/d4c/classpyfolio_1_1Result_3_01void_01_4_1ad0b16b02baf07c97bf78c8a58d7d0516" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>success</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>success</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a61f97693bc0f293422465ed9d58739c7" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>success</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a563d8e0024bb6b067dc3ca00ac1b241b" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>value</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a3aed6980259951f067fcbf10c2def08c" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>value</name></member>
      <member refid="de/dfa/classpyfolio_1_1Result_1a6fd5d706afea7e06defa9ae494671c5c" prot="public" virt="non-virtual"><scope>pyfolio::Result&lt; void &gt;</scope><name>value_or</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
