<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils" kind="namespace" language="C++">
    <compoundname>pyfolio::visualization::plot_utils</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a0659042e0ecea832ed6655650793d8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; pyfolio::visualization::plot_utils::returns_to_cumulative</definition>
        <argsstring>(const std::vector&lt; Return &gt; &amp;returns)</argsstring>
        <name>returns_to_cumulative</name>
        <qualifiedname>pyfolio::visualization::plot_utils::returns_to_cumulative</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert returns to cumulative returns for plotting </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="275" column="13" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" declline="275" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a9d706c009e41c75606af690bb8a04402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; pyfolio::visualization::plot_utils::create_color_palette</definition>
        <argsstring>(int n_colors)</argsstring>
        <name>create_color_palette</name>
        <qualifiedname>pyfolio::visualization::plot_utils::create_color_palette</qualifiedname>
        <param>
          <type>int</type>
          <declname>n_colors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create color palette for multiple series </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="280" column="13" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" declline="280" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a3772233bf5a782774218332dfd00c6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string pyfolio::visualization::plot_utils::format_percentage</definition>
        <argsstring>(double value, int decimals=1)</argsstring>
        <name>format_percentage</name>
        <qualifiedname>pyfolio::visualization::plot_utils::format_percentage</qualifiedname>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>decimals</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Format percentage for display </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="285" column="13" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" declline="285" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1ab2e071d40e0bebeed6003745d9e99954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; pyfolio::visualization::plot_utils::create_date_labels</definition>
        <argsstring>(const std::vector&lt; DateTime &gt; &amp;dates, const std::string &amp;format=&quot;%Y-%m&quot;)</argsstring>
        <name>create_date_labels</name>
        <qualifiedname>pyfolio::visualization::plot_utils::create_date_labels</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt; &amp;</type>
          <declname>dates</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>format</declname>
          <defval>&quot;%Y-%m&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create date labels for x-axis </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="290" column="13" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" declline="290" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a334e3db0e1fd407756910cf8ce22f689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pyfolio::visualization::plot_utils::calculate_optimal_bins</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;data)</argsstring>
        <name>calculate_optimal_bins</name>
        <qualifiedname>pyfolio::visualization::plot_utils::calculate_optimal_bins</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate optimal bin count for histograms </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="295" column="5" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" declline="295" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="df/d7c/namespacepyfolio_1_1visualization_1_1plot__utils_1a98854b3ad95aee6522e82ceed15d9d7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; pyfolio::visualization::plot_utils::smooth_data</definition>
        <argsstring>(const std::vector&lt; double &gt; &amp;data, int window=5)</argsstring>
        <name>smooth_data</name>
        <qualifiedname>pyfolio::visualization::plot_utils::smooth_data</qualifiedname>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>window</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Smooth data for better visualization </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="300" column="13" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" declline="300" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Utility functions for visualization </para>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/matplotlib_integration.h" line="270" column="1"/>
  </compounddef>
</doxygen>
