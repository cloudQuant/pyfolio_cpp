<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="df/de7/performance__analysis__suite_8h" kind="file" language="C++">
    <compoundname>performance_analysis_suite.h</compoundname>
    <includes refid="d3/d11/error__handling_8h" local="yes">../core/error_handling.h</includes>
    <includes refid="d8/d51/time__series_8h" local="yes">../core/time_series.h</includes>
    <includes refid="d4/dc1/cached__performance__metrics_8h" local="yes">cached_performance_metrics.h</includes>
    <includes refid="de/d88/performance__metrics_8h" local="yes">performance_metrics.h</includes>
    <includes local="no">chrono</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <includedby refid="dd/d71/parallel__performance__suite_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/parallel_performance_suite.h</includedby>
    <includedby refid="de/de7/rest__api__server_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web/rest_api_server.h</includedby>
    <incdepgraph>
      <node id="26">
        <label>cached_performance_metrics.h</label>
        <link refid="d4/dc1/cached__performance__metrics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_analysis_suite.h</label>
        <link refid="df/de7/performance__analysis__suite_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>performance_metrics.h</label>
        <link refid="de/d88/performance__metrics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>statistics.h</label>
        <link refid="d5/db2/analytics_2statistics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>datetime.h</label>
        <link refid="de/d1b/datetime_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../core/error_handling.h</label>
        <link refid="d3/d11/error__handling_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../core/time_series.h</label>
        <link refid="d8/d51/time__series_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>../core/types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>../math/simd_math.h</label>
        <link refid="d6/d99/simd__math_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>../math/statistics.h</label>
        <link refid="d3/dbe/math_2statistics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>../performance/drawdown.h</label>
        <link refid="d8/de8/drawdown_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>../performance/ratios.h</label>
        <link refid="d7/d06/ratios_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>returns.h</label>
        <link refid="d4/d73/returns_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>chrono</label>
      </node>
      <node id="21">
        <label>cmath</label>
      </node>
      <node id="13">
        <label>concepts</label>
      </node>
      <node id="14">
        <label>cstddef</label>
      </node>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="22">
        <label>deque</label>
      </node>
      <node id="3">
        <label>exception</label>
      </node>
      <node id="4">
        <label>functional</label>
      </node>
      <node id="23">
        <label>limits</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="35">
        <label>memory</label>
      </node>
      <node id="25">
        <label>numeric</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="33">
        <label>shared_mutex</label>
      </node>
      <node id="6">
        <label>source_location</label>
      </node>
      <node id="18">
        <label>span</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="34">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>variant</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/rest_api_example.cpp</label>
        <link refid="d1/d43/rest__api__example_8cpp"/>
      </node>
      <node id="2">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/parallel_performance_suite.h</label>
        <link refid="dd/d71/parallel__performance__suite_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_analysis_suite.h</label>
        <link refid="df/de7/performance__analysis__suite_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/web/rest_api_server.h</label>
        <link refid="de/de7/rest__api__server_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" prot="public">pyfolio::analytics::AnalysisConfig</innerclass>
    <innerclass refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" prot="public">pyfolio::analytics::AnalysisReport</innerclass>
    <innerclass refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite" prot="public">pyfolio::analytics::PerformanceAnalysisSuite</innerclass>
    <innerclass refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats" prot="public">pyfolio::analytics::PerformanceAnalysisSuite::SuitePerformanceStats</innerclass>
    <innernamespace refid="d7/df8/namespacepyfolio">pyfolio</innernamespace>
    <innernamespace refid="d2/d10/namespacepyfolio_1_1analytics">pyfolio::analytics</innernamespace>
    <briefdescription>
<para>Advanced performance analysis suite with intelligent caching. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="version"><para>1.0.0 </para>
</simplesect>
<simplesect kind="date"><para>2024</para>
</simplesect>
This file provides a comprehensive performance analysis framework that combines cached calculations with portfolio analytics for real-time high-frequency trading applications. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d11/error__handling_8h" kindref="compound">../core/error_handling.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d51/time__series_8h" kindref="compound">../core/time_series.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/dc1/cached__performance__metrics_8h" kindref="compound">cached_performance_metrics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="de/d88/performance__metrics_8h" kindref="compound">performance_metrics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/d10/namespacepyfolio_1_1analytics" kindref="compound">pyfolio::analytics</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" kindref="compound">AnalysisConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a3f41c3fd36eaed927e6182e041d658a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/d48/structpyfolio_1_1analytics_1_1CacheConfig" kindref="compound">CacheConfig</ref><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a3f41c3fd36eaed927e6182e041d658a5" kindref="member">cache_config</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Analysis<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1ac0ad7d8dbdc4d399145de3c57a44f7ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1ac0ad7d8dbdc4d399145de3c57a44f7ee" kindref="member">risk_free_rate</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.02;</highlight></codeline>
<codeline lineno="35" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a75cbc2db9abac72761a7ae676afe855e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a75cbc2db9abac72761a7ae676afe855e" kindref="member">periods_per_year</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>252;</highlight></codeline>
<codeline lineno="36" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a57c7dda70e3e7dd8ca95f3dc1ec4a0c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;size_t&gt;<sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a57c7dda70e3e7dd8ca95f3dc1ec4a0c3" kindref="member">rolling_windows</ref><sp/>=<sp/>{30,<sp/>60,<sp/>90,<sp/>252};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a30ee301978adde5efb8fdde91fbe5b2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a30ee301978adde5efb8fdde91fbe5b2f" kindref="member">min_sharpe_threshold</ref><sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="40" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a88d82ed9de1ee41e1a1f0af877ae818b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a88d82ed9de1ee41e1a1f0af877ae818b" kindref="member">max_drawdown_threshold</ref><sp/>=<sp/>0.10;<sp/><sp/></highlight><highlight class="comment">//<sp/>10%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a7cb46d7a29ec27a173bb609514623c62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a7cb46d7a29ec27a173bb609514623c62" kindref="member">min_return_threshold</ref><sp/><sp/><sp/>=<sp/>0.08;<sp/><sp/></highlight><highlight class="comment">//<sp/>8%<sp/>annual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reporting<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a237eaa0d58b07efb1b729c28c7b0566d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a237eaa0d58b07efb1b729c28c7b0566d" kindref="member">enable_detailed_reports</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a8d02c3f064f27a0b4f3f72908f45f3ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a8d02c3f064f27a0b4f3f72908f45f3ba" kindref="member">enable_benchmarking</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46" refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a5f4763ef349077b7ff3536ec8a51abf4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::milliseconds<sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a5f4763ef349077b7ff3536ec8a51abf4" kindref="member">report_interval</ref>{1000};</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" kindref="compound">AnalysisReport</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a015c2dffe6e3ed1db704f3115ca1fcd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a015c2dffe6e3ed1db704f3115ca1fcd3" kindref="member">total_return</ref>;</highlight></codeline>
<codeline lineno="55" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref>;</highlight></codeline>
<codeline lineno="56" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ace446e8c5677012b2678dca187af9063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ace446e8c5677012b2678dca187af9063" kindref="member">annual_volatility</ref>;</highlight></codeline>
<codeline lineno="57" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2a5d413c1c804eb72b4be7d22c520cbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2a5d413c1c804eb72b4be7d22c520cbd" kindref="member">sharpe_ratio</ref>;</highlight></codeline>
<codeline lineno="58" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4a5a77ef63033f3419685398489e8b5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4a5a77ef63033f3419685398489e8b5a" kindref="member">sortino_ratio</ref>;</highlight></codeline>
<codeline lineno="59" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kindref="member">max_drawdown</ref>;</highlight></codeline>
<codeline lineno="60" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1793e83fd50dd8746042ea5ba00d5080" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1793e83fd50dd8746042ea5ba00d5080" kindref="member">calmar_ratio</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Risk<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ad81e96558450ef6a4f533552adda9481" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ad81e96558450ef6a4f533552adda9481" kindref="member">var_95</ref>;</highlight></codeline>
<codeline lineno="64" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a8e67852f42560dd08bca84fb6dbf5c64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a8e67852f42560dd08bca84fb6dbf5c64" kindref="member">cvar_95</ref>;</highlight></codeline>
<codeline lineno="65" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a60b8f792068fea150e521f59ae5c2ef4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a60b8f792068fea150e521f59ae5c2ef4" kindref="member">downside_deviation</ref>;</highlight></codeline>
<codeline lineno="66" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1b30866872455b4c679ec6a363766a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1b30866872455b4c679ec6a363766a60" kindref="member">skewness</ref>;</highlight></codeline>
<codeline lineno="67" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af034819dd16f0dfa7f6f893a489ae4b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af034819dd16f0dfa7f6f893a489ae4b6" kindref="member">kurtosis</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rolling<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1acc280d04bb38e569904ef187d96e0012" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;size_t,<sp/>TimeSeries&lt;double&gt;&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1acc280d04bb38e569904ef187d96e0012" kindref="member">rolling_returns</ref>;</highlight></codeline>
<codeline lineno="71" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af76c3eff77cf268a4eb5ff59a37fdf2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;size_t,<sp/>TimeSeries&lt;double&gt;&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af76c3eff77cf268a4eb5ff59a37fdf2b" kindref="member">rolling_volatility</ref>;</highlight></codeline>
<codeline lineno="72" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7936990f2fd386f8eb250954b41728fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unordered_map&lt;size_t,<sp/>TimeSeries&lt;double&gt;&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7936990f2fd386f8eb250954b41728fb" kindref="member">rolling_sharpe</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>vs<sp/>benchmark<sp/>(if<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a589288c7e12f07f9f3867fa281cd9c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a589288c7e12f07f9f3867fa281cd9c20" kindref="member">alpha</ref>;</highlight></codeline>
<codeline lineno="76" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2fa5e7ed544be1661d558ad1edcd4da5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2fa5e7ed544be1661d558ad1edcd4da5" kindref="member">beta</ref>;</highlight></codeline>
<codeline lineno="77" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a51e8da4f046598e3a1782461458592fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a51e8da4f046598e3a1782461458592fb" kindref="member">information_ratio</ref>;</highlight></codeline>
<codeline lineno="78" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac408b3c65b0e589794b742200d5532cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;double&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac408b3c65b0e589794b742200d5532cb" kindref="member">tracking_error</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>performance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2048a961d567d59bb0bb091f88036aa1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats" kindref="compound">CachedPerformanceCalculator::CacheStats</ref><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2048a961d567d59bb0bb091f88036aa1" kindref="member">cache_stats</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timing<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1aea6e909bb3b3a4eec443c64b9df0efe3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::milliseconds<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1aea6e909bb3b3a4eec443c64b9df0efe3" kindref="member">computation_time</ref>;</highlight></codeline>
<codeline lineno="85" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a38e681a3c837376a89f3a7ffa37760f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::steady_clock::time_point<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a38e681a3c837376a89f3a7ffa37760f6" kindref="member">analysis_timestamp</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Quality<sp/>indicators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7c0bb233dc9c257f716d991895fe8b1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7c0bb233dc9c257f716d991895fe8b1c" kindref="member">passed_risk_checks</ref>;</highlight></codeline>
<codeline lineno="89" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>;</highlight></codeline>
<codeline lineno="90" refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ac5e98814fe2f4a8f987a8c300f09e495" kindref="member">PerformanceAnalysisSuite</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;CachedPerformanceCalculator&gt;<sp/>cache_calculator_;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" kindref="compound">AnalysisConfig</ref><sp/>config_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::chrono::steady_clock::time_point<sp/>last_analysis_time_;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_analyses_performed_{0};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::chrono::nanoseconds<sp/>total_computation_time_{0};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;void&gt;</ref><sp/>calculate_risk_metrics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;T&gt;</ref>&amp;<sp/>returns,<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" kindref="compound">AnalysisReport</ref>&amp;<sp/>report)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>VaR<sp/>and<sp/>CVaR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sorted_returns<sp/>=<sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" kindref="member">values</ref>();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(sorted_returns.begin(),<sp/>sorted_returns.end());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sorted_returns.empty())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>var_index<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(sorted_returns.size()<sp/>*<sp/>0.05);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ad81e96558450ef6a4f533552adda9481" kindref="member">var_95</ref><sp/><sp/><sp/><sp/>=<sp/>sorted_returns[var_index];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CVaR<sp/>is<sp/>the<sp/>mean<sp/>of<sp/>returns<sp/>below<sp/>VaR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cvar_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>var_index;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cvar_sum<sp/>+=<sp/>sorted_returns[i];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a8e67852f42560dd08bca84fb6dbf5c64" kindref="member">cvar_95</ref><sp/>=<sp/>cvar_sum<sp/>/<sp/>(var_index<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>downside<sp/>deviation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mean_result<sp/>=<sp/>cache_calculator_-&gt;mean(returns);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mean_result.is_error())</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;void&gt;::error</ref>(mean_result.error().code,<sp/>mean_result.error().message);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_return<sp/><sp/><sp/><sp/>=<sp/>mean_result.value();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>downside_sum<sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>downside_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(returns[i]<sp/>&lt;<sp/>mean_return)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deviation<sp/>=<sp/>returns[i]<sp/>-<sp/>mean_return;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downside_sum<sp/>+=<sp/>deviation<sp/>*<sp/>deviation;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++downside_count;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a60b8f792068fea150e521f59ae5c2ef4" kindref="member">downside_deviation</ref><sp/>=<sp/>downside_count<sp/>&gt;<sp/>0<sp/>?<sp/>std::sqrt(downside_sum<sp/>/<sp/>downside_count)<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;void&gt;::success</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;void&gt;</ref><sp/>calculate_rolling_metrics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;T&gt;</ref>&amp;<sp/>returns,<sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" kindref="compound">AnalysisReport</ref>&amp;<sp/>report)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>window<sp/>:<sp/>config_.rolling_windows)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>&lt;<sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>cached<sp/>rolling<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rolling_mean_result<sp/>=<sp/>cache_calculator_-&gt;rolling_mean(returns,<sp/>window);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rolling_mean_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1acc280d04bb38e569904ef187d96e0012" kindref="member">rolling_returns</ref>[window]<sp/>=<sp/>rolling_mean_result.value();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rolling_std_result<sp/>=<sp/>cache_calculator_-&gt;rolling_std(returns,<sp/>window);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rolling_std_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af76c3eff77cf268a4eb5ff59a37fdf2b" kindref="member">rolling_volatility</ref>[window]<sp/>=<sp/>rolling_std_result.value();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>rolling<sp/>Sharpe<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vol_series<sp/>=<sp/>rolling_std_result.value();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ret_series<sp/>=<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1acc280d04bb38e569904ef187d96e0012" kindref="member">rolling_returns</ref>[window];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol_series.size()<sp/>==<sp/>ret_series.size())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DateTime&gt;<sp/>dates<sp/>=<sp/>vol_series.timestamps();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>sharpe_values;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>daily_rf<sp/>=<sp/>config_.risk_free_rate<sp/>/<sp/>config_.periods_per_year;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vol_series.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vol_series[i]<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>excess_return<sp/>=<sp/>ret_series[i]<sp/>-<sp/>daily_rf;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharpe_values.push_back(excess_return<sp/>/<sp/>vol_series[i]);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sharpe_values.push_back(0.0);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7936990f2fd386f8eb250954b41728fb" kindref="member">rolling_sharpe</ref>[window]<sp/>=</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;double&gt;</ref>(dates,<sp/>sharpe_values,<sp/></highlight><highlight class="stringliteral">&quot;rolling_sharpe_&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(window));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;void&gt;::success</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>perform_risk_analysis(<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" kindref="compound">AnalysisReport</ref>&amp;<sp/>report)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7c0bb233dc9c257f716d991895fe8b1c" kindref="member">passed_risk_checks</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.clear();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.clear();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>Sharpe<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2a5d413c1c804eb72b4be7d22c520cbd" kindref="member">sharpe_ratio</ref><sp/>&lt;<sp/>config_.min_sharpe_threshold)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7c0bb233dc9c257f716d991895fe8b1c" kindref="member">passed_risk_checks</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Low<sp/>Sharpe<sp/>ratio:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2a5d413c1c804eb72b4be7d22c520cbd" kindref="member">sharpe_ratio</ref>));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Consider<sp/>reducing<sp/>volatility<sp/>or<sp/>improving<sp/>return<sp/>generation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>maximum<sp/>drawdown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kindref="member">max_drawdown</ref><sp/>&gt;<sp/>config_.max_drawdown_threshold)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a7c0bb233dc9c257f716d991895fe8b1c" kindref="member">passed_risk_checks</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;High<sp/>maximum<sp/>drawdown:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kindref="member">max_drawdown</ref><sp/>*<sp/>100)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Implement<sp/>stronger<sp/>risk<sp/>controls<sp/>or<sp/>position<sp/>sizing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>annual<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/>&lt;<sp/>config_.min_return_threshold)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Low<sp/>annual<sp/>return:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/>*<sp/>100)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Review<sp/>strategy<sp/>performance<sp/>and<sp/>consider<sp/>optimization&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>volatility<sp/>vs<sp/>return<sp/>relationship</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>risk_adjusted_return<sp/>=<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/>/<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ace446e8c5677012b2678dca187af9063" kindref="member">annual_volatility</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(risk_adjusted_return<sp/>&lt;<sp/>0.5)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Poor<sp/>risk-adjusted<sp/>return<sp/>ratio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Focus<sp/>on<sp/>reducing<sp/>volatility<sp/>while<sp/>maintaining<sp/>returns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>skewness<sp/>and<sp/>kurtosis<sp/>for<sp/>tail<sp/>risks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1b30866872455b4c679ec6a363766a60" kindref="member">skewness</ref><sp/>&lt;<sp/>-1.0)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Negative<sp/>skewness<sp/>indicates<sp/>tail<sp/>risk&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Consider<sp/>tail<sp/>risk<sp/>hedging<sp/>strategies&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af034819dd16f0dfa7f6f893a489ae4b6" kindref="member">kurtosis</ref><sp/>&gt;<sp/>5.0)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4db3e468caa293558e70d3e4cd4e5692" kindref="member">warnings</ref>.push_back(</highlight><highlight class="stringliteral">&quot;High<sp/>kurtosis<sp/>indicates<sp/>fat<sp/>tail<sp/>risk&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a143d3548c2f364c84274371e2e3c59e9" kindref="member">recommendations</ref>.push_back(</highlight><highlight class="stringliteral">&quot;Monitor<sp/>for<sp/>extreme<sp/>events<sp/>and<sp/>adjust<sp/>position<sp/>sizing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="247" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ac5e98814fe2f4a8f987a8c300f09e495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ac5e98814fe2f4a8f987a8c300f09e495" kindref="member">PerformanceAnalysisSuite</ref>(<ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" kindref="compound">AnalysisConfig</ref><sp/>config<sp/>=<sp/>{})</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>cache_calculator_(std::make_unique&lt;<ref refid="de/d09/classpyfolio_1_1analytics_1_1CachedPerformanceCalculator" kindref="compound">CachedPerformanceCalculator</ref>&gt;(config.cache_config)),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_(std::move(config)),<sp/>last_analysis_time_(std::chrono::steady_clock::now())<sp/>{}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="255" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a2a89a113f35927f33af40fa23ed44a70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;AnalysisReport&gt;</ref><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a2a89a113f35927f33af40fa23ed44a70" kindref="member">analyze_performance</ref>(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;T&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;T&gt;</ref>&gt;&amp;<sp/>benchmark<sp/>=<sp/>std::nullopt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start_time<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport" kindref="compound">AnalysisReport</ref><sp/>report{};</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a38e681a3c837376a89f3a7ffa37760f6" kindref="member">analysis_timestamp</ref><sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>performance<sp/>metrics<sp/>using<sp/>cached<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mean_result<sp/>=<sp/>cache_calculator_-&gt;mean(returns);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mean_result.is_error())</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(mean_result.error().code,<sp/>mean_result.error().message);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>std_result<sp/>=<sp/>cache_calculator_-&gt;std_deviation(returns);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std_result.is_error())</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(std_result.error().code,<sp/>std_result.error().message);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sharpe_result<sp/>=<sp/>cache_calculator_-&gt;sharpe_ratio(returns,<sp/>config_.risk_free_rate);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sharpe_result.is_error())</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(sharpe_result.error().code,<sp/>sharpe_result.error().message);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>cumulative<sp/>returns<sp/>for<sp/>total<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cumulative_result<sp/>=<sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1aabcf1a46e463e3a482632eacb0265394" kindref="member">cumsum</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cumulative_result.is_error())</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(cumulative_result.error().code,<sp/>cumulative_result.error().message);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>cum_returns<sp/>=<sp/>cumulative_result.value();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a015c2dffe6e3ed1db704f3115ca1fcd3" kindref="member">total_return</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>cum_returns.empty()<sp/>?<sp/>0.0<sp/>:<sp/>cum_returns[cum_returns.size()<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Annualized<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>mean_result.value()<sp/>*<sp/>config_.periods_per_year;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ace446e8c5677012b2678dca187af9063" kindref="member">annual_volatility</ref><sp/>=<sp/>std_result.value()<sp/>*<sp/>std::sqrt(config_.periods_per_year);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2a5d413c1c804eb72b4be7d22c520cbd" kindref="member">sharpe_ratio</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sharpe_result.value();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>maximum<sp/>drawdown<sp/>using<sp/>cached<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>max_dd_result<sp/>=<sp/>cache_calculator_-&gt;max_drawdown(cum_returns);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_dd_result.is_error())</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(max_dd_result.error().code,<sp/>max_dd_result.error().message);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kindref="member">max_drawdown</ref><sp/>=<sp/>max_dd_result.value();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calmar<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1793e83fd50dd8746042ea5ba00d5080" kindref="member">calmar_ratio</ref><sp/>=<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kindref="member">max_drawdown</ref><sp/>&gt;<sp/>0<sp/>?<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/>/<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac4146ae68810aea2e6cf56ee444065bd" kindref="member">max_drawdown</ref><sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Risk<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>risk_result<sp/>=<sp/>calculate_risk_metrics(returns,<sp/>report);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(risk_result.is_error())</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(risk_result.error().code,<sp/>risk_result.error().message);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Statistical<sp/>moments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>values<sp/>=<sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" kindref="member">values</ref>();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!values.empty())<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_val<sp/>=<sp/>mean_result.value();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/>0.0,<sp/>skew_sum<sp/>=<sp/>0.0,<sp/>kurt_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>:<sp/>values)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff<sp/><sp/>=<sp/>val<sp/>-<sp/>mean_val;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>diff2<sp/>=<sp/>diff<sp/>*<sp/>diff;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance<sp/>+=<sp/>diff2;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skew_sum<sp/>+=<sp/>diff2<sp/>*<sp/>diff;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kurt_sum<sp/>+=<sp/>diff2<sp/>*<sp/>diff2;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance<sp/>/=<sp/>values.size();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>std_dev<sp/>=<sp/>std::sqrt(variance);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std_dev<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a1b30866872455b4c679ec6a363766a60" kindref="member">skewness</ref><sp/>=<sp/>(skew_sum<sp/>/<sp/>values.size())<sp/>/<sp/>(std_dev<sp/>*<sp/>std_dev<sp/>*<sp/>std_dev);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1af034819dd16f0dfa7f6f893a489ae4b6" kindref="member">kurtosis</ref><sp/>=<sp/>(kurt_sum<sp/>/<sp/>values.size())<sp/>/<sp/>(variance<sp/>*<sp/>variance)<sp/>-<sp/>3.0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sortino<sp/>ratio<sp/>(downside<sp/>deviation-adjusted)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a4a5a77ef63033f3419685398489e8b5a" kindref="member">sortino_ratio</ref><sp/>=<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a60b8f792068fea150e521f59ae5c2ef4" kindref="member">downside_deviation</ref><sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/>-<sp/>config_.risk_free_rate)<sp/>/</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a60b8f792068fea150e521f59ae5c2ef4" kindref="member">downside_deviation</ref><sp/>*<sp/>std::sqrt(config_.periods_per_year))</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rolling<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rolling_result<sp/>=<sp/>calculate_rolling_metrics(returns,<sp/>report);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rolling_result.is_error())</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(rolling_result.error().code,<sp/>rolling_result.error().message);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Benchmark<sp/>comparison<sp/>if<sp/>provided</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(benchmark)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>benchmark_corr<sp/>=<sp/>cache_calculator_-&gt;correlation(returns,<sp/>*benchmark);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(benchmark_corr.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>benchmark_mean<sp/>=<sp/>cache_calculator_-&gt;mean(*benchmark);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>benchmark_std<sp/><sp/>=<sp/>cache_calculator_-&gt;std_deviation(*benchmark);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(benchmark_mean.is_ok()<sp/>&amp;&amp;<sp/>benchmark_std.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beta<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covariance<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>benchmark_corr.value()<sp/>*<sp/>std_result.value()<sp/>*<sp/>benchmark_std.value();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>benchmark_variance<sp/>=<sp/>benchmark_std.value()<sp/>*<sp/>benchmark_std.value();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2fa5e7ed544be1661d558ad1edcd4da5" kindref="member">beta</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>benchmark_variance<sp/>&gt;<sp/>0<sp/>?<sp/>covariance<sp/>/<sp/>benchmark_variance<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alpha<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>benchmark_annual_return<sp/>=<sp/>benchmark_mean.value()<sp/>*<sp/>config_.periods_per_year;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a589288c7e12f07f9f3867fa281cd9c20" kindref="member">alpha</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a057108c0f1de79cfc11d1fce00a10bbc" kindref="member">annual_return</ref><sp/>-</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(config_.risk_free_rate<sp/>+</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2fa5e7ed544be1661d558ad1edcd4da5" kindref="member">beta</ref>.value()<sp/>*<sp/>(benchmark_annual_return<sp/>-<sp/>config_.risk_free_rate));</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Information<sp/>ratio<sp/>and<sp/>tracking<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>excess_returns;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>std::min(returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" kindref="member">size</ref>(),<sp/>benchmark-&gt;size());<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>excess_returns.push_back(returns[i]<sp/>-<sp/>(*benchmark)[i]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!excess_returns.empty())<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;double&gt;</ref><sp/>excess_ts(</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DateTime&gt;(returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0374bbc62bd808749ac476b3af4b0ead" kindref="member">timestamps</ref>().begin(),</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0374bbc62bd808749ac476b3af4b0ead" kindref="member">timestamps</ref>().begin()<sp/>+<sp/>excess_returns.size()),</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>excess_returns,<sp/></highlight><highlight class="stringliteral">&quot;excess_returns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>excess_std<sp/><sp/>=<sp/>cache_calculator_-&gt;std_deviation(excess_ts);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>excess_mean<sp/>=<sp/>cache_calculator_-&gt;mean(excess_ts);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(excess_std.is_ok()<sp/>&amp;&amp;<sp/>excess_mean.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac408b3c65b0e589794b742200d5532cb" kindref="member">tracking_error</ref><sp/><sp/><sp/><sp/>=<sp/>excess_std.value()<sp/>*<sp/>std::sqrt(config_.periods_per_year);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a51e8da4f046598e3a1782461458592fb" kindref="member">information_ratio</ref><sp/>=<sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac408b3c65b0e589794b742200d5532cb" kindref="member">tracking_error</ref>.value()<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(excess_mean.value()<sp/>*<sp/>config_.periods_per_year)<sp/>/</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1ac408b3c65b0e589794b742200d5532cb" kindref="member">tracking_error</ref>.value()</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>analysis<sp/>and<sp/>risk<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perform_risk_analysis(report);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1a2048a961d567d59bb0bb091f88036aa1" kindref="member">cache_stats</ref><sp/>=<sp/>cache_calculator_-&gt;get_cache_stats();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timing<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report.<ref refid="d4/dd2/structpyfolio_1_1analytics_1_1AnalysisReport_1aea6e909bb3b3a4eec443c64b9df0efe3" kindref="member">computation_time</ref><sp/>=<sp/>std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(end_time<sp/>-<sp/>start_time);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>performance<sp/>tracking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++total_analyses_performed_;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_computation_time_<sp/>+=<sp/>std::chrono::duration_cast&lt;std::chrono::nanoseconds&gt;(end_time<sp/>-<sp/>start_time);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_analysis_time_<sp/>=<sp/>std::chrono::steady_clock::now();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;AnalysisReport&gt;::success</ref>(std::move(report));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;AnalysisReport&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" kindref="member">ErrorCode::CalculationError</ref>,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Analysis<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::string(e.what()));</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats" kindref="compound">SuitePerformanceStats</ref><sp/>{</highlight></codeline>
<codeline lineno="409" refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1a4864fa9c1cdf09108598ec550e4050c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1a4864fa9c1cdf09108598ec550e4050c1" kindref="member">total_analyses</ref>;</highlight></codeline>
<codeline lineno="410" refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1aeb22270fdae600234dbccf475458d3b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1aeb22270fdae600234dbccf475458d3b9" kindref="member">total_computation_time</ref>;</highlight></codeline>
<codeline lineno="411" refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ac4d4696eccc24118f24ee42143ba536e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ac4d4696eccc24118f24ee42143ba536e" kindref="member">average_analysis_time_ms</ref>;</highlight></codeline>
<codeline lineno="412" refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ab87f7519a323a15ef47be8eb8f674d29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="da/d79/structpyfolio_1_1analytics_1_1CachedPerformanceCalculator_1_1CacheStats" kindref="compound">CachedPerformanceCalculator::CacheStats</ref><sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ab87f7519a323a15ef47be8eb8f674d29" kindref="member">cache_stats</ref>;</highlight></codeline>
<codeline lineno="413" refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ae5893cd860ff5b33697c3c4daa058e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::steady_clock::time_point<sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats_1ae5893cd860ff5b33697c3c4daa058e8e" kindref="member">last_analysis_time</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a6b9722354403aaccf8862317429bb32a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats" kindref="compound">SuitePerformanceStats</ref><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a6b9722354403aaccf8862317429bb32a" kindref="member">get_performance_stats</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avg_time_ms<sp/>=<sp/>total_analyses_performed_<sp/>&gt;<sp/>0<sp/>?<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(total_computation_time_.count())<sp/>/</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(total_analyses_performed_<sp/>*<sp/>1000000.0)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="df/de7/structpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1_1SuitePerformanceStats" kindref="compound">SuitePerformanceStats</ref>{.total_analyses<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>total_analyses_performed_,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.total_computation_time<sp/><sp/><sp/>=<sp/>total_computation_time_,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.average_analysis_time_ms<sp/>=<sp/>avg_time_ms,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.cache_stats<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>cache_calculator_-&gt;get_cache_stats(),</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.last_analysis_time<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>last_analysis_time_};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ab34d166961357e7173775299f6994bcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1ab34d166961357e7173775299f6994bcf" kindref="member">update_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" kindref="compound">AnalysisConfig</ref>&amp;<sp/>new_config)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_<sp/>=<sp/>new_config;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cache_calculator_-&gt;update_config(new_config.<ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig_1a3f41c3fd36eaed927e6182e041d658a5" kindref="member">cache_config</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a5eafaa5c5624cb9b40b16bbe944489a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a5eafaa5c5624cb9b40b16bbe944489a6" kindref="member">clear_cache</ref>()<sp/>{<sp/>cache_calculator_-&gt;clear_cache();<sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="444" refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a9198fb2924ab75dae4386bab25d050a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="de/d28/structpyfolio_1_1analytics_1_1AnalysisConfig" kindref="compound">AnalysisConfig</ref>&amp;<sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a9198fb2924ab75dae4386bab25d050a0" kindref="member">get_config</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config_;<sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">};</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="d2/d10/namespacepyfolio_1_1analytics_1a89aef52fd7efed75e7392b01745fe762" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite" kindref="compound">PerformanceAnalysisSuite</ref>&amp;<sp/><ref refid="d2/d10/namespacepyfolio_1_1analytics_1a89aef52fd7efed75e7392b01745fe762" kindref="member">get_global_analysis_suite</ref>()<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite" kindref="compound">PerformanceAnalysisSuite</ref><sp/>global_suite;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global_suite;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="459" refid="d2/d10/namespacepyfolio_1_1analytics_1a692d3d38854a2039ea715d0ba5ca5838" refkind="member"><highlight class="normal">[[nodiscard]]<sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;AnalysisReport&gt;</ref><sp/><ref refid="d2/d10/namespacepyfolio_1_1analytics_1a692d3d38854a2039ea715d0ba5ca5838" kindref="member">analyze_portfolio_performance</ref>(</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;T&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;T&gt;</ref>&gt;&amp;<sp/>benchmark<sp/>=<sp/>std::nullopt)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d2/d10/namespacepyfolio_1_1analytics_1a89aef52fd7efed75e7392b01745fe762" kindref="member">get_global_analysis_suite</ref>().<ref refid="dd/d26/classpyfolio_1_1analytics_1_1PerformanceAnalysisSuite_1a2a89a113f35927f33af40fa23ed44a70" kindref="member">analyze_performance</ref>(returns,<sp/>benchmark);</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pyfolio::analytics</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_analysis_suite.h"/>
  </compounddef>
</doxygen>
