<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="df/da3/namespacepyfolio_1_1visualization_1_1utils" kind="namespace" language="C++">
    <compoundname>pyfolio::visualization::utils</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="df/da3/namespacepyfolio_1_1visualization_1_1utils_1addf5f76ba7cac9175e083d48d7bce498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData" kindref="compound">PlotData</ref></type>
        <definition>PlotData pyfolio::visualization::utils::timeseries_to_plotdata</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;ts, const std::string &amp;label=&quot;&quot;, const std::string &amp;color=&quot;#1f77b4&quot;)</argsstring>
        <name>timeseries_to_plotdata</name>
        <qualifiedname>pyfolio::visualization::utils::timeseries_to_plotdata</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>label</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>color</declname>
          <defval>&quot;#1f77b4&quot;</defval>
        </param>
        <briefdescription>
<para>Convert <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref> to <ref refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData" kindref="compound">PlotData</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" line="185" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" bodystart="213" bodyend="221" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" declline="185" declcolumn="10"/>
        <references refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1a645c7b31e09995d482914d274dc25958" compoundref="d3/df8/plotting_8h" startline="43">pyfolio::visualization::PlotData::color</references>
        <references refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1afa8a89392828441a337028a4b1f13fac" compoundref="d3/df8/plotting_8h" startline="42">pyfolio::visualization::PlotData::label</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0374bbc62bd808749ac476b3af4b0ead" compoundref="d8/d51/time__series_8h" startline="124" endline="124">pyfolio::TimeSeries&lt; T &gt;::timestamps</references>
        <references refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1a5e2010a240ef83490301d4066ae046ed" compoundref="d3/df8/plotting_8h" startline="40">pyfolio::visualization::PlotData::timestamps</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
        <references refid="d8/d8b/structpyfolio_1_1visualization_1_1PlotData_1a23b96cef40eacdf7d2a91443cebd37b4" compoundref="d3/df8/plotting_8h" startline="41">pyfolio::visualization::PlotData::values</references>
        <referencedby refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1ab86160c874bf4c7f967d0559904640f2" compoundref="d3/df8/plotting_8h" startline="384" endline="419">pyfolio::visualization::plots::plot_drawdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/da3/namespacepyfolio_1_1visualization_1_1utils_1aafd4e895a7ae4f6f02efa417bfaf70a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt; double &gt; pyfolio::visualization::utils::calculate_cumulative_returns</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns)</argsstring>
        <name>calculate_cumulative_returns</name>
        <qualifiedname>pyfolio::visualization::utils::calculate_cumulative_returns</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
<para>Calculate cumulative returns for plotting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" line="191" column="13" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" bodystart="223" bodyend="234" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" declline="191" declcolumn="13"/>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" compoundref="d8/d51/time__series_8h" startline="102" endline="102">pyfolio::TimeSeries&lt; T &gt;::size</references>
        <referencedby refid="de/d4b/namespacepyfolio_1_1visualization_1_1plots_1ab86160c874bf4c7f967d0559904640f2" compoundref="d3/df8/plotting_8h" startline="384" endline="419">pyfolio::visualization::plots::plot_drawdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/da3/namespacepyfolio_1_1visualization_1_1utils_1aac1bb2e5fa965762011550a97096d437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; std::string &gt;, std::vector&lt; std::vector&lt; double &gt; &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; std::string &gt;, std::vector&lt; std::vector&lt; double &gt; &gt; &gt; pyfolio::visualization::utils::calculate_monthly_returns_matrix</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns)</argsstring>
        <name>calculate_monthly_returns_matrix</name>
        <qualifiedname>pyfolio::visualization::utils::calculate_monthly_returns_matrix</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
<para>Calculate monthly returns matrix for heatmap. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" line="196" column="11" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" declline="196" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="df/da3/namespacepyfolio_1_1visualization_1_1utils_1aa8c1ebb6ad8ad64f26aa632ba12bf499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; std::vector&lt; std::string &gt;, std::vector&lt; double &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; std::string &gt;, std::vector&lt; double &gt; &gt; pyfolio::visualization::utils::calculate_annual_returns</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns)</argsstring>
        <name>calculate_annual_returns</name>
        <qualifiedname>pyfolio::visualization::utils::calculate_annual_returns</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
<para>Calculate annual returns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" line="202" column="11" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" bodystart="236" bodyend="263" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" declline="202" declcolumn="11"/>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a0374bbc62bd808749ac476b3af4b0ead" compoundref="d8/d51/time__series_8h" startline="124" endline="124">pyfolio::TimeSeries&lt; T &gt;::timestamps</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
      </memberdef>
      <memberdef kind="function" id="df/da3/namespacepyfolio_1_1visualization_1_1utils_1afcba08f454848ff1fc85ee838aa76caa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; double &gt; &gt; pyfolio::visualization::utils::calculate_correlation_matrix</definition>
        <argsstring>(const std::vector&lt; TimeSeries&lt; Return &gt; &gt; &amp;return_series)</argsstring>
        <name>calculate_correlation_matrix</name>
        <qualifiedname>pyfolio::visualization::utils::calculate_correlation_matrix</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &gt; &amp;</type>
          <declname>return_series</declname>
        </param>
        <briefdescription>
<para>Calculate correlation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" line="207" column="13" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" declline="207" declcolumn="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Utility functions for data preparation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h" line="180" column="1"/>
  </compounddef>
</doxygen>
