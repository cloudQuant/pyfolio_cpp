<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive" kind="namespace" language="C++">
    <compoundname>pyfolio::visualization::interactive</compoundname>
    <innerclass refid="d3/de8/classpyfolio_1_1visualization_1_1interactive_1_1RealTimeChart" prot="public">pyfolio::visualization::interactive::RealTimeChart</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a2f6c2c21cc2ef099f9b109d1bb340559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt; std::string &gt; pyfolio::visualization::interactive::create_portfolio_dashboard</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns, const positions::PortfolioHoldings &amp;holdings, const std::optional&lt; TimeSeries&lt; Return &gt; &gt; &amp;benchmark=std::nullopt, const std::string &amp;output_path=&quot;portfolio_dashboard.html&quot;)</argsstring>
        <name>create_portfolio_dashboard</name>
        <qualifiedname>pyfolio::visualization::interactive::create_portfolio_dashboard</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const <ref refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings" kindref="compound">positions::PortfolioHoldings</ref> &amp;</type>
          <declname>holdings</declname>
        </param>
        <param>
          <type>const std::optional&lt; <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &gt; &amp;</type>
          <declname>benchmark</declname>
          <defval>std::nullopt</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>output_path</declname>
          <defval>&quot;portfolio_dashboard.html&quot;</defval>
        </param>
        <briefdescription>
<para>Create comprehensive portfolio dashboard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp" line="18" column="8" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp" bodystart="18" bodyend="118" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" declline="177" declcolumn="8"/>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a66d1c0d19b6584c4232972da8fe0a44e" compoundref="d7/d0c/holdings_8h" startline="65" endline="65">pyfolio::positions::PortfolioHoldings::cash_balance</references>
        <references refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1a40427885f386818cc69e47b487334491" compoundref="d1/dcd/plotly__enhanced_8h" startline="38">pyfolio::visualization::InteractivePlotConfig::enable_rangeselector</references>
        <references refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1af09aab73a495972af4aa113dfaf5b732" compoundref="d1/dcd/plotly__enhanced_8h" startline="37">pyfolio::visualization::InteractivePlotConfig::enable_rangeslider</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a315a3a6f55a4101a289ab1bf2003762a" compoundref="d7/d0c/holdings_8h" startline="67" endline="67">pyfolio::positions::PortfolioHoldings::holdings</references>
        <references refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig_1af42b93b1d5bd87dc0957c97ffcb9f6c7" compoundref="d1/dcd/plotly__enhanced_8h" startline="39">pyfolio::visualization::InteractivePlotConfig::theme</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ae6d65bfe733f0302cd61c10f4b5bd75f" compoundref="d7/d0c/holdings_8h" startline="64" endline="64">pyfolio::positions::PortfolioHoldings::timestamp</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1a0c77abf0a6d6acefcec468e8cf061d5c" compoundref="de/d1b/datetime_8h" startline="195" endline="209">pyfolio::DateTime::to_string</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a024425899ff9486a38f8a209c4369924" compoundref="d7/d0c/holdings_8h" startline="66" endline="66">pyfolio::positions::PortfolioHoldings::total_value</references>
        <referencedby refid="d7/d5f/plotly__enhanced__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d5f/plotly__enhanced__example_8cpp" startline="113" endline="340">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a9d7419f28da833616e1a5e4f6832ad4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt; std::string &gt; pyfolio::visualization::interactive::create_risk_dashboard</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns, const analytics::PerformanceMetrics &amp;metrics, const std::string &amp;output_path=&quot;risk_dashboard.html&quot;)</argsstring>
        <name>create_risk_dashboard</name>
        <qualifiedname>pyfolio::visualization::interactive::create_risk_dashboard</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const <ref refid="de/d2e/structpyfolio_1_1analytics_1_1PerformanceMetrics" kindref="compound">analytics::PerformanceMetrics</ref> &amp;</type>
          <declname>metrics</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>output_path</declname>
          <defval>&quot;risk_dashboard.html&quot;</defval>
        </param>
        <briefdescription>
<para>Create risk metrics dashboard. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp" line="120" column="8" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp" bodystart="120" bodyend="190" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" declline="185" declcolumn="8"/>
        <referencedby refid="d7/d5f/plotly__enhanced__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d5f/plotly__enhanced__example_8cpp" startline="113" endline="340">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a4df055e4525755c051bb391b756bfa1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt; std::string &gt; pyfolio::visualization::interactive::create_attribution_waterfall</definition>
        <argsstring>(const std::map&lt; std::string, double &gt; &amp;attribution_factors, const InteractivePlotConfig &amp;config={})</argsstring>
        <name>create_attribution_waterfall</name>
        <qualifiedname>pyfolio::visualization::interactive::create_attribution_waterfall</qualifiedname>
        <param>
          <type>const std::map&lt; std::string, double &gt; &amp;</type>
          <declname>attribution_factors</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig" kindref="compound">InteractivePlotConfig</ref> &amp;</type>
          <declname>config</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create advanced performance attribution chart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp" line="192" column="8" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp" bodystart="192" bodyend="247" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" declline="225" declcolumn="8"/>
        <referencedby refid="d7/d5f/plotly__enhanced__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d7/d5f/plotly__enhanced__example_8cpp" startline="113" endline="340">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1aa584cad0311faf03b05f98f3aa775a4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt; std::string &gt; pyfolio::visualization::interactive::create_rolling_metrics_chart</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns, const std::vector&lt; size_t &gt; &amp;windows={30, 60, 252}, const InteractivePlotConfig &amp;config={})</argsstring>
        <name>create_rolling_metrics_chart</name>
        <qualifiedname>pyfolio::visualization::interactive::create_rolling_metrics_chart</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <declname>windows</declname>
          <defval>{30, 60, 252}</defval>
        </param>
        <param>
          <type>const <ref refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig" kindref="compound">InteractivePlotConfig</ref> &amp;</type>
          <declname>config</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create rolling metrics comparison chart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" line="231" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" declline="231" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a3d3fa7cb2530b2de016cf22ba59f6ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt; std::string &gt; pyfolio::visualization::interactive::create_sector_allocation_chart</definition>
        <argsstring>(const std::map&lt; std::string, double &gt; &amp;sector_weights, const InteractivePlotConfig &amp;config={})</argsstring>
        <name>create_sector_allocation_chart</name>
        <qualifiedname>pyfolio::visualization::interactive::create_sector_allocation_chart</qualifiedname>
        <param>
          <type>const std::map&lt; std::string, double &gt; &amp;</type>
          <declname>sector_weights</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig" kindref="compound">InteractivePlotConfig</ref> &amp;</type>
          <declname>config</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create sector allocation pie chart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" line="238" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" declline="238" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="d7/d2f/namespacepyfolio_1_1visualization_1_1interactive_1a59cdf34b763111b1d023b35a53a0db14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::string &gt;</type>
        <definition>Result&lt; std::string &gt; pyfolio::visualization::interactive::create_underwater_chart</definition>
        <argsstring>(const TimeSeries&lt; Return &gt; &amp;returns, const InteractivePlotConfig &amp;config={})</argsstring>
        <name>create_underwater_chart</name>
        <qualifiedname>pyfolio::visualization::interactive::create_underwater_chart</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; <ref refid="d7/df8/namespacepyfolio_1ab26cb0b13c68f84ed67abcc669658f35" kindref="member">Return</ref> &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const <ref refid="d3/d59/structpyfolio_1_1visualization_1_1InteractivePlotConfig" kindref="compound">InteractivePlotConfig</ref> &amp;</type>
          <declname>config</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Create drawdown underwater chart. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" line="244" column="8" declfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" declline="244" declcolumn="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Interactive financial charts. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h" line="172" column="1"/>
  </compounddef>
</doxygen>
