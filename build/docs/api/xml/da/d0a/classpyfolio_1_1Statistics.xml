<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="da/d0a/classpyfolio_1_1Statistics" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::Statistics</compoundname>
    <includes refid="d5/db2/analytics_2statistics_8h" local="no">statistics.h</includes>
    <innerclass refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult" prot="public">pyfolio::Statistics::AlphaBetaResult</innerclass>
    <innerclass refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo" prot="public">pyfolio::Statistics::SimpleDrawdownInfo</innerclass>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a9c6b1c2cee5eb1b6d0dd8298557b5f22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d7/d8f/structpyfolio_1_1analytics_1_1statistics_1_1StatisticalSummary" kindref="compound">analytics::statistics::StatisticalSummary</ref> &gt;</type>
        <definition>static Result&lt; analytics::statistics::StatisticalSummary &gt; pyfolio::Statistics::calculate_basic_stats</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;series)</argsstring>
        <name>calculate_basic_stats</name>
        <qualifiedname>pyfolio::Statistics::calculate_basic_stats</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>series</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="277" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="277" bodyend="283"/>
        <references refid="dc/d21/namespacepyfolio_1_1analytics_1_1statistics_1a03d3ac2bfd1691d61e27da8e7d951c22" compoundref="d5/db2/analytics_2statistics_8h" startline="42" endline="104">pyfolio::analytics::statistics::calculate_summary</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a7401475da2acefda00385214b27e7c59" compoundref="d8/d51/time__series_8h" startline="103" endline="103">pyfolio::TimeSeries&lt; T &gt;::empty</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1add05d2ec066eecbb3feb17b3ecab1fe8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::sharpe_ratio</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, double risk_free_rate=0.0)</argsstring>
        <name>sharpe_ratio</name>
        <qualifiedname>pyfolio::Statistics::sharpe_ratio</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>risk_free_rate</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="287" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="287" bodyend="305"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad798a4da69bff9c8bb9d335eaba6ec6" compoundref="d8/d51/time__series_8h" startline="778" endline="797">pyfolio::TimeSeries&lt; T &gt;::mean</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82439ade72c213e3ffd477dd6a2058e5" compoundref="d8/d51/time__series_8h" startline="802" endline="824">pyfolio::TimeSeries&lt; T &gt;::std</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a5b09b3706a11359c2364d3d6149eba17" compoundref="de/d88/performance__metrics_8h" startline="197" endline="199">pyfolio::PerformanceMetrics::sharpe_ratio</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1ae3abd35508b1c2c76a918a8d58338e41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::sortino_ratio</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, double risk_free_rate=0.0)</argsstring>
        <name>sortino_ratio</name>
        <qualifiedname>pyfolio::Statistics::sortino_ratio</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>risk_free_rate</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="309" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="309" bodyend="342"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad798a4da69bff9c8bb9d335eaba6ec6" compoundref="d8/d51/time__series_8h" startline="778" endline="797">pyfolio::TimeSeries&lt; T &gt;::mean</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a904b5c53def9cd48ffb1be5fb776480e" compoundref="de/d88/performance__metrics_8h" startline="202" endline="204">pyfolio::PerformanceMetrics::sortino_ratio</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1ad65c7ac81b945bde674200d8ca6b389b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::calmar_ratio</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns)</argsstring>
        <name>calmar_ratio</name>
        <qualifiedname>pyfolio::Statistics::calmar_ratio</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="346" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="346" bodyend="378"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a5cae2e774b3eeab9c87e2e2a44ee532a" compoundref="d8/d51/time__series_8h" startline="855" endline="874">pyfolio::TimeSeries&lt; T &gt;::cumulative_returns</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" compoundref="d5/db2/analytics_2statistics_8h" startline="397" endline="445">max_drawdown</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1aad798a4da69bff9c8bb9d335eaba6ec6" compoundref="d8/d51/time__series_8h" startline="778" endline="797">pyfolio::TimeSeries&lt; T &gt;::mean</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a205605b4205561b43b0b8e052999ec55" compoundref="de/d88/performance__metrics_8h" startline="207" endline="209">pyfolio::PerformanceMetrics::calmar_ratio</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo" kindref="compound">SimpleDrawdownInfo</ref> &gt;</type>
        <definition>static Result&lt; SimpleDrawdownInfo &gt; pyfolio::Statistics::max_drawdown</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns)</argsstring>
        <name>max_drawdown</name>
        <qualifiedname>pyfolio::Statistics::max_drawdown</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="397" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="397" bodyend="445"/>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a5cae2e774b3eeab9c87e2e2a44ee532a" compoundref="d8/d51/time__series_8h" startline="855" endline="874">pyfolio::TimeSeries&lt; T &gt;::cumulative_returns</references>
        <references refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo_1ac09db7a3ff5ac1cbb7213436c4c3dc7a" compoundref="d5/db2/analytics_2statistics_8h" startline="383">pyfolio::Statistics::SimpleDrawdownInfo::duration_days</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" compoundref="d5/db2/analytics_2statistics_8h" startline="397" endline="445">max_drawdown</references>
        <references refid="d5/dff/structpyfolio_1_1Statistics_1_1SimpleDrawdownInfo_1a8478e01fbbee42c6dcea037f98108b87" compoundref="d5/db2/analytics_2statistics_8h" startline="382">pyfolio::Statistics::SimpleDrawdownInfo::max_drawdown</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1ad65c7ac81b945bde674200d8ca6b389b" compoundref="d5/db2/analytics_2statistics_8h" startline="346" endline="378">calmar_ratio</referencedby>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a74e8559b754a6682d584e5083a97742e" compoundref="de/d88/performance__metrics_8h" startline="212" endline="214">pyfolio::PerformanceMetrics::max_drawdown</referencedby>
        <referencedby refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" compoundref="d5/db2/analytics_2statistics_8h" startline="397" endline="445">max_drawdown</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1ac3ca6d5a593f245b088abe5097c2466d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::volatility</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns)</argsstring>
        <name>volatility</name>
        <qualifiedname>pyfolio::Statistics::volatility</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="449" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="449" bodyend="451"/>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82439ade72c213e3ffd477dd6a2058e5" compoundref="d8/d51/time__series_8h" startline="802" endline="824">pyfolio::TimeSeries&lt; T &gt;::std</references>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1af281becf792a699a5d4fff96339b89e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::downside_deviation</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, double threshold=0.0)</argsstring>
        <name>downside_deviation</name>
        <qualifiedname>pyfolio::Statistics::downside_deviation</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>threshold</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="455" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="455" bodyend="474"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1af30bc2537515dd9bf004768149ace4a4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult" kindref="compound">AlphaBetaResult</ref> &gt;</type>
        <definition>static Result&lt; AlphaBetaResult &gt; pyfolio::Statistics::alpha_beta</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, const TimeSeries&lt; T &gt; &amp;benchmark_returns, double risk_free_rate=0.0)</argsstring>
        <name>alpha_beta</name>
        <qualifiedname>pyfolio::Statistics::alpha_beta</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>benchmark_returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>risk_free_rate</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="478" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="478" bodyend="518"/>
        <references refid="de/d82/structpyfolio_1_1Statistics_1_1AlphaBetaResult_1affa8e3224678440ce746bea2f66f77c7" compoundref="d5/db2/analytics_2statistics_8h" startline="390">pyfolio::Statistics::AlphaBetaResult::alpha</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" compoundref="d8/d51/time__series_8h" startline="102" endline="102">pyfolio::TimeSeries&lt; T &gt;::size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a992b93ae03ec1d0da0fb55c985b70465" compoundref="de/d88/performance__metrics_8h" startline="217" endline="221">pyfolio::PerformanceMetrics::alpha_beta</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a0fd32c54eb1fea5a675633d5f85b7fc0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::information_ratio</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, const TimeSeries&lt; T &gt; &amp;benchmark_returns)</argsstring>
        <name>information_ratio</name>
        <qualifiedname>pyfolio::Statistics::information_ratio</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>benchmark_returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="522" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="522" bodyend="561"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9aacbb30bd92a04a43bc1ea560dac5c241" compoundref="d3/d11/error__handling_8h" startline="26">pyfolio::CalculationError</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" compoundref="d8/d51/time__series_8h" startline="102" endline="102">pyfolio::TimeSeries&lt; T &gt;::size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1ab87361fe59e60bb0b0de03856beb1ed5" compoundref="de/d88/performance__metrics_8h" startline="224" endline="226">pyfolio::PerformanceMetrics::information_ratio</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a2e0bb5b9b5052088b4ec146150811489" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::tracking_error</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, const TimeSeries&lt; T &gt; &amp;benchmark_returns)</argsstring>
        <name>tracking_error</name>
        <qualifiedname>pyfolio::Statistics::tracking_error</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>benchmark_returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="564" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="564" bodyend="598"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1a82aad601509b554d6968521b8461f50e" compoundref="d8/d51/time__series_8h" startline="102" endline="102">pyfolio::TimeSeries&lt; T &gt;::size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
        <referencedby refid="d7/d98/classpyfolio_1_1PerformanceMetrics_1a9fdc757f9aed9be60ee1beb1bc1d0e6f" compoundref="de/d88/performance__metrics_8h" startline="229" endline="231">pyfolio::PerformanceMetrics::tracking_error</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1ad472ba19872dc8bba0dbe864dc65d0f9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::skewness</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns)</argsstring>
        <name>skewness</name>
        <qualifiedname>pyfolio::Statistics::skewness</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="601" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="601" bodyend="604"/>
        <references refid="d6/ddc/namespacepyfolio_1_1stats_1a5df7d33f99e4ea05ccf659ac88173b4e" compoundref="d3/dbe/math_2statistics_8h" startline="164" endline="193">pyfolio::stats::skewness</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a2984e04c4fd9c5c0686ebc586e8499b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::kurtosis</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns)</argsstring>
        <name>kurtosis</name>
        <qualifiedname>pyfolio::Statistics::kurtosis</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="607" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="607" bodyend="610"/>
        <references refid="d6/ddc/namespacepyfolio_1_1stats_1ae51a470f87ae34ae1f58305531f9dcf8" compoundref="d3/dbe/math_2statistics_8h" startline="199" endline="230">pyfolio::stats::kurtosis</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a9ede57ac57b34082eaf024beabbc5304" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::value_at_risk_historical</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, double confidence_level=0.05)</argsstring>
        <name>value_at_risk_historical</name>
        <qualifiedname>pyfolio::Statistics::value_at_risk_historical</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>confidence_level</declname>
          <defval>0.05</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="613" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="613" bodyend="618"/>
        <references refid="d6/ddc/namespacepyfolio_1_1stats_1a1f80321b9a21528dec7e6978131ee2e7" compoundref="d3/dbe/math_2statistics_8h" startline="376" endline="391">pyfolio::stats::value_at_risk</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
      </memberdef>
      <memberdef kind="function" id="da/d0a/classpyfolio_1_1Statistics_1a9aa2d1314ebd348e3cabf7c294d4b6a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; double &gt;</type>
        <definition>static Result&lt; double &gt; pyfolio::Statistics::conditional_value_at_risk</definition>
        <argsstring>(const TimeSeries&lt; T &gt; &amp;returns, double confidence_level=0.05)</argsstring>
        <name>conditional_value_at_risk</name>
        <qualifiedname>pyfolio::Statistics::conditional_value_at_risk</qualifiedname>
        <param>
          <type>const <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &amp;</type>
          <declname>returns</declname>
        </param>
        <param>
          <type>double</type>
          <declname>confidence_level</declname>
          <defval>0.05</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="621" column="19" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="621" bodyend="626"/>
        <references refid="d6/ddc/namespacepyfolio_1_1stats_1a1aca034860dac7ddacbac6f9dd0b930c" compoundref="d3/dbe/math_2statistics_8h" startline="397" endline="424">pyfolio::stats::conditional_value_at_risk</references>
        <references refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" compoundref="d8/d51/time__series_8h" startline="125" endline="125">pyfolio::TimeSeries&lt; T &gt;::values</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Wrapper class to provide static methods expected by tests. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" line="273" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h" bodystart="273" bodyend="627"/>
    <listofallmembers>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1af30bc2537515dd9bf004768149ace4a4" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>alpha_beta</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a9c6b1c2cee5eb1b6d0dd8298557b5f22" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>calculate_basic_stats</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1ad65c7ac81b945bde674200d8ca6b389b" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>calmar_ratio</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a9aa2d1314ebd348e3cabf7c294d4b6a3" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>conditional_value_at_risk</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1af281becf792a699a5d4fff96339b89e3" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>downside_deviation</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a0fd32c54eb1fea5a675633d5f85b7fc0" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>information_ratio</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a2984e04c4fd9c5c0686ebc586e8499b5" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>kurtosis</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a6950e63814c3d0f2985058afa6d045de" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>max_drawdown</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1add05d2ec066eecbb3feb17b3ecab1fe8" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>sharpe_ratio</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1ad472ba19872dc8bba0dbe864dc65d0f9" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>skewness</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1ae3abd35508b1c2c76a918a8d58338e41" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>sortino_ratio</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a2e0bb5b9b5052088b4ec146150811489" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>tracking_error</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1a9ede57ac57b34082eaf024beabbc5304" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>value_at_risk_historical</name></member>
      <member refid="da/d0a/classpyfolio_1_1Statistics_1ac3ca6d5a593f245b088abe5097c2466d" prot="public" virt="non-virtual"><scope>pyfolio::Statistics</scope><name>volatility</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
