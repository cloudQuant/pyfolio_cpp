<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="da/deb/classpyfolio_1_1DataFrame" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::DataFrame</compoundname>
    <includes refid="d2/d99/dataframe_8h" local="no">dataframe.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using pyfolio::DataFrame::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <qualifiedname>pyfolio::DataFrame::size_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="57" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="da/deb/classpyfolio_1_1DataFrame_1a7a58a07008dbcf17c881db8b3694a720" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt;</type>
        <definition>std::vector&lt;DateTime&gt; pyfolio::DataFrame::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>pyfolio::DataFrame::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="24" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/deb/classpyfolio_1_1DataFrame_1aaebbae28115809f15e41103fc475f954" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="d7/df8/namespacepyfolio_1aa75f79d732be11dc872ed7175fed13fc" kindref="member">ColumnData</ref> &gt;</type>
        <definition>std::map&lt;std::string, ColumnData&gt; pyfolio::DataFrame::columns_</definition>
        <argsstring></argsstring>
        <name>columns_</name>
        <qualifiedname>pyfolio::DataFrame::columns_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="25" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="da/deb/classpyfolio_1_1DataFrame_1ab65495ed7b54df2b89dbe1664cdf0658" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; pyfolio::DataFrame::column_names_</definition>
        <argsstring></argsstring>
        <name>column_names_</name>
        <qualifiedname>pyfolio::DataFrame::column_names_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="26" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a8c3fd5516478a7b9e7172b02f2b59d6a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt; &amp;</type>
        <definition>std::vector&lt; T &gt; &amp; pyfolio::DataFrame::get_column_data</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_column_data</name>
        <qualifiedname>pyfolio::DataFrame::get_column_data</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="29" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="29" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a8f93507cc6397e146f3057cd5ce8b485" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const std::vector&lt; T &gt; &amp;</type>
        <definition>const std::vector&lt; T &gt; &amp; pyfolio::DataFrame::get_column_data</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_column_data</name>
        <qualifiedname>pyfolio::DataFrame::get_column_data</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="43" column="23" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="43" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a754c72a36bab572bb79e952d88e42743" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::DataFrame::validate_consistency</definition>
        <argsstring>() const</argsstring>
        <name>validate_consistency</name>
        <qualifiedname>pyfolio::DataFrame::validate_consistency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="446" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="446" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a6d0c7e61275ff4d25255336657884ad7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref></type>
        <definition>DateTime pyfolio::DataFrame::get_period_start</definition>
        <argsstring>(const DateTime &amp;timestamp, Frequency freq) const</argsstring>
        <name>get_period_start</name>
        <qualifiedname>pyfolio::DataFrame::get_period_start</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>timestamp</declname>
        </param>
        <param>
          <type><ref refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92e" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="458" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="458" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1aad9f358a400309a46a3b658b50397e62" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double pyfolio::DataFrame::calculate_correlation</definition>
        <argsstring>(const std::string &amp;col1, const std::string &amp;col2) const</argsstring>
        <name>calculate_correlation</name>
        <qualifiedname>pyfolio::DataFrame::calculate_correlation</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>col1</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>col2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="477" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="477" bodyend="485"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pyfolio::DataFrame::DataFrame</definition>
        <argsstring>()=default</argsstring>
        <name>DataFrame</name>
        <qualifiedname>pyfolio::DataFrame::DataFrame</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="60" column="5"/>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1aab195d82ad5f7716bdffe6017cf863a3" compoundref="d2/d99/dataframe_8h" startline="403" endline="443">corr</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a0bf6f736e050db71389e883612335aa4" compoundref="d2/d99/dataframe_8h" startline="354" endline="398">describe</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a8a99e258230d74a63fba182a5f1de4db" compoundref="d2/d99/dataframe_8h" startline="309" endline="349">groupby_period</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" compoundref="d2/d99/dataframe_8h" startline="194" endline="233">loc</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a00a9bb8b81f58c827f311295bd906022" compoundref="d2/d99/dataframe_8h" startline="238" endline="252">select</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" compoundref="d2/d99/dataframe_8h" startline="258" endline="304">sort_by</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1ab8d09be4f10596ee16590328569c734e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::DataFrame::DataFrame</definition>
        <argsstring>(const std::vector&lt; DateTime &gt; &amp;index)</argsstring>
        <name>DataFrame</name>
        <qualifiedname>pyfolio::DataFrame::DataFrame</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="62" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="62" bodyend="62"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a3d97cf3e9836dc3189227e57f8c7511e" compoundref="d2/d99/dataframe_8h" startline="81" endline="81">index</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a48b8382c893cf6fcd72586c76699bba0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pyfolio::DataFrame::DataFrame</definition>
        <argsstring>(const std::vector&lt; DateTime &gt; &amp;index, const std::map&lt; std::string, ColumnData &gt; &amp;columns)</argsstring>
        <name>DataFrame</name>
        <qualifiedname>pyfolio::DataFrame::DataFrame</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::map&lt; std::string, <ref refid="d7/df8/namespacepyfolio_1aa75f79d732be11dc872ed7175fed13fc" kindref="member">ColumnData</ref> &gt; &amp;</type>
          <declname>columns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="64" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="64" bodyend="72"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a46b322a25be8aa4b0bc49169276fde91" compoundref="d2/d99/dataframe_8h" startline="82" endline="82">columns</references>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a3d97cf3e9836dc3189227e57f8c7511e" compoundref="d2/d99/dataframe_8h" startline="81" endline="81">index</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" kindref="member">size_type</ref></type>
        <definition>size_type pyfolio::DataFrame::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>pyfolio::DataFrame::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="75" column="15" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="75" bodyend="75"/>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a91b2265984269f4a5eb36d8cefcf82cf" compoundref="d2/d99/dataframe_8h" startline="160" endline="171">at</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a8a99e258230d74a63fba182a5f1de4db" compoundref="d2/d99/dataframe_8h" startline="309" endline="349">groupby_period</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" compoundref="d2/d99/dataframe_8h" startline="194" endline="233">loc</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a49db7f0e6fefba365991ee6dc7bc77a8" compoundref="d2/d99/dataframe_8h" startline="177" endline="189">set_at</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" compoundref="d2/d99/dataframe_8h" startline="258" endline="304">sort_by</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1ad90daffb1db1c57ff0fd5013e8025b13" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" kindref="member">size_type</ref></type>
        <definition>size_type pyfolio::DataFrame::rows</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rows</name>
        <qualifiedname>pyfolio::DataFrame::rows</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="76" column="15" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1aaa347e5b40e8152b5a20c37fff9a8bef" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" kindref="member">size_type</ref></type>
        <definition>size_type pyfolio::DataFrame::cols</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cols</name>
        <qualifiedname>pyfolio::DataFrame::cols</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="77" column="15" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a0e5773095a5fe8a9791e486ece53177e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::DataFrame::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <qualifiedname>pyfolio::DataFrame::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="78" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a3d97cf3e9836dc3189227e57f8c7511e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; DateTime &gt; &amp; pyfolio::DataFrame::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>pyfolio::DataFrame::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="81" column="23" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="81" bodyend="81"/>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1ab8d09be4f10596ee16590328569c734e" compoundref="d2/d99/dataframe_8h" startline="62" endline="62">DataFrame</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a48b8382c893cf6fcd72586c76699bba0" compoundref="d2/d99/dataframe_8h" startline="64" endline="72">DataFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a46b322a25be8aa4b0bc49169276fde91" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; pyfolio::DataFrame::columns</definition>
        <argsstring>() const</argsstring>
        <name>columns</name>
        <qualifiedname>pyfolio::DataFrame::columns</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="82" column="23" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="82" bodyend="82"/>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a48b8382c893cf6fcd72586c76699bba0" compoundref="d2/d99/dataframe_8h" startline="64" endline="72">DataFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; void &gt;</type>
        <definition>Result&lt; void &gt; pyfolio::DataFrame::add_column</definition>
        <argsstring>(const std::string &amp;name, const std::vector&lt; T &gt; &amp;data)</argsstring>
        <name>add_column</name>
        <qualifiedname>pyfolio::DataFrame::add_column</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Add a column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="88" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="88" bodyend="101"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1aa40a3a7468229f09a6950c0d9e8b459f" compoundref="d0/db7/allocation_8h" startline="268" endline="343">pyfolio::positions::AllocationAnalyzer::analyze_allocation_stability</referencedby>
        <referencedby refid="dd/dea/classpyfolio_1_1positions_1_1AllocationAnalyzer_1a914e6a4ba11f6346e18dad6f0150e7ed" compoundref="d0/db7/allocation_8h" startline="151" endline="196">pyfolio::positions::AllocationAnalyzer::analyze_by_group</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a454a305e75cc2d0555e8e27a1ab216d6" compoundref="dd/d45/trading__costs_8h" startline="113" endline="155">pyfolio::transactions::TradingCostAnalyzer::analyze_costs</referencedby>
        <referencedby refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" compoundref="da/dd4/attribution_8h" startline="260" endline="338">pyfolio::attribution::BrinsonAttribution::calculate_multi_period_attribution</referencedby>
        <referencedby refid="d2/d7a/classpyfolio_1_1transactions_1_1TradingCostAnalyzer_1a59a3674c586b6114719f5b426ca46a21" compoundref="dd/d45/trading__costs_8h" startline="212" endline="249">pyfolio::transactions::TradingCostAnalyzer::cost_breakdown_by_period</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1ae358192abfd0820ec01e13dea1e1f36e" compoundref="d0/db6/transaction_8h" startline="288" endline="335">pyfolio::transactions::TransactionSeries::daily_summary</referencedby>
        <referencedby refid="dc/d4e/namespacepyfolio_1_1transactions_1aae9dcab036865e9b023c1b9464a65611" compoundref="d7/d00/round__trips_8h" startline="291" endline="348">pyfolio::transactions::round_trip_performance_by_period</referencedby>
        <referencedby refid="da/deb/classpyfolio_1_1DataFrame_1a81cf0052efc5c5dbe0ea46f4ac5d713b" compoundref="d2/d99/dataframe_8h" startline="135" endline="149">set_column</referencedby>
        <referencedby refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1ab0309859ab0f7c06dd583111fc9ae8d6" compoundref="d7/d0c/holdings_8h" startline="185" endline="220">pyfolio::positions::PortfolioHoldings::to_dataframe</referencedby>
        <referencedby refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1aba868a44a7a8927c69ab56d612f13f8f" compoundref="d0/db6/transaction_8h" startline="483" endline="512">pyfolio::transactions::TransactionSeries::to_dataframe</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a92bdc2235a48b8715a1790c9203d08b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; void &gt;</type>
        <definition>Result&lt; void &gt; pyfolio::DataFrame::remove_column</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>remove_column</name>
        <qualifiedname>pyfolio::DataFrame::remove_column</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove a column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="106" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="106" bodyend="116"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a9036e754f3f10bcc2d26d44b14f4950f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; T &gt; &gt;</type>
        <definition>Result&lt; TimeSeries&lt; T &gt; &gt; pyfolio::DataFrame::get_column</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get_column</name>
        <qualifiedname>pyfolio::DataFrame::get_column</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get column as <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="122" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="122" bodyend="129"/>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a81cf0052efc5c5dbe0ea46f4ac5d713b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; void &gt;</type>
        <definition>Result&lt; void &gt; pyfolio::DataFrame::set_column</definition>
        <argsstring>(const std::string &amp;name, const std::vector&lt; T &gt; &amp;data)</argsstring>
        <name>set_column</name>
        <qualifiedname>pyfolio::DataFrame::set_column</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set column values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="135" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="135" bodyend="149"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" compoundref="d2/d99/dataframe_8h" startline="88" endline="101">add_column</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1ab92a52438cfcc800d23b8e8f12afda77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::DataFrame::has_column</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>has_column</name>
        <qualifiedname>pyfolio::DataFrame::has_column</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Check if column exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="154" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a91b2265984269f4a5eb36d8cefcf82cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; T &gt;</type>
        <definition>Result&lt; T &gt; pyfolio::DataFrame::at</definition>
        <argsstring>(size_type row, const std::string &amp;column) const</argsstring>
        <name>at</name>
        <qualifiedname>pyfolio::DataFrame::at</qualifiedname>
        <param>
          <type><ref refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" kindref="member">size_type</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Get value at specific row and column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="160" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="160" bodyend="171"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" compoundref="d2/d99/dataframe_8h" startline="75" endline="75">size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a49db7f0e6fefba365991ee6dc7bc77a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; void &gt;</type>
        <definition>Result&lt; void &gt; pyfolio::DataFrame::set_at</definition>
        <argsstring>(size_type row, const std::string &amp;column, const T &amp;value)</argsstring>
        <name>set_at</name>
        <qualifiedname>pyfolio::DataFrame::set_at</qualifiedname>
        <param>
          <type><ref refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" kindref="member">size_type</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set value at specific row and column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="177" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="177" bodyend="189"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" compoundref="d2/d99/dataframe_8h" startline="75" endline="75">size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::DataFrame::loc</definition>
        <argsstring>(const DateTime &amp;start, const DateTime &amp;end) const</argsstring>
        <name>loc</name>
        <qualifiedname>pyfolio::DataFrame::loc</qualifiedname>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Select rows by date range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="194" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="194" bodyend="233"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1">DataFrame</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ae9b7a7be8e0c7fdda56e3b3eea2c55b8" compoundref="d3/d11/error__handling_8h" startline="23">pyfolio::InvalidDateRange</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9afe155956e8f33e5cffa82cc86a36afbd" compoundref="d3/d11/error__handling_8h" startline="22">pyfolio::MissingData</references>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" compoundref="d2/d99/dataframe_8h" startline="75" endline="75">size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a00a9bb8b81f58c827f311295bd906022" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::DataFrame::select</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;column_names) const</argsstring>
        <name>select</name>
        <qualifiedname>pyfolio::DataFrame::select</qualifiedname>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>column_names</declname>
        </param>
        <briefdescription>
<para>Select specific columns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="238" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="238" bodyend="252"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1">DataFrame</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::DataFrame::sort_by</definition>
        <argsstring>(const std::string &amp;column_name, bool ascending=true) const</argsstring>
        <name>sort_by</name>
        <qualifiedname>pyfolio::DataFrame::sort_by</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>column_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ascending</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sort by column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="258" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="258" bodyend="304"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1">DataFrame</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" compoundref="d2/d99/dataframe_8h" startline="75" endline="75">size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a8a99e258230d74a63fba182a5f1de4db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::map&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>, <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt; &gt;</type>
        <definition>Result&lt; std::map&lt; DateTime, DataFrame &gt; &gt; pyfolio::DataFrame::groupby_period</definition>
        <argsstring>(Frequency freq) const</argsstring>
        <name>groupby_period</name>
        <qualifiedname>pyfolio::DataFrame::groupby_period</qualifiedname>
        <param>
          <type><ref refid="d7/df8/namespacepyfolio_1ad4beb384aab829428a007308f1d0c92e" kindref="member">Frequency</ref></type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>Group by time period. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="309" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="309" bodyend="349"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1">DataFrame</references>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" compoundref="d2/d99/dataframe_8h" startline="75" endline="75">size</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1a0bf6f736e050db71389e883612335aa4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::DataFrame::describe</definition>
        <argsstring>() const</argsstring>
        <name>describe</name>
        <qualifiedname>pyfolio::DataFrame::describe</qualifiedname>
        <briefdescription>
<para>Calculate basic statistics for numeric columns. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="354" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="354" bodyend="398"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1">DataFrame</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1af74c490a9d8ce99c6a18bdbe608d1111" compoundref="de/d1b/datetime_8h" startline="178" endline="178">pyfolio::DateTime::now</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1adfc972d8ea84c03f9a6d9eb9e661b6cd" compoundref="de/d1b/datetime_8h" startline="150" endline="173">pyfolio::DateTime::parse</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
      <memberdef kind="function" id="da/deb/classpyfolio_1_1DataFrame_1aab195d82ad5f7716bdffe6017cf863a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::DataFrame::corr</definition>
        <argsstring>() const</argsstring>
        <name>corr</name>
        <qualifiedname>pyfolio::DataFrame::corr</qualifiedname>
        <briefdescription>
<para>Calculate correlation matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="403" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="403" bodyend="443"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1">DataFrame</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1af74c490a9d8ce99c6a18bdbe608d1111" compoundref="de/d1b/datetime_8h" startline="178" endline="178">pyfolio::DateTime::now</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> for tabular financial data (similar to pandas <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref>) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" line="22" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h" bodystart="22" bodyend="486"/>
    <listofallmembers>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>add_column</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a91b2265984269f4a5eb36d8cefcf82cf" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>at</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1aad9f358a400309a46a3b658b50397e62" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>calculate_correlation</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1aaa347e5b40e8152b5a20c37fff9a8bef" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>cols</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1ab65495ed7b54df2b89dbe1664cdf0658" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>column_names_</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a46b322a25be8aa4b0bc49169276fde91" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>columns</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1aaebbae28115809f15e41103fc475f954" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>columns_</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1aab195d82ad5f7716bdffe6017cf863a3" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>corr</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a29d189e8f5713ba762f1dd5437329cc1" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>DataFrame</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1ab8d09be4f10596ee16590328569c734e" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>DataFrame</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a48b8382c893cf6fcd72586c76699bba0" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>DataFrame</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a0bf6f736e050db71389e883612335aa4" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>describe</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a0e5773095a5fe8a9791e486ece53177e" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>empty</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a9036e754f3f10bcc2d26d44b14f4950f" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>get_column</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a8c3fd5516478a7b9e7172b02f2b59d6a" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>get_column_data</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a8f93507cc6397e146f3057cd5ce8b485" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>get_column_data</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a6d0c7e61275ff4d25255336657884ad7" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>get_period_start</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a8a99e258230d74a63fba182a5f1de4db" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>groupby_period</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1ab92a52438cfcc800d23b8e8f12afda77" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>has_column</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a3d97cf3e9836dc3189227e57f8c7511e" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>index</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a7a58a07008dbcf17c881db8b3694a720" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>index_</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1abbb4c4e31a50322ed54e13f895d1182f" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>loc</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a92bdc2235a48b8715a1790c9203d08b9" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>remove_column</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1ad90daffb1db1c57ff0fd5013e8025b13" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>rows</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a00a9bb8b81f58c827f311295bd906022" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>select</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a49db7f0e6fefba365991ee6dc7bc77a8" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>set_at</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a81cf0052efc5c5dbe0ea46f4ac5d713b" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>set_column</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1af72d782a5f0f8e591a1701b1548e0d43" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>size</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a51928a77cdc6e346a457d21215d75e58" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>size_type</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1ace902ca425d36403524c83163ceaf8cd" prot="public" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>sort_by</name></member>
      <member refid="da/deb/classpyfolio_1_1DataFrame_1a754c72a36bab572bb79e952d88e42743" prot="private" virt="non-virtual"><scope>pyfolio::DataFrame</scope><name>validate_consistency</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
