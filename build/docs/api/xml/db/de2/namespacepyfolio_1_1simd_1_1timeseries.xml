<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="db/de2/namespacepyfolio_1_1simd_1_1timeseries" kind="namespace" language="C++">
    <compoundname>pyfolio::simd::timeseries</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a58dbbb7b4a759f65a68509af1b47f460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pyfolio::simd::timeseries::add_series</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;a, const std::vector&lt; T &gt; &amp;b, std::vector&lt; T &gt; &amp;result)</argsstring>
        <name>add_series</name>
        <qualifiedname>pyfolio::simd::timeseries::add_series</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>result</declname>
        </param>
    <requiresclause>std::floating_point&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>Fast element-wise addition of two time series. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" line="200" column="6" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" bodystart="200" bodyend="211"/>
        <references refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a58dbbb7b4a759f65a68509af1b47f460" compoundref="d6/d99/simd__math_8h" startline="200" endline="211">add_series</references>
        <references refid="d0/d60/namespacepyfolio_1_1simd_1a8db69e97761680ae769598b3ea85485d" compoundref="df/d95/simd__math_8cpp" startline="46" endline="76">pyfolio::simd::vector_add</references>
        <referencedby refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a58dbbb7b4a759f65a68509af1b47f460" compoundref="d6/d99/simd__math_8h" startline="200" endline="211">add_series</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a260ff87f26612bf4ce898ec093717b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pyfolio::simd::timeseries::rolling_mean_simd</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;data, size_t window, std::vector&lt; T &gt; &amp;result)</argsstring>
        <name>rolling_mean_simd</name>
        <qualifiedname>pyfolio::simd::timeseries::rolling_mean_simd</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>window</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>result</declname>
        </param>
    <requiresclause>std::floating_point&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>Fast rolling statistics calculation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" line="217" column="6" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" bodystart="217" bodyend="232"/>
        <references refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a260ff87f26612bf4ce898ec093717b30" compoundref="d6/d99/simd__math_8h" startline="217" endline="232">rolling_mean_simd</references>
        <references refid="d0/d60/namespacepyfolio_1_1simd_1a6e587dea4e8b228a229bb2c7702b80c2" compoundref="df/d95/simd__math_8cpp" startline="253" endline="274">pyfolio::simd::rolling_sum_simd</references>
        <references refid="d0/d60/namespacepyfolio_1_1simd_1a6efc96d7ab5019459131e97046cca0a2" compoundref="df/d95/simd__math_8cpp" startline="140" endline="169">pyfolio::simd::vector_scale</references>
        <referencedby refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a260ff87f26612bf4ce898ec093717b30" compoundref="d6/d99/simd__math_8h" startline="217" endline="232">rolling_mean_simd</referencedby>
      </memberdef>
      <memberdef kind="function" id="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a71edb3412a293dbfd763198caa45f464" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double pyfolio::simd::timeseries::correlation_fast</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;x, const std::vector&lt; T &gt; &amp;y)</argsstring>
        <name>correlation_fast</name>
        <qualifiedname>pyfolio::simd::timeseries::correlation_fast</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>y</declname>
        </param>
    <requiresclause>std::floating_point&lt;T&gt;    </requiresclause>
        <briefdescription>
<para>Fast correlation calculation between two series. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" line="238" column="8" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" bodystart="238" bodyend="248"/>
        <references refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a71edb3412a293dbfd763198caa45f464" compoundref="d6/d99/simd__math_8h" startline="238" endline="248">correlation_fast</references>
        <references refid="d0/d60/namespacepyfolio_1_1simd_1af019ba74cae4a4d4555ac87c48891107" compoundref="df/d95/simd__math_8cpp" startline="323" endline="333">pyfolio::simd::correlation_simd</references>
        <referencedby refid="db/de2/namespacepyfolio_1_1simd_1_1timeseries_1a71edb3412a293dbfd763198caa45f464" compoundref="d6/d99/simd__math_8h" startline="238" endline="248">correlation_fast</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SIMD-accelerated <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref> operations. </para>
    </briefdescription>
    <detaileddescription>
<para>These functions provide drop-in replacements for common <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref> operations with automatic SIMD optimization. </para>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h" line="194" column="1"/>
  </compounddef>
</doxygen>
