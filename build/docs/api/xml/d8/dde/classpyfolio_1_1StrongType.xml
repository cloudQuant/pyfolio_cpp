<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d8/dde/classpyfolio_1_1StrongType" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::StrongType</compoundname>
    <includes refid="d9/d49/types_8h" local="no">types.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>typename Tag</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/dde/classpyfolio_1_1StrongType_1a6a3647b95e80cb81325b2012f62952f3" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T pyfolio::StrongType&lt; T, Tag &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>pyfolio::StrongType::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="92" column="7" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a5e6f6ff8282dd4881ffcf6b663401023" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>pyfolio::StrongType&lt; T, Tag &gt;::StrongType</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>StrongType</name>
        <qualifiedname>pyfolio::StrongType::StrongType</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="95" column="24" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a13b4468bf589be9590d0721d3885e822" prot="public" static="no" constexpr="yes" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>pyfolio::StrongType&lt; T, Tag &gt;::StrongType</definition>
        <argsstring>(T &amp;&amp;value)</argsstring>
        <name>StrongType</name>
        <qualifiedname>pyfolio::StrongType::StrongType</qualifiedname>
        <param>
          <type>T &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="96" column="24" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a18e86407a346699ea115f79f0f07da08" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T &amp; pyfolio::StrongType&lt; T, Tag &gt;::get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>pyfolio::StrongType::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="98" column="23" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a2dd5dbb50f0a1b70b13c0b29b16cbc01" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; pyfolio::StrongType&lt; T, Tag &gt;::get</definition>
        <argsstring>() noexcept</argsstring>
        <name>get</name>
        <qualifiedname>pyfolio::StrongType::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="99" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1aea65949ebee4df7c4acd4cbedbf604ec" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>pyfolio::StrongType&lt; T, Tag &gt;::operator const T &amp;</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator const T &amp;</name>
        <qualifiedname>pyfolio::StrongType::operator const T &amp;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="101" column="15" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a5ed1e49ea9ed1e48e8287295b83efb17" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref></type>
        <definition>StrongType pyfolio::StrongType&lt; T, Tag &gt;::operator+</definition>
        <argsstring>(const StrongType &amp;other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>pyfolio::StrongType::operator+</qualifiedname>
        <param>
          <type>const <ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref> &amp;</type>
          <declname>other</declname>
        </param>
    <requiresclause>Numeric&lt;T&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="104" column="26" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a56a0df93034f8387c69d9c4f0aa60e08" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref></type>
        <definition>StrongType pyfolio::StrongType&lt; T, Tag &gt;::operator-</definition>
        <argsstring>(const StrongType &amp;other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>pyfolio::StrongType::operator-</qualifiedname>
        <param>
          <type>const <ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref> &amp;</type>
          <declname>other</declname>
        </param>
    <requiresclause>Numeric&lt;T&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="110" column="26" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a4ed95b9c5e9d13f8c273a5a62ca8dc05" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref></type>
        <definition>StrongType pyfolio::StrongType&lt; T, Tag &gt;::operator*</definition>
        <argsstring>(const StrongType &amp;other) const</argsstring>
        <name>operator*</name>
        <qualifiedname>pyfolio::StrongType::operator*</qualifiedname>
        <param>
          <type>const <ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref> &amp;</type>
          <declname>other</declname>
        </param>
    <requiresclause>Numeric&lt;T&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="116" column="26" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a7d73e2d68c89e256b95378442ea9329d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref></type>
        <definition>StrongType pyfolio::StrongType&lt; T, Tag &gt;::operator/</definition>
        <argsstring>(const StrongType &amp;other) const</argsstring>
        <name>operator/</name>
        <qualifiedname>pyfolio::StrongType::operator/</qualifiedname>
        <param>
          <type>const <ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref> &amp;</type>
          <declname>other</declname>
        </param>
    <requiresclause>Numeric&lt;T&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="122" column="26" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a85cf0c83cac52719fcf9440198d13873" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool pyfolio::StrongType&lt; T, Tag &gt;::operator==</definition>
        <argsstring>(const StrongType &amp;other) const =default</argsstring>
        <name>operator==</name>
        <qualifiedname>pyfolio::StrongType::operator==</qualifiedname>
        <param>
          <type>const <ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="129" column="20"/>
      </memberdef>
      <memberdef kind="function" id="d8/dde/classpyfolio_1_1StrongType_1a835913bc2c08b782e3b2f582a7bb46f3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto pyfolio::StrongType&lt; T, Tag &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const StrongType &amp;other) const =default</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>pyfolio::StrongType::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="d8/dde/classpyfolio_1_1StrongType" kindref="compound">StrongType</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="130" column="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" line="90" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h" bodystart="90" bodyend="131"/>
    <listofallmembers>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a18e86407a346699ea115f79f0f07da08" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>get</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a2dd5dbb50f0a1b70b13c0b29b16cbc01" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>get</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1aea65949ebee4df7c4acd4cbedbf604ec" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator const T &amp;</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a4ed95b9c5e9d13f8c273a5a62ca8dc05" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator*</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a5ed1e49ea9ed1e48e8287295b83efb17" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator+</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a56a0df93034f8387c69d9c4f0aa60e08" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator-</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a7d73e2d68c89e256b95378442ea9329d" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator/</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a835913bc2c08b782e3b2f582a7bb46f3" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator&lt;=&gt;</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a85cf0c83cac52719fcf9440198d13873" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>operator==</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a5e6f6ff8282dd4881ffcf6b663401023" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>StrongType</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a13b4468bf589be9590d0721d3885e822" prot="public" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>StrongType</name></member>
      <member refid="d8/dde/classpyfolio_1_1StrongType_1a6a3647b95e80cb81325b2012f62952f3" prot="private" virt="non-virtual"><scope>pyfolio::StrongType</scope><name>value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
