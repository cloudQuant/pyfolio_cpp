<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d8/d00/attribution__example_8cpp" kind="file" language="C++">
    <compoundname>attribution_example.cpp</compoundname>
    <includes local="no">iomanip</includes>
    <includes local="no">iostream</includes>
    <includes refid="da/dd4/attribution_8h" local="no">pyfolio/attribution/attribution.h</includes>
    <includes refid="d7/d0c/holdings_8h" local="no">pyfolio/positions/holdings.h</includes>
    <includes refid="d3/d30/pyfolio_8h" local="no">pyfolio/pyfolio.h</includes>
    <includes refid="d0/db6/transaction_8h" local="no">pyfolio/transactions/transaction.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp</label>
        <link refid="d8/d00/attribution__example_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>pyfolio/attribution/attribution.h</label>
        <link refid="da/dd4/attribution_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../core/dataframe.h</label>
        <link refid="d2/d99/dataframe_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>datetime.h</label>
        <link refid="de/d1b/datetime_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>error_handling.h</label>
        <link refid="d3/d11/error__handling_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>time_series.h</label>
        <link refid="d8/d51/time__series_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>io/data_loader.h</label>
        <link refid="d2/db9/data__loader_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>../math/simd_math.h</label>
        <link refid="d6/d99/simd__math_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>../math/statistics.h</label>
        <link refid="d3/dbe/math_2statistics_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>performance/drawdown.h</label>
        <link refid="d8/de8/drawdown_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>performance/ratios.h</label>
        <link refid="d7/d06/ratios_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>../performance/returns.h</label>
        <link refid="d4/d73/returns_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>performance/rolling_metrics.h</label>
        <link refid="d3/d7e/rolling__metrics_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>positions/allocation.h</label>
        <link refid="d0/db7/allocation_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>../positions/holdings.h</label>
        <link refid="d7/d0c/holdings_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>pyfolio/pyfolio.h</label>
        <link refid="d3/d30/pyfolio_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>reporting/interesting_periods.h</label>
        <link refid="d2/d26/interesting__periods_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>reporting/tears.h</label>
        <link refid="d3/d66/tears_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>risk/factor_exposure.h</label>
        <link refid="d4/da5/factor__exposure_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>risk/var.h</label>
        <link refid="df/d46/var_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>transactions/round_trips.h</label>
        <link refid="d7/d00/round__trips_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>../transactions/transaction.h</label>
        <link refid="d0/db6/transaction_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>utils/validation.h</label>
        <link refid="db/d38/validation_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>../visualization/plotting.h</label>
        <link refid="d3/df8/plotting_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>any</label>
      </node>
      <node id="15">
        <label>chrono</label>
      </node>
      <node id="25">
        <label>cmath</label>
      </node>
      <node id="16">
        <label>concepts</label>
      </node>
      <node id="17">
        <label>cstddef</label>
      </node>
      <node id="18">
        <label>cstdint</label>
      </node>
      <node id="26">
        <label>deque</label>
      </node>
      <node id="8">
        <label>exception</label>
      </node>
      <node id="51">
        <label>fstream</label>
      </node>
      <node id="9">
        <label>functional</label>
      </node>
      <node id="2">
        <label>iomanip</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="27">
        <label>limits</label>
      </node>
      <node id="28">
        <label>map</label>
      </node>
      <node id="29">
        <label>numeric</label>
      </node>
      <node id="10">
        <label>optional</label>
      </node>
      <node id="45">
        <label>queue</label>
      </node>
      <node id="42">
        <label>random</label>
      </node>
      <node id="21">
        <label>set</label>
      </node>
      <node id="11">
        <label>source_location</label>
      </node>
      <node id="24">
        <label>span</label>
      </node>
      <node id="52">
        <label>sstream</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
      <node id="31">
        <label>typeindex</label>
      </node>
      <node id="48">
        <label>unordered_map</label>
      </node>
      <node id="13">
        <label>variant</label>
      </node>
      <node id="19">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp" line="8" column="5" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp" bodystart="8" bodyend="236"/>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" compoundref="d0/db6/transaction_8h" startline="184" endline="194">pyfolio::transactions::TransactionSeries::add_transaction</references>
        <references refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" compoundref="d7/d0c/holdings_8h" startline="288" endline="368">pyfolio::positions::HoldingsSeries::build_from_transactions</references>
        <references refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" compoundref="d0/db6/transaction_8h" startline="18">pyfolio::transactions::Buy</references>
        <references refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" compoundref="da/dd4/attribution_8h" startline="417" endline="484">pyfolio::attribution::AlphaBetaAnalysis::calculate</references>
        <references refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" compoundref="da/dd4/attribution_8h" startline="102" endline="156">pyfolio::attribution::BrinsonAttribution::calculate_period_attribution</references>
        <references refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1abe02229d1775f669153e6a1ab1d5f86b" compoundref="da/dd4/attribution_8h" startline="161" endline="255">pyfolio::attribution::BrinsonAttribution::calculate_sector_attribution</references>
        <references refid="d6/d4f/classpyfolio_1_1DateTime_1adfc972d8ea84c03f9a6d9eb9e661b6cd" compoundref="de/d1b/datetime_8h" startline="150" endline="173">pyfolio::DateTime::parse</references>
        <references refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1aa75ec97408cf2164bde3fdbb846d7f1f" compoundref="da/dd4/attribution_8h" startline="97" endline="97">pyfolio::attribution::BrinsonAttribution::set_sector_mapping</references>
        <references refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" compoundref="d0/db6/transaction_8h" startline="165" endline="165">pyfolio::transactions::TransactionSeries::size</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="da/dd4/attribution_8h" kindref="compound">pyfolio/attribution/attribution.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d7/d0c/holdings_8h" kindref="compound">pyfolio/positions/holdings.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d3/d30/pyfolio_8h" kindref="compound">pyfolio/pyfolio.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d0/db6/transaction_8h" kindref="compound">pyfolio/transactions/transaction.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>()<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Pyfolio_cpp<sp/>Attribution<sp/>Analysis<sp/>Example\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;=======================================\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>sample<sp/>transactions<sp/>for<sp/>attribution<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries" kindref="compound">pyfolio::transactions::TransactionSeries</ref><sp/>transactions;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>base_date<sp/>=<sp/><ref refid="d6/d4f/classpyfolio_1_1DateTime_1adfc972d8ea84c03f9a6d9eb9e661b6cd" kindref="member">pyfolio::DateTime::parse</ref>(</highlight><highlight class="stringliteral">&quot;2024-01-02&quot;</highlight><highlight class="normal">).value();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>diversified<sp/>portfolio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions.<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kindref="member">add_transaction</ref>(</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;AAPL&quot;</highlight><highlight class="normal">,<sp/>100,<sp/>150.0,<sp/>base_date,<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">pyfolio::transactions::TransactionType::Buy</ref>,<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">,<sp/>1.0});<sp/><sp/></highlight><highlight class="comment">//<sp/>Technology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions.<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kindref="member">add_transaction</ref>(</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MSFT&quot;</highlight><highlight class="normal">,<sp/>50,<sp/>300.0,<sp/>base_date,<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">pyfolio::transactions::TransactionType::Buy</ref>,<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">,<sp/>1.5});<sp/><sp/></highlight><highlight class="comment">//<sp/>Technology</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions.<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kindref="member">add_transaction</ref>({</highlight><highlight class="stringliteral">&quot;JPM&quot;</highlight><highlight class="normal">,<sp/>80,<sp/>125.0,<sp/>base_date.add_days(1),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">pyfolio::transactions::TransactionType::Buy</ref>,<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">,<sp/>1.2});<sp/><sp/></highlight><highlight class="comment">//<sp/>Financial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions.<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kindref="member">add_transaction</ref>({</highlight><highlight class="stringliteral">&quot;JNJ&quot;</highlight><highlight class="normal">,<sp/>60,<sp/>160.0,<sp/>base_date.add_days(1),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">pyfolio::transactions::TransactionType::Buy</ref>,<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">,<sp/>1.0});<sp/><sp/></highlight><highlight class="comment">//<sp/>Healthcare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions.<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a87c88f2ceb69acde774670316b66c278" kindref="member">add_transaction</ref>({</highlight><highlight class="stringliteral">&quot;XOM&quot;</highlight><highlight class="normal">,<sp/>75,<sp/>100.0,<sp/>base_date.add_days(2),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions_1a307beb383aa487c8f0d53f274f895c6fa831a28f1e8df07c553fcd59546465d13" kindref="member">pyfolio::transactions::TransactionType::Buy</ref>,<sp/></highlight><highlight class="stringliteral">&quot;USD&quot;</highlight><highlight class="normal">,<sp/>1.1});<sp/><sp/></highlight><highlight class="comment">//<sp/>Energy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Created<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>transactions.<ref refid="d6/d6e/classpyfolio_1_1transactions_1_1TransactionSeries_1a0a8d4f356e90fbde1a104eade939cb49" kindref="member">size</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sample<sp/>transactions\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>sector<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;pyfolio::Symbol,<sp/>std::string&gt;<sp/>sector_mapping<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;AAPL&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Technology&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MSFT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Technology&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;JPM&quot;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Financial&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;JNJ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Healthcare&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;XOM&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Energy&quot;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>benchmark<sp/>weights<sp/>(equal<sp/>weight<sp/>benchmark<sp/>for<sp/>simplicity)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;pyfolio::Symbol,<sp/>double&gt;<sp/>benchmark_weights<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;AAPL&quot;</highlight><highlight class="normal">,<sp/>0.20},</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MSFT&quot;</highlight><highlight class="normal">,<sp/>0.20},</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;JPM&quot;</highlight><highlight class="normal">,<sp/>0.20},</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;JNJ&quot;</highlight><highlight class="normal">,<sp/>0.20},</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;XOM&quot;</highlight><highlight class="normal">,<sp/>0.20}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>security<sp/>returns<sp/>for<sp/>the<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;pyfolio::Symbol,<sp/>double&gt;<sp/>security_returns<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;AAPL&quot;</highlight><highlight class="normal">,<sp/><sp/>0.05},<sp/></highlight><highlight class="comment">//<sp/>5%<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;MSFT&quot;</highlight><highlight class="normal">,<sp/><sp/>0.03},<sp/></highlight><highlight class="comment">//<sp/>3%<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;JPM&quot;</highlight><highlight class="normal">,<sp/><sp/>0.02},<sp/></highlight><highlight class="comment">//<sp/>2%<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;JNJ&quot;</highlight><highlight class="normal">,<sp/><sp/>0.01},<sp/></highlight><highlight class="comment">//<sp/>1%<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;XOM&quot;</highlight><highlight class="normal">,<sp/>-0.02}<sp/><sp/></highlight><highlight class="comment">//<sp/>-2%<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>price<sp/>data<sp/>for<sp/>holdings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;pyfolio::Symbol,<sp/>pyfolio::PriceSeries&gt;<sp/>price_data;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>[symbol,<sp/>initial_return]<sp/>:<sp/>security_returns)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;pyfolio::DateTime&gt;<sp/>dates;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;pyfolio::Price&gt;<sp/>prices;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>price<sp/>series<sp/>showing<sp/>the<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dates.push_back(base_date);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dates.push_back(base_date.add_days(30));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initial_price<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;AAPL&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_price<sp/>=<sp/>150.0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MSFT&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_price<sp/>=<sp/>300.0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;JPM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_price<sp/>=<sp/>125.0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;JNJ&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_price<sp/>=<sp/>160.0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;XOM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial_price<sp/>=<sp/>100.0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prices.push_back(initial_price);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prices.push_back(initial_price<sp/>*<sp/>(1.0<sp/>+<sp/>initial_return));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>price_data[symbol]<sp/>=<sp/><ref refid="d7/df8/namespacepyfolio_1ae16d3b363148718e3144bbe31e9d4a83" kindref="member">pyfolio::PriceSeries</ref>{dates,<sp/>prices,<sp/>symbol};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>holdings<sp/>from<sp/>transactions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>holdings_result<sp/>=<sp/><ref refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1ab1a252e2af660f9a3a5bf71719cd7fde" kindref="member">pyfolio::positions::HoldingsSeries::build_from_transactions</ref>(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transactions,<sp/>price_data,<sp/>50000.0);<sp/><sp/></highlight><highlight class="comment">//<sp/>$50k<sp/>initial<sp/>cash</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!holdings_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>building<sp/>holdings:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>holdings_result.error().to_string()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>holdings_series<sp/>=<sp/>holdings_result.value();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(holdings_series.size()<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Need<sp/>at<sp/>least<sp/>2<sp/>holdings<sp/>snapshots<sp/>for<sp/>attribution\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>attribution<sp/>analyzer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution" kindref="compound">pyfolio::attribution::BrinsonAttribution</ref><sp/>attribution_analyzer;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribution_analyzer.<ref refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1aa75ec97408cf2164bde3fdbb846d7f1f" kindref="member">set_sector_mapping</ref>(sector_mapping);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attribution<sp/>Analysis<sp/>Results:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;============================\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>period<sp/>attribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>start_holdings<sp/>=<sp/>holdings_series.front();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>end_holdings<sp/><sp/><sp/>=<sp/>holdings_series.back();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>attribution_result<sp/>=<sp/>attribution_analyzer.<ref refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" kindref="member">calculate_period_attribution</ref>(</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_holdings,<sp/>end_holdings,<sp/>benchmark_weights,<sp/>security_returns);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(attribution_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>attr<sp/>=<sp/>attribution_result.value();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Overall<sp/>Attribution<sp/>Results:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Portfolio<sp/>Return:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(attr.portfolio_return<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Benchmark<sp/>Return:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(attr.benchmark_return<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Active<sp/>Return:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(attr.active_return<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attribution<sp/>Effects:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Allocation<sp/>Effect:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(attr.allocation_effect<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Selection<sp/>Effect:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(attr.selection_effect<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Interaction<sp/>Effect:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(attr.interaction_effect<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total<sp/>Effect:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(attr.total_effect<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attribution<sp/>Consistency:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(attr.is_consistent()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;PASS&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>calculating<sp/>attribution:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>attribution_result.error().to_string()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>sector-level<sp/>attribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sector_attribution_result<sp/>=</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribution_analyzer.<ref refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1abe02229d1775f669153e6a1ab1d5f86b" kindref="member">calculate_sector_attribution</ref>(start_holdings,<sp/>benchmark_weights,<sp/>security_returns);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sector_attribution_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>sector_results<sp/>=<sp/>sector_attribution_result.value();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sector<sp/>Attribution<sp/>Analysis:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(12)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sector&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(8)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Port<sp/>Wt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(9)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Bench<sp/>Wt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(9)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Port<sp/>Ret&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(10)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Bench<sp/>Ret&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(8)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Alloc&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(8)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Select&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(9)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Interact&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setw(8)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Total&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::string(80,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>sector<sp/>:<sp/>sector_results)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::left<sp/>&lt;&lt;<sp/>std::setw(12)<sp/>&lt;&lt;<sp/>sector.sector<sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(7)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(sector.portfolio_weight<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(8)<sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(sector.benchmark_weight<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(8)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(sector.portfolio_return<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(9)<sp/>&lt;&lt;<sp/>std::setprecision(1)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(sector.benchmark_return<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(7)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(sector.allocation_effect<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(7)<sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(sector.selection_effect<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(8)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(sector.interaction_effect<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::right<sp/>&lt;&lt;<sp/>std::setw(7)<sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(sector.total_contribution<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>calculating<sp/>sector<sp/>attribution:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sector_attribution_result.error().to_string()</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alpha/Beta<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Alpha/Beta<sp/>Analysis:\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis" kindref="compound">pyfolio::attribution::AlphaBetaAnalysis</ref><sp/>alpha_beta_analyzer;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>return<sp/>series<sp/>for<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>monthly_port_returns<sp/><sp/>=<sp/>{0.02,<sp/>-0.01,<sp/>0.03,<sp/><sp/>0.01,<sp/>-0.02,<sp/>0.04,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.01,<sp/>0.02,<sp/><sp/>-0.01,<sp/>0.03,<sp/>0.01,<sp/><sp/>0.02};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>monthly_bench_returns<sp/>=<sp/>{0.015,<sp/>-0.005,<sp/>0.025,<sp/><sp/>0.005,<sp/>-0.015,<sp/>0.035,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.005,<sp/>0.015,<sp/><sp/>-0.005,<sp/>0.025,<sp/>0.005,<sp/><sp/>0.015};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>monthly<sp/>dates<sp/>for<sp/>the<sp/>return<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;pyfolio::DateTime&gt;<sp/>monthly_dates;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>12;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>monthly_dates.push_back(base_date.add_months(i));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>TimeSeries<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1a3376bad8167ed5bb04f22ab12dda9446" kindref="member">pyfolio::ReturnSeries</ref><sp/>portfolio_returns(monthly_dates,<sp/>monthly_port_returns,<sp/></highlight><highlight class="stringliteral">&quot;Portfolio&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d7/df8/namespacepyfolio_1a3376bad8167ed5bb04f22ab12dda9446" kindref="member">pyfolio::ReturnSeries</ref><sp/>benchmark_returns(monthly_dates,<sp/>monthly_bench_returns,<sp/></highlight><highlight class="stringliteral">&quot;Benchmark&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>alpha_beta_result<sp/>=<sp/>alpha_beta_analyzer.<ref refid="d9/dc2/classpyfolio_1_1attribution_1_1AlphaBetaAnalysis_1aa1a010f21d746f4b5ca020320a4ad529" kindref="member">calculate</ref>(portfolio_returns,<sp/>benchmark_returns,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.02<sp/>/<sp/>12.0);<sp/><sp/></highlight><highlight class="comment">//<sp/>2%<sp/>annual<sp/>risk-free<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha_beta_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>ab_result<sp/>=<sp/>alpha_beta_result.value();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Alpha<sp/>(monthly):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(4)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(ab_result.alpha<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Alpha<sp/>(annualized):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(ab_result.alpha<sp/>*<sp/>12.0<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Beta:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(3)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>ab_result.beta<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;R-squared:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(3)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>ab_result.r_squared<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tracking<sp/>Error<sp/>(monthly):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(ab_result.tracking_error<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Tracking<sp/>Error<sp/>(annualized):<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(ab_result.tracking_error<sp/>*<sp/>std::sqrt(12.0)<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Information<sp/>Ratio:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(3)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>ab_result.information_ratio</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Systematic<sp/>Risk:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(ab_result.systematic_risk<sp/>*<sp/>100.0)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Specific<sp/>Risk:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::setprecision(2)<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>(ab_result.specific_risk<sp/>*<sp/>100.0)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>calculating<sp/>alpha/beta:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>alpha_beta_result.error().to_string()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Attribution<sp/>analysis<sp/>completed<sp/>successfully!\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::exception&amp;<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Exception:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp"/>
  </compounddef>
</doxygen>
