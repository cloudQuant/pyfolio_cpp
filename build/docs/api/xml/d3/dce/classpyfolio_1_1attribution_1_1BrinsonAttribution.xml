<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution" kind="class" language="C++" prot="public">
    <compoundname>pyfolio::attribution::BrinsonAttribution</compoundname>
    <includes refid="da/dd4/attribution_8h" local="no">attribution.h</includes>
    <innerclass refid="d0/dda/structpyfolio_1_1attribution_1_1BrinsonAttribution_1_1AttributionEffects" prot="private">pyfolio::attribution::BrinsonAttribution::AttributionEffects</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a0456843543ff4e9f71a9297a6e58b217" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, std::string &gt;</type>
        <definition>std::map&lt;Symbol, std::string&gt; pyfolio::attribution::BrinsonAttribution::symbol_to_sector_</definition>
        <argsstring></argsstring>
        <name>symbol_to_sector_</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::symbol_to_sector_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="91" column="14" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1aa75ec97408cf2164bde3fdbb846d7f1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pyfolio::attribution::BrinsonAttribution::set_sector_mapping</definition>
        <argsstring>(const std::map&lt; Symbol, std::string &gt; &amp;mapping)</argsstring>
        <name>set_sector_mapping</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::set_sector_mapping</qualifiedname>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, std::string &gt; &amp;</type>
          <declname>mapping</declname>
        </param>
        <briefdescription>
<para>Set sector mapping for securities. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="97" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="97" bodyend="97"/>
        <referencedby refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d8/d00/attribution__example_8cpp" startline="8" endline="236">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="d3/df5/structpyfolio_1_1attribution_1_1AttributionResult" kindref="compound">AttributionResult</ref> &gt;</type>
        <definition>Result&lt; AttributionResult &gt; pyfolio::attribution::BrinsonAttribution::calculate_period_attribution</definition>
        <argsstring>(const positions::PortfolioHoldings &amp;portfolio_start, const positions::PortfolioHoldings &amp;portfolio_end, const std::map&lt; Symbol, double &gt; &amp;benchmark_weights, const std::map&lt; Symbol, double &gt; &amp;security_returns) const</argsstring>
        <name>calculate_period_attribution</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::calculate_period_attribution</qualifiedname>
        <param>
          <type>const <ref refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings" kindref="compound">positions::PortfolioHoldings</ref> &amp;</type>
          <declname>portfolio_start</declname>
        </param>
        <param>
          <type>const <ref refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings" kindref="compound">positions::PortfolioHoldings</ref> &amp;</type>
          <declname>portfolio_end</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &amp;</type>
          <declname>benchmark_weights</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &amp;</type>
          <declname>security_returns</declname>
        </param>
        <briefdescription>
<para>Calculate attribution for a single period. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="102" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="102" bodyend="156"/>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a315a3a6f55a4101a289ab1bf2003762a" compoundref="d7/d0c/holdings_8h" startline="67" endline="67">pyfolio::positions::PortfolioHoldings::holdings</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" compoundref="d3/d11/error__handling_8h" startline="17">pyfolio::InvalidInput</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a024425899ff9486a38f8a209c4369924" compoundref="d7/d0c/holdings_8h" startline="66" endline="66">pyfolio::positions::PortfolioHoldings::total_value</references>
        <referencedby refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" compoundref="da/dd4/attribution_8h" startline="260" endline="338">calculate_multi_period_attribution</referencedby>
        <referencedby refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d8/d00/attribution__example_8cpp" startline="8" endline="236">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1abe02229d1775f669153e6a1ab1d5f86b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; std::vector&lt; <ref refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution" kindref="compound">SectorAttribution</ref> &gt; &gt;</type>
        <definition>Result&lt; std::vector&lt; SectorAttribution &gt; &gt; pyfolio::attribution::BrinsonAttribution::calculate_sector_attribution</definition>
        <argsstring>(const positions::PortfolioHoldings &amp;portfolio, const std::map&lt; Symbol, double &gt; &amp;benchmark_weights, const std::map&lt; Symbol, double &gt; &amp;security_returns) const</argsstring>
        <name>calculate_sector_attribution</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::calculate_sector_attribution</qualifiedname>
        <param>
          <type>const <ref refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings" kindref="compound">positions::PortfolioHoldings</ref> &amp;</type>
          <declname>portfolio</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &amp;</type>
          <declname>benchmark_weights</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &amp;</type>
          <declname>security_returns</declname>
        </param>
        <briefdescription>
<para>Calculate sector-level attribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="161" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="161" bodyend="255"/>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a0ce78d884eca80e9bf40fb0b407494de" compoundref="da/dd4/attribution_8h" startline="46">pyfolio::attribution::SectorAttribution::allocation_effect</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a3e3a02ca2f856f3286bcaf9b8cb2650e" compoundref="da/dd4/attribution_8h" startline="45">pyfolio::attribution::SectorAttribution::benchmark_return</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a3ff23f7ec30f31ce9d1800097993cc65" compoundref="da/dd4/attribution_8h" startline="43">pyfolio::attribution::SectorAttribution::benchmark_weight</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a0d055a35906794c27b9136229a063a65" compoundref="d7/d0c/holdings_8h" startline="111" endline="117">pyfolio::positions::PortfolioHoldings::get_holding</references>
        <references refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings_1a315a3a6f55a4101a289ab1bf2003762a" compoundref="d7/d0c/holdings_8h" startline="67" endline="67">pyfolio::positions::PortfolioHoldings::holdings</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1ac50e54bafe801c481c2601c856238872" compoundref="da/dd4/attribution_8h" startline="48">pyfolio::attribution::SectorAttribution::interaction_effect</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a34b70828f7c81195b8cbe94cfbfb3896" compoundref="da/dd4/attribution_8h" startline="44">pyfolio::attribution::SectorAttribution::portfolio_return</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a606a6cedb46d043b756ca9597559c4b4" compoundref="da/dd4/attribution_8h" startline="42">pyfolio::attribution::SectorAttribution::portfolio_weight</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1a43b34f11cd5e42310368439b82b7cbec" compoundref="da/dd4/attribution_8h" startline="41">pyfolio::attribution::SectorAttribution::sector</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1ac434f3b0290e09dccec73f1af6ba0431" compoundref="da/dd4/attribution_8h" startline="47">pyfolio::attribution::SectorAttribution::selection_effect</references>
        <references refid="d6/dcd/structpyfolio_1_1attribution_1_1SectorAttribution_1ad5d7458f9910c785d6cd1df8425d492e" compoundref="da/dd4/attribution_8h" startline="49">pyfolio::attribution::SectorAttribution::total_contribution</references>
        <referencedby refid="d8/d00/attribution__example_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="d8/d00/attribution__example_8cpp" startline="8" endline="236">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; <ref refid="da/deb/classpyfolio_1_1DataFrame" kindref="compound">DataFrame</ref> &gt;</type>
        <definition>Result&lt; DataFrame &gt; pyfolio::attribution::BrinsonAttribution::calculate_multi_period_attribution</definition>
        <argsstring>(const positions::HoldingsSeries &amp;holdings_series, const std::map&lt; DateTime, std::map&lt; Symbol, double &gt; &gt; &amp;benchmark_weights_series, const std::map&lt; Symbol, TimeSeries&lt; double &gt; &gt; &amp;return_series) const</argsstring>
        <name>calculate_multi_period_attribution</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::calculate_multi_period_attribution</qualifiedname>
        <param>
          <type>const <ref refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries" kindref="compound">positions::HoldingsSeries</ref> &amp;</type>
          <declname>holdings_series</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d6/d4f/classpyfolio_1_1DateTime" kindref="compound">DateTime</ref>, std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &gt; &amp;</type>
          <declname>benchmark_weights_series</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, <ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt; double &gt; &gt; &amp;</type>
          <declname>return_series</declname>
        </param>
        <briefdescription>
<para>Calculate multi-period attribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="260" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="260" bodyend="338"/>
        <references refid="da/deb/classpyfolio_1_1DataFrame_1ae16ceddcf917845c49128783794c109e" compoundref="d2/d99/dataframe_8h" startline="88" endline="101">pyfolio::DataFrame::add_column</references>
        <references refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" compoundref="da/dd4/attribution_8h" startline="102" endline="156">calculate_period_attribution</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" compoundref="d3/d11/error__handling_8h" startline="111" endline="116">pyfolio::Result&lt; T &gt;::error</references>
        <references refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9a9e32e294e8358345f2b9b52b7f8b41fa" compoundref="d3/d11/error__handling_8h" startline="18">pyfolio::InsufficientData</references>
        <references refid="d0/d02/classpyfolio_1_1positions_1_1HoldingsSeries_1aa339b863f39735db8959a933074a432e" compoundref="d7/d0c/holdings_8h" startline="247" endline="247">pyfolio::positions::HoldingsSeries::size</references>
        <references refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" compoundref="d3/d11/error__handling_8h" startline="74" endline="74">pyfolio::Result&lt; T &gt;::success</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ab5332976a407048ae55edc6889681347" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string pyfolio::attribution::BrinsonAttribution::get_symbol_sector</definition>
        <argsstring>(const Symbol &amp;symbol) const</argsstring>
        <name>get_symbol_sector</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::get_symbol_sector</qualifiedname>
        <param>
          <type>const <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref> &amp;</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="341" column="17" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="341" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a92e565515ba88f2fc823fcb6057566b7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result</ref>&lt; AttributionEffects &gt;</type>
        <definition>Result&lt; AttributionEffects &gt; pyfolio::attribution::BrinsonAttribution::calculate_attribution_effects</definition>
        <argsstring>(const positions::PortfolioHoldings &amp;portfolio, const std::map&lt; Symbol, double &gt; &amp;benchmark_weights, const std::map&lt; Symbol, double &gt; &amp;security_returns) const</argsstring>
        <name>calculate_attribution_effects</name>
        <qualifiedname>pyfolio::attribution::BrinsonAttribution::calculate_attribution_effects</qualifiedname>
        <param>
          <type>const <ref refid="dc/dbf/classpyfolio_1_1positions_1_1PortfolioHoldings" kindref="compound">positions::PortfolioHoldings</ref> &amp;</type>
          <declname>portfolio</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &amp;</type>
          <declname>benchmark_weights</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="d7/df8/namespacepyfolio_1a66e3e2ebe494a9dccbeb419408aaf7ea" kindref="member">Symbol</ref>, double &gt; &amp;</type>
          <declname>security_returns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="352" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="352" bodyend="395"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Brinson-Hood-Beebower attribution model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" line="89" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/attribution/attribution.h" bodystart="89" bodyend="396"/>
    <listofallmembers>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a92e565515ba88f2fc823fcb6057566b7" prot="private" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>calculate_attribution_effects</name></member>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a26103570130f728535e2998cbc546928" prot="public" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>calculate_multi_period_attribution</name></member>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ae8d771d6eab90379e4b81fb06e30eab7" prot="public" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>calculate_period_attribution</name></member>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1abe02229d1775f669153e6a1ab1d5f86b" prot="public" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>calculate_sector_attribution</name></member>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1ab5332976a407048ae55edc6889681347" prot="private" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>get_symbol_sector</name></member>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1aa75ec97408cf2164bde3fdbb846d7f1f" prot="public" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>set_sector_mapping</name></member>
      <member refid="d3/dce/classpyfolio_1_1attribution_1_1BrinsonAttribution_1a0456843543ff4e9f71a9297a6e58b217" prot="private" virt="non-virtual"><scope>pyfolio::attribution::BrinsonAttribution</scope><name>symbol_to_sector_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
