<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig" kind="struct" language="C++" prot="public">
    <compoundname>pyfolio::parallel::ParallelConfig</compoundname>
    <includes refid="d9/d36/parallel__algorithms_8h" local="no">parallel_algorithms.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a3d74802291042117f504164059959889" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::parallel::ParallelConfig::max_threads</definition>
        <argsstring></argsstring>
        <name>max_threads</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::max_threads</qualifiedname>
        <initializer>= std::thread::hardware_concurrency()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="34" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a7aba9ff6fb77c6873bf72c0875e845f6" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::parallel::ParallelConfig::min_chunk_size</definition>
        <argsstring></argsstring>
        <name>min_chunk_size</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::min_chunk_size</qualifiedname>
        <initializer>= 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="35" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1ae6da3878588bf110f50d7e0f17294597" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::parallel::ParallelConfig::chunk_size_factor</definition>
        <argsstring></argsstring>
        <name>chunk_size_factor</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::chunk_size_factor</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="36" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1aebb7407d3ed1a4be58830e89c9fe3ed0" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool pyfolio::parallel::ParallelConfig::enable_vectorization</definition>
        <argsstring></argsstring>
        <name>enable_vectorization</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::enable_vectorization</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="37" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a156c389a8863e3a284d5a092c8c81998" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool pyfolio::parallel::ParallelConfig::adaptive_chunking</definition>
        <argsstring></argsstring>
        <name>adaptive_chunking</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::adaptive_chunking</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="38" column="10" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1ab7e168a26862d921a812188ec62198f6" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t pyfolio::parallel::ParallelConfig::parallel_threshold</definition>
        <argsstring></argsstring>
        <name>parallel_threshold</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::parallel_threshold</qualifiedname>
        <initializer>= 10000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="41" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a2eeb8828b4a98b8c96cc510196797900" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double pyfolio::parallel::ParallelConfig::cpu_utilization_target</definition>
        <argsstring></argsstring>
        <name>cpu_utilization_target</name>
        <qualifiedname>pyfolio::parallel::ParallelConfig::cpu_utilization_target</qualifiedname>
        <initializer>= 0.8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="42" column="12" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Parallel processing configuration. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" line="33" column="1" bodyfile="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/parallel/parallel_algorithms.h" bodystart="33" bodyend="43"/>
    <listofallmembers>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a156c389a8863e3a284d5a092c8c81998" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>adaptive_chunking</name></member>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1ae6da3878588bf110f50d7e0f17294597" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>chunk_size_factor</name></member>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a2eeb8828b4a98b8c96cc510196797900" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>cpu_utilization_target</name></member>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1aebb7407d3ed1a4be58830e89c9fe3ed0" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>enable_vectorization</name></member>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a3d74802291042117f504164059959889" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>max_threads</name></member>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1a7aba9ff6fb77c6873bf72c0875e845f6" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>min_chunk_size</name></member>
      <member refid="d3/de7/structpyfolio_1_1parallel_1_1ParallelConfig_1ab7e168a26862d921a812188ec62198f6" prot="public" virt="non-virtual"><scope>pyfolio::parallel::ParallelConfig</scope><name>parallel_threshold</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
