<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="d3/d66/tears_8h" kind="file" language="C++">
    <compoundname>tears.h</compoundname>
    <includes refid="d8/d51/time__series_8h" local="yes">../core/time_series.h</includes>
    <includes refid="d9/d49/types_8h" local="yes">../core/types.h</includes>
    <includes refid="d8/de8/drawdown_8h" local="yes">../performance/drawdown.h</includes>
    <includes refid="d7/d06/ratios_8h" local="yes">../performance/ratios.h</includes>
    <includes refid="d4/d73/returns_8h" local="yes">../performance/returns.h</includes>
    <includes refid="d7/d0c/holdings_8h" local="yes">../positions/holdings.h</includes>
    <includes refid="df/d46/var_8h" local="yes">../risk/var.h</includes>
    <includes refid="d0/db6/transaction_8h" local="yes">../transactions/transaction.h</includes>
    <includes refid="d3/df8/plotting_8h" local="yes">../visualization/plotting.h</includes>
    <includes local="no">functional</includes>
    <includes local="no">optional</includes>
    <includes local="no">string</includes>
    <includedby refid="d3/d30/pyfolio_8h" local="yes">/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/pyfolio.h</includedby>
    <incdepgraph>
      <node id="31">
        <label>../core/dataframe.h</label>
        <link refid="d2/d99/dataframe_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>datetime.h</label>
        <link refid="de/d1b/datetime_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>error_handling.h</label>
        <link refid="d3/d11/error__handling_8h"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../core/time_series.h</label>
        <link refid="d8/d51/time__series_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>../core/types.h</label>
        <link refid="d9/d49/types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../math/simd_math.h</label>
        <link refid="d6/d99/simd__math_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>../math/statistics.h</label>
        <link refid="d3/dbe/math_2statistics_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>../performance/drawdown.h</label>
        <link refid="d8/de8/drawdown_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>../performance/ratios.h</label>
        <link refid="d7/d06/ratios_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>returns.h</label>
        <link refid="d4/d73/returns_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>../performance/rolling_metrics.h</label>
        <link refid="d3/d7e/rolling__metrics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>../positions/holdings.h</label>
        <link refid="d7/d0c/holdings_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/reporting/tears.h</label>
        <link refid="d3/d66/tears_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>../risk/var.h</label>
        <link refid="df/d46/var_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>../transactions/transaction.h</label>
        <link refid="d0/db6/transaction_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>../visualization/plotting.h</label>
        <link refid="d3/df8/plotting_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
      <node id="32">
        <label>any</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="21">
        <label>cmath</label>
      </node>
      <node id="6">
        <label>concepts</label>
      </node>
      <node id="7">
        <label>cstddef</label>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="22">
        <label>deque</label>
      </node>
      <node id="15">
        <label>exception</label>
      </node>
      <node id="39">
        <label>fstream</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="23">
        <label>limits</label>
      </node>
      <node id="24">
        <label>map</label>
      </node>
      <node id="25">
        <label>numeric</label>
      </node>
      <node id="17">
        <label>optional</label>
      </node>
      <node id="36">
        <label>random</label>
      </node>
      <node id="20">
        <label>set</label>
      </node>
      <node id="18">
        <label>source_location</label>
      </node>
      <node id="12">
        <label>span</label>
      </node>
      <node id="40">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="33">
        <label>typeindex</label>
      </node>
      <node id="41">
        <label>unordered_map</label>
      </node>
      <node id="19">
        <label>variant</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/attribution_example.cpp</label>
        <link refid="d8/d00/attribution__example_8cpp"/>
      </node>
      <node id="4">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/basic_example.cpp</label>
        <link refid="d3/d6a/basic__example_8cpp"/>
      </node>
      <node id="5">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/bayesian_analysis_example.cpp</label>
        <link refid="da/d7c/bayesian__analysis__example_8cpp"/>
      </node>
      <node id="6">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/capacity_analysis_example.cpp</label>
        <link refid="d1/db6/capacity__analysis__example_8cpp"/>
      </node>
      <node id="7">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/risk_analysis_example.cpp</label>
        <link refid="db/dc6/risk__analysis__example_8cpp"/>
      </node>
      <node id="8">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/examples/transaction_analysis_example.cpp</label>
        <link refid="d7/d56/transaction__analysis__example_8cpp"/>
      </node>
      <node id="2">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/pyfolio.h</label>
        <link refid="d3/d30/pyfolio_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/reporting/tears.h</label>
        <link refid="d3/d66/tears_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" prot="public">pyfolio::reporting::TearSheetConfig</innerclass>
    <innerclass refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult" prot="public">pyfolio::reporting::TearSheetResult</innerclass>
    <innerclass refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary" prot="public">pyfolio::reporting::TearSheetResult::PerformanceSummary</innerclass>
    <innernamespace refid="d7/df8/namespacepyfolio">pyfolio</innernamespace>
    <innernamespace refid="d7/d68/namespacepyfolio_1_1reporting">pyfolio::reporting</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/d51/time__series_8h" kindref="compound">../core/time_series.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d49/types_8h" kindref="compound">../core/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/de8/drawdown_8h" kindref="compound">../performance/drawdown.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d06/ratios_8h" kindref="compound">../performance/ratios.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d4/d73/returns_8h" kindref="compound">../performance/returns.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d0c/holdings_8h" kindref="compound">../positions/holdings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d46/var_8h" kindref="compound">../risk/var.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/db6/transaction_8h" kindref="compound">../transactions/transaction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/df8/plotting_8h" kindref="compound">../visualization/plotting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d7/df8/namespacepyfolio" kindref="compound">pyfolio</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d7/d68/namespacepyfolio_1_1reporting" kindref="compound">reporting</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref><sp/>{</highlight></codeline>
<codeline lineno="23" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a51b2f3b26bc39e3ed52237948142c7e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a51b2f3b26bc39e3ed52237948142c7e6" kindref="member">show_plots</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a895394099f268e428a39e8ae8e2be802" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a895394099f268e428a39e8ae8e2be802" kindref="member">save_plots</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5a53d80ecbf30fce8a35da55afbcb338" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5a53d80ecbf30fce8a35da55afbcb338" kindref="member">output_directory</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;./tear_sheets/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a2ebf5cc342300c59893ced3dfe5b8962" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a2ebf5cc342300c59893ced3dfe5b8962" kindref="member">output_format</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;png&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>png,<sp/>pdf,<sp/>svg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a9b292e20966ec5ba05cc066ea8e50e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a9b292e20966ec5ba05cc066ea8e50e7b" kindref="member">figure_dpi</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>150;</highlight></codeline>
<codeline lineno="28" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1adcd648e0bcda9ab74265124382baa8e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1adcd648e0bcda9ab74265124382baa8e0" kindref="member">verbose</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Performance<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ae6b30d7795d62d570d2d096f339c5392" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ae6b30d7795d62d570d2d096f339c5392" kindref="member">periods_per_year</ref><sp/><sp/>=<sp/>252;<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>daily<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1abcf428add5d7da5ea05bcbf6e61333b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1abcf428add5d7da5ea05bcbf6e61333b2" kindref="member">risk_free_rate</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Statistical<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a9ebff0223aad5ed5c2a073f80b2249e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a9ebff0223aad5ed5c2a073f80b2249e7" kindref="member">cone_std</ref><sp/>=<sp/>{1.0,<sp/>1.5,<sp/>2.0};</highlight></codeline>
<codeline lineno="36" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5e595df60f5ca39ab10957f12a6d9721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5e595df60f5ca39ab10957f12a6d9721" kindref="member">bootstrap</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5c68e5168c40f762c13b2a5bb1ae864b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a5c68e5168c40f762c13b2a5bb1ae864b" kindref="member">bootstrap_samples</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Risk<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1add8d4ba42a36897c089424be090a0129" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1add8d4ba42a36897c089424be090a0129" kindref="member">var_confidence_level</ref><sp/>=<sp/>0.95;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Position<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a216b745c2d757b99a03118a05202413d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a216b745c2d757b99a03118a05202413d" kindref="member">hide_positions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ab18485d1eed78069b9f4cf54877abd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ab18485d1eed78069b9f4cf54877abd6f" kindref="member">positions_in_dollars</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transaction<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ac75c445a6796f61b0044018f89af5f56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ac75c445a6796f61b0044018f89af5f56" kindref="member">include_transaction_costs</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a71cc0e6547f9b8c7fdcd24cf9ae1926b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a71cc0e6547f9b8c7fdcd24cf9ae1926b" kindref="member">default_slippage_bps</ref><sp/><sp/><sp/><sp/>=<sp/>10.0;<sp/><sp/></highlight><highlight class="comment">//<sp/>basis<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>trip<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1aa3175462d6934b551beca0da5ba6db5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1aa3175462d6934b551beca0da5ba6db5c" kindref="member">analyze_round_trips</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bayesian<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ab8ac8869461b58ba54861a623d3984d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ab8ac8869461b58ba54861a623d3984d6" kindref="member">include_bayesian</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a7234753188000afa0b25859fac4840bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a7234753188000afa0b25859fac4840bb" kindref="member">mcmc_samples</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Factor<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ad5cd4e8720627e094167f49df6c358e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ad5cd4e8720627e094167f49df6c358e0" kindref="member">include_factor_analysis</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Capacity<sp/>analysis<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ad6ff94b4661bb487be58a2e79cc0b00d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1ad6ff94b4661bb487be58a2e79cc0b00d" kindref="member">include_capacity_analysis</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>period<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a7013ec22d29e0dcf5c958bf924806cad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;DateTime&gt;<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1a7013ec22d29e0dcf5c958bf924806cad" kindref="member">live_start_date</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Benchmark<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1adfcefa25da0e45f4bc6acdd307483b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1adfcefa25da0e45f4bc6acdd307483b8a" kindref="member">compare_to_benchmark</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult" kindref="compound">TearSheetResult</ref><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Summary<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary" kindref="compound">PerformanceSummary</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ab4b618173c3cfa6a39578cdd3720b5f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ab4b618173c3cfa6a39578cdd3720b5f0" kindref="member">total_return</ref>;</highlight></codeline>
<codeline lineno="77" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a2eec1ff15d47cfb19cf02e60e8bc6e21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a2eec1ff15d47cfb19cf02e60e8bc6e21" kindref="member">annual_return</ref>;</highlight></codeline>
<codeline lineno="78" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6c5d0224bd93f03335ad6e6665a761b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6c5d0224bd93f03335ad6e6665a761b4" kindref="member">annual_volatility</ref>;</highlight></codeline>
<codeline lineno="79" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1afd208ddaf20d66eb8e573aba03c1bd0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1afd208ddaf20d66eb8e573aba03c1bd0d" kindref="member">sharpe_ratio</ref>;</highlight></codeline>
<codeline lineno="80" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a54f925bf1a9afcf4db0db2fa962ad872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a54f925bf1a9afcf4db0db2fa962ad872" kindref="member">sortino_ratio</ref>;</highlight></codeline>
<codeline lineno="81" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa93b7cc6b807d1d02970b7560669055e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa93b7cc6b807d1d02970b7560669055e" kindref="member">max_drawdown</ref>;</highlight></codeline>
<codeline lineno="82" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa8f6e8acc5031b9fd80af74fbad37be0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa8f6e8acc5031b9fd80af74fbad37be0" kindref="member">calmar_ratio</ref>;</highlight></codeline>
<codeline lineno="83" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a8e12aad10f555158dadea14e5f4b5b8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a8e12aad10f555158dadea14e5f4b5b8a" kindref="member">omega_ratio</ref>;</highlight></codeline>
<codeline lineno="84" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ae61b4834953dbb1a4c7e11a523279e7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ae61b4834953dbb1a4c7e11a523279e7a" kindref="member">skewness</ref>;</highlight></codeline>
<codeline lineno="85" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ac8122816c643d8cfbde848c1c04d0574" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ac8122816c643d8cfbde848c1c04d0574" kindref="member">kurtosis</ref>;</highlight></codeline>
<codeline lineno="86" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a0479796f98b7be4cd19e0517251c240b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a0479796f98b7be4cd19e0517251c240b" kindref="member">tail_ratio</ref>;</highlight></codeline>
<codeline lineno="87" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a12860d372ce266b2bb06ea53c0efd631" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a12860d372ce266b2bb06ea53c0efd631" kindref="member">value_at_risk</ref>;</highlight></codeline>
<codeline lineno="88" refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6cb8533f9f82ec86b68d282323d211fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6cb8533f9f82ec86b68d282323d211fc" kindref="member">conditional_value_at_risk</ref>;</highlight></codeline>
<codeline lineno="89" refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="d8/dd9/namespacepyfolio_1_1performance" kindref="compound">performance</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generated<sp/>plots</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a9c495cc337c46c9efb212e1bf0e1b704" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a9c495cc337c46c9efb212e1bf0e1b704" kindref="member">plot_paths</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HTML<sp/>report<sp/>path<sp/>(if<sp/>generated)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1ab3e97983ed855e5f43acb836767fc9f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;std::string&gt;<sp/><ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1ab3e97983ed855e5f43acb836767fc9f2" kindref="member">html_report_path</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warnings<sp/>and<sp/>notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a084ad97e24846cf5adfa062327eecad1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/><ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a084ad97e24846cf5adfa062327eecad1" kindref="member">warnings</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Timing<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1abb40d595e5a0b5f5642be16690015c1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1abb40d595e5a0b5f5642be16690015c1c" kindref="member">generation_time_seconds</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1aac9c6c66a273fe37313f67bd6bd67903" kindref="member">create_full_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;Transaction&gt;&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TearSheetConfig&amp;<sp/>config<sp/>=<sp/>TearSheetConfig{});</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">Result&lt;TearSheetResult&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a14f0f60fc91109a6adab9785c92632eb" kindref="member">create_returns_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;Return&gt;&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;TimeSeries&lt;Return&gt;&gt;&amp;<sp/>benchmark_returns<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TearSheetConfig&amp;<sp/>config<sp/>=<sp/>TearSheetConfig{});</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">Result&lt;TearSheetResult&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a31cb157f7b3fd4e572b2f62db5308edd" kindref="member">create_position_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;Return&gt;&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/>positions,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">Result&lt;TearSheetResult&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a8ccd9b1e38e0190c91d5d06595b486fa" kindref="member">create_txn_tear_sheet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;Return&gt;&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/>positions,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Transaction&gt;&amp;<sp/>transactions,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">Result&lt;TearSheetResult&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1aac57d5e791c078f956065e1a4d2cdc01" kindref="member">create_round_trip_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;Return&gt;&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/>positions,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Transaction&gt;&amp;<sp/>transactions,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">Result&lt;TearSheetResult&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1af2f92bc46ca295a03f224ee505ffb638" kindref="member">create_interesting_times_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TimeSeries&lt;Return&gt;&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;TimeSeries&lt;Return&gt;&gt;&amp;<sp/>benchmark_returns<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="d7/d68/namespacepyfolio_1_1reporting_1a706b60e14b4c380a2cf7293496dfd6e0" refkind="member"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a706b60e14b4c380a2cf7293496dfd6e0" kindref="member">create_capacity_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Transaction&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>MarketData&gt;&gt;&amp;<sp/>market_data,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="d7/d68/namespacepyfolio_1_1reporting_1a2ebf18aa53b9cbf8219fdbea7631cf2e" refkind="member"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a2ebf18aa53b9cbf8219fdbea7631cf2e" kindref="member">create_bayesian_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="d7/d68/namespacepyfolio_1_1reporting_1a3502ba757f9da7822b24bf4d869a84d2" refkind="member"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a3502ba757f9da7822b24bf4d869a84d2" kindref="member">create_risk_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Return&gt;&gt;&amp;<sp/>factor_returns,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="d7/d68/namespacepyfolio_1_1reporting_1a47a6aa53c9e563f086d729cfa6f0ad37" refkind="member"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a47a6aa53c9e563f086d729cfa6f0ad37" kindref="member">create_perf_attrib_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Return&gt;&gt;&amp;<sp/>factor_returns,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>double&gt;&gt;&gt;&amp;<sp/>factor_loadings<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="d7/d68/namespacepyfolio_1_1reporting_1a12e6df2bc3f6fcf3c5b5026bd178df1b" refkind="member"><highlight class="normal"><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;std::string&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a12e6df2bc3f6fcf3c5b5026bd178df1b" kindref="member">generate_html_report</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;TearSheetResult&gt;&amp;<sp/>results,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>output_path,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>title<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Portfolio<sp/>Analysis<sp/>Report&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">std::vector&lt;Result&lt;TearSheetResult&gt;&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a16455bc47e91fc0ce588687e7bc83cd2" kindref="member">create_all_tear_sheets</ref>(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;Transaction&gt;&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Return&gt;&gt;&gt;&amp;<sp/>factor_returns<sp/><sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>MarketData&gt;&gt;&gt;&amp;<sp/>market_data<sp/>=<sp/>std::nullopt,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>{});</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INLINE<sp/>IMPLEMENTATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>stub<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult" kindref="compound">TearSheetResult</ref><sp/>result;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>basic<sp/>performance<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1a7401475da2acefda00385214b27e7c59" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1a2f9ab3f412568628188acf5bd5a430c4" kindref="member">Result&lt;TearSheetResult&gt;::error</ref>(<ref refid="d7/df8/namespacepyfolio_1a10901a85b628face8a96ad7e052555f9ad8f78ca9a692a9411afbc7584b69d043" kindref="member">ErrorCode::InvalidInput</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Returns<sp/>time<sp/>series<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic<sp/>performance<sp/>calculations<sp/>(simplified)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>returns_vector<sp/>=<sp/>returns.<ref refid="d7/ddc/classpyfolio_1_1TimeSeries_1ab0b20c4945cdde977885888f384256c3" kindref="member">values</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_return<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>:<sp/>returns_vector)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_return<sp/>*=<sp/>(1.0<sp/>+<sp/>r);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>total_return<sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ab4b618173c3cfa6a39578cdd3720b5f0" kindref="member">total_return</ref><sp/><sp/>=<sp/>total_return;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a2eec1ff15d47cfb19cf02e60e8bc6e21" kindref="member">annual_return</ref><sp/>=<sp/>total_return<sp/>*<sp/>(252.0<sp/>/<sp/>returns_vector.size());</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>volatility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mean_return<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>:<sp/>returns_vector)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_return<sp/>+=<sp/>r;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_return<sp/>/=<sp/>returns_vector.size();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>variance<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>:<sp/>returns_vector)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variance<sp/>+=<sp/>(r<sp/>-<sp/>mean_return)<sp/>*<sp/>(r<sp/>-<sp/>mean_return);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>variance<sp/>/=<sp/>(returns_vector.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6c5d0224bd93f03335ad6e6665a761b4" kindref="member">annual_volatility</ref><sp/>=<sp/>std::sqrt(variance<sp/>*<sp/>252.0);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>Sharpe<sp/>ratio<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1afd208ddaf20d66eb8e573aba03c1bd0d" kindref="member">sharpe_ratio</ref><sp/>=</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a2eec1ff15d47cfb19cf02e60e8bc6e21" kindref="member">annual_return</ref><sp/>-<sp/>config.<ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig_1abcf428add5d7da5ea05bcbf6e61333b2" kindref="member">risk_free_rate</ref>)<sp/>/<sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6c5d0224bd93f03335ad6e6665a761b4" kindref="member">annual_volatility</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stub<sp/>values<sp/>for<sp/>other<sp/>metrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a54f925bf1a9afcf4db0db2fa962ad872" kindref="member">sortino_ratio</ref><sp/>=<sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1afd208ddaf20d66eb8e573aba03c1bd0d" kindref="member">sharpe_ratio</ref><sp/>*<sp/>1.2;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa93b7cc6b807d1d02970b7560669055e" kindref="member">max_drawdown</ref><sp/><sp/>=<sp/>-0.05;<sp/><sp/></highlight><highlight class="comment">//<sp/>Stub<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa8f6e8acc5031b9fd80af74fbad37be0" kindref="member">calmar_ratio</ref><sp/><sp/>=<sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a2eec1ff15d47cfb19cf02e60e8bc6e21" kindref="member">annual_return</ref><sp/>/<sp/>std::abs(result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1aa93b7cc6b807d1d02970b7560669055e" kindref="member">max_drawdown</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a8e12aad10f555158dadea14e5f4b5b8a" kindref="member">omega_ratio</ref><sp/><sp/><sp/>=<sp/>1.1;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ae61b4834953dbb1a4c7e11a523279e7a" kindref="member">skewness</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1ac8122816c643d8cfbde848c1c04d0574" kindref="member">kurtosis</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a0479796f98b7be4cd19e0517251c240b" kindref="member">tail_ratio</ref><sp/><sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a12860d372ce266b2bb06ea53c0efd631" kindref="member">value_at_risk</ref><sp/>=<sp/>-0.02;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1a7149cba74ada5bf3464dac01df44de0a" kindref="member">performance</ref>.<ref refid="d5/d01/structpyfolio_1_1reporting_1_1TearSheetResult_1_1PerformanceSummary_1a6cb8533f9f82ec86b68d282323d211fc" kindref="member">conditional_value_at_risk</ref><sp/>=<sp/>-0.03;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="db/db8/structpyfolio_1_1reporting_1_1TearSheetResult_1abb40d595e5a0b5f5642be16690015c1c" kindref="member">generation_time_seconds</ref><sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TearSheetResult&gt;::success</ref>(std::move(result));</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424" refid="d7/d68/namespacepyfolio_1_1reporting_1aac9c6c66a273fe37313f67bd6bd67903" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1aac9c6c66a273fe37313f67bd6bd67903" kindref="member">create_full_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;Transaction&gt;&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>simple<sp/>tear<sp/>sheet<sp/>as<sp/>base<sp/>and<sp/>add<sp/>more<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>simple_result<sp/>=<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>benchmark_returns,<sp/>config);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!simple_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>simple_result;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>simple_result.value();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>result.warnings.push_back(</highlight><highlight class="stringliteral">&quot;Full<sp/>tear<sp/>sheet<sp/>implementation<sp/>is<sp/>simplified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TearSheetResult&gt;::success</ref>(std::move(result));</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="d7/d68/namespacepyfolio_1_1reporting_1a14f0f60fc91109a6adab9785c92632eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a14f0f60fc91109a6adab9785c92632eb" kindref="member">create_returns_tear_sheet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>benchmark_returns,<sp/>config);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="d7/d68/namespacepyfolio_1_1reporting_1a31cb157f7b3fd4e572b2f62db5308edd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a31cb157f7b3fd4e572b2f62db5308edd" kindref="member">create_position_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>simple_result<sp/>=<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>std::nullopt,<sp/>config);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!simple_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>simple_result;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>simple_result.value();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>result.warnings.push_back(</highlight><highlight class="stringliteral">&quot;Position<sp/>analysis<sp/>implementation<sp/>is<sp/>simplified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TearSheetResult&gt;::success</ref>(std::move(result));</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="d7/d68/namespacepyfolio_1_1reporting_1a8ccd9b1e38e0190c91d5d06595b486fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a8ccd9b1e38e0190c91d5d06595b486fa" kindref="member">create_txn_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Transaction&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>simple_result<sp/>=<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>std::nullopt,<sp/>config);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!simple_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>simple_result;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>simple_result.value();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>result.warnings.push_back(</highlight><highlight class="stringliteral">&quot;Transaction<sp/>analysis<sp/>implementation<sp/>is<sp/>simplified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TearSheetResult&gt;::success</ref>(std::move(result));</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="d7/d68/namespacepyfolio_1_1reporting_1aac57d5e791c078f956065e1a4d2cdc01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1aac57d5e791c078f956065e1a4d2cdc01" kindref="member">create_round_trip_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Transaction&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>simple_result<sp/>=<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>std::nullopt,<sp/>config);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!simple_result.is_ok())<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>simple_result;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>simple_result.value();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>result.warnings.push_back(</highlight><highlight class="stringliteral">&quot;Round<sp/>trip<sp/>analysis<sp/>implementation<sp/>is<sp/>simplified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result_1aff326d3892070879bd3d5cd55c186677" kindref="member">Result&lt;TearSheetResult&gt;::success</ref>(std::move(result));</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="d7/d68/namespacepyfolio_1_1reporting_1af2f92bc46ca295a03f224ee505ffb638" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="de/dfa/classpyfolio_1_1Result" kindref="compound">Result&lt;TearSheetResult&gt;</ref><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1af2f92bc46ca295a03f224ee505ffb638" kindref="member">create_interesting_times_tear_sheet</ref>(</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>benchmark_returns,<sp/>config);</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495" refid="d7/d68/namespacepyfolio_1_1reporting_1a16455bc47e91fc0ce588687e7bc83cd2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;Result&lt;TearSheetResult&gt;&gt;<sp/><ref refid="d7/d68/namespacepyfolio_1_1reporting_1a16455bc47e91fc0ce588687e7bc83cd2" kindref="member">create_all_tear_sheets</ref>(</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&amp;<sp/>returns,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Position&gt;&gt;&gt;&amp;<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;std::vector&lt;Transaction&gt;&gt;&amp;<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries&lt;Return&gt;</ref>&gt;&amp;<sp/>benchmark_returns,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>Return&gt;&gt;&gt;&amp;<sp/>factor_returns,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::optional&lt;<ref refid="d7/ddc/classpyfolio_1_1TimeSeries" kindref="compound">TimeSeries</ref>&lt;std::unordered_map&lt;std::string,<sp/>MarketData&gt;&gt;&gt;&amp;<sp/>market_data,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d7e/structpyfolio_1_1reporting_1_1TearSheetConfig" kindref="compound">TearSheetConfig</ref>&amp;<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Result&lt;TearSheetResult&gt;&gt;<sp/>results;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>simple<sp/>tear<sp/>sheet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>results.push_back(<ref refid="d7/d68/namespacepyfolio_1_1reporting_1a958bce537a9c62b948257a4c6953425f" kindref="member">create_simple_tear_sheet</ref>(returns,<sp/>benchmark_returns,<sp/>config));</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>full<sp/>tear<sp/>sheet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>results.push_back(<ref refid="d7/d68/namespacepyfolio_1_1reporting_1aac9c6c66a273fe37313f67bd6bd67903" kindref="member">create_full_tear_sheet</ref>(returns,<sp/><ref refid="df/d8b/namespacepyfolio_1_1positions" kindref="compound">positions</ref>,<sp/><ref refid="dc/d4e/namespacepyfolio_1_1transactions" kindref="compound">transactions</ref>,<sp/>benchmark_returns,<sp/>config));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>pyfolio</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/reporting/tears.h"/>
  </compounddef>
</doxygen>
