/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h:174:5: warning: Member variable 'Position::shares' is not initialized in the constructor. [uninitMemberVar]
    Position() = default;
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h:174:5: warning: Member variable 'Position::price' is not initialized in the constructor. [uninitMemberVar]
    Position() = default;
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/types.h:174:5: warning: Member variable 'Position::weight' is not initialized in the constructor. [uninitMemberVar]
    Position() = default;
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:307:13: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
            consistent_count++;
            ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:343:16: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
        sq_sum += (pos - mean) * (pos - mean);
               ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:356:20: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
        normalized.push_back((pos - mean) / std_dev);
                   ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:374:17: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
        aad_sum += std::abs(value - mean);
                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:49:5: style: Struct 'Error' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Error(const std::string& msg, std::source_location loc = std::source_location::current())
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:173:5: style: Class 'Result < void >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : error_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:174:5: style: Class 'Result < void >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : error_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:60:5: style: Class 'PortfolioHoldings' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    PortfolioHoldings(const DateTime& timestamp, double cash_balance = 0.0)
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h:312:5: style: Class 'LiveDashboard' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    LiveDashboard(const std::string& endpoint, int interval_ms = 1000)
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < DateTime >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < DateTime >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < DateTime >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < DateTime >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < TimeSeries < double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < TimeSeries < double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < TimeSeries < double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < TimeSeries < double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < ReturnSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < ReturnSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < ReturnSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < ReturnSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < double >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < double >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < double >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < double >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < DrawdownInfo >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < DrawdownInfo >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < DrawdownInfo >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < DrawdownInfo >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: vector < DrawdownInfo > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: vector < DrawdownInfo > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: vector < DrawdownInfo > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: vector < DrawdownInfo > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < PerformanceMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < PerformanceMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < PerformanceMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < PerformanceMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < TimeSeries < PerformanceMetrics > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < TimeSeries < PerformanceMetrics > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < TimeSeries < PerformanceMetrics > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < TimeSeries < PerformanceMetrics > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < AttributionResult >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < AttributionResult >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < AttributionResult >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < AttributionResult >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < DataFrame >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < DataFrame >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < DataFrame >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < DataFrame >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: map < DateTime , DataFrame > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: map < DateTime , DataFrame > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: map < DateTime , DataFrame > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: map < DateTime , DataFrame > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < TransactionRecord >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < TransactionRecord >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < TransactionRecord >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < TransactionRecord >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: vector < Transaction > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: vector < Transaction > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: vector < Transaction > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: vector < Transaction > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: map < DateTime , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: map < DateTime , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: map < DateTime , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: map < DateTime , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: map < std :: string , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: map < std :: string , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: map < std :: string , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: map < std :: string , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: map < Symbol , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: map < Symbol , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: map < Symbol , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: map < Symbol , std :: vector < TransactionRecord > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: map < std :: string , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: map < std :: string , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: map < std :: string , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: map < std :: string , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: map < Symbol , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: map < Symbol , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: map < Symbol , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: map < Symbol , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < TransactionStatistics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < TransactionStatistics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < TransactionStatistics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < TransactionStatistics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < Holding >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < Holding >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < Holding >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < Holding >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < PortfolioHoldings >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < PortfolioHoldings >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < PortfolioHoldings >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < PortfolioHoldings >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < HoldingsSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < HoldingsSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < HoldingsSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < HoldingsSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < ExposureSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < ExposureSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < ExposureSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < ExposureSeries >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: vector < SectorAllocation > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: vector < SectorAllocation > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: vector < SectorAllocation > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: vector < SectorAllocation > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < ConcentrationMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < ConcentrationMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < ConcentrationMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < ConcentrationMetrics >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: vector < AllocationDrift > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: vector < AllocationDrift > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: vector < AllocationDrift > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: vector < AllocationDrift > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: pair < double , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: pair < double , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: pair < double , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: pair < double , double > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: vector < std :: pair < std :: string , Position > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: vector < std :: pair < std :: string , Position > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: vector < std :: pair < std :: string , Position > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: vector < std :: pair < std :: string , Position > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < TimeSeries < std :: pair < double , double > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < TimeSeries < std :: pair < double , double > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < TimeSeries < std :: pair < double , double > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < TimeSeries < std :: pair < double , double > > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < TimeSeries < int > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < TimeSeries < int > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < TimeSeries < int > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < TimeSeries < int > >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:68:5: style: Class 'Result < std :: string >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const T& value) : data_(value) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:69:5: style: Class 'Result < std :: string >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(T&& value) : data_(std::move(value)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:70:5: style: Class 'Result < std :: string >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(const Error& error) : data_(error) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:71:5: style: Class 'Result < std :: string >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Result(Error&& error) : data_(std::move(error)) {}
    ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:544:15: style: The scope of the variable 'r' can be reduced. [variableScope]
    double x, r;
              ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/rolling_metrics.h:360:20: style: The scope of the variable 'excess_return' can be reduced. [variableScope]
            double excess_return = mean_return - period_risk_free;
                   ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/ratios.h:138:12: style: Local variable 'max_drawdown' shadows outer function [shadowFunction]
    double max_drawdown = 0.0;
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:66:23: note: Shadowed declaration
inline Result<double> max_drawdown(const ReturnSeries& returns) {
                      ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/ratios.h:138:12: note: Shadow variable
    double max_drawdown = 0.0;
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:397:34: style: Local variable 'net_shares' shadows outer function [shadowFunction]
        std::map<Symbol, double> net_shares;
                                 ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:262:12: note: Shadowed declaration
    Shares net_shares(const Symbol& symbol) const {
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:397:34: note: Shadow variable
        std::map<Symbol, double> net_shares;
                                 ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:92:24: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
        excess_returns.push_back(ret - period_risk_free);
                       ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:157:24: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            cumulative *= (1.0 + ret);
                       ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:184:24: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            cumulative *= (1.0 + ret);
                       ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:241:33: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
        annualized_volatilities.push_back(vol * std::sqrt(periods_per_year));
                                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:266:15: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
        total *= (1.0 + ret);
              ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:306:27: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
        converted_returns.push_back(ret * multiplier);
                          ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:302:31: style: Consider using std::copy_if algorithm instead of a raw loop. [useStlAlgorithm]
            non_zero_drawdowns.push_back(dd);
                              ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:540:17: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            sum += val;
                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:582:17: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            sum += val;
                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:224:39: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                        selected_data.push_back(column_data[idx]);
                                      ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:278:30: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                sorted_index.push_back(index_[idx]);
                             ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:291:41: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                            sorted_data.push_back(column_data[idx]);
                                        ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:324:29: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                group_index.push_back(index_[idx]);
                            ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:337:40: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                            group_data.push_back(column_data[idx]);
                                       ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:358:25: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
            stats_index.push_back(DateTime::parse(name, "%s").value_or(DateTime::now()));
                        ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:382:19: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            total += std::abs(txn.notional_value());
                  ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:257:24: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            annual_ret *= (1.0 + ret);
                       ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:633:27: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            annual_return *= (1.0 + ret);
                          ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:823:22: style: Consider using std::copy algorithm instead of a raw loop. [useStlAlgorithm]
                data.push_back(trace);
                     ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:168:12: error: Uninitialized variables: analysis.anderson_darling_statistic, analysis.kolmogorov_smirnov_statistic [uninitvar]
    return analysis;
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:160:30: note: Assuming container is not empty
    for (const auto& value : values) {
                             ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:168:12: note: Uninitialized variables: analysis.anderson_darling_statistic, analysis.kolmogorov_smirnov_statistic
    return analysis;
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:168:12: error: Uninitialized struct member: analysis.anderson_darling_statistic [uninitStructMember]
    return analysis;
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:168:12: error: Uninitialized struct member: analysis.kolmogorov_smirnov_statistic [uninitStructMember]
    return analysis;
           ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:24:33: style: Variable 'config.theme' is assigned a value that is never used. [unreadVariable]
    config.theme                = "plotly_white";
                                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:25:33: style: Variable 'config.enable_rangeslider' is assigned a value that is never used. [unreadVariable]
    config.enable_rangeslider   = true;
                                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:26:33: style: Variable 'config.enable_rangeselector' is assigned a value that is never used. [unreadVariable]
    config.enable_rangeselector = true;
                                ^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:94:0: style: The function 'annual_return' is never used. [unusedFunction]
    static Result<double> annual_return(const TimeSeries<T>& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:105:0: style: The function 'annual_volatility' is never used. [unusedFunction]
    static Result<double> annual_volatility(const TimeSeries<T>& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:160:0: style: The function 'up_down_capture_ratio' is never used. [unusedFunction]
    static Result<CaptureRatioResult> up_down_capture_ratio(const TimeSeries<T>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:170:0: style: The function 'tail_ratio' is never used. [unusedFunction]
    static Result<double> tail_ratio(const TimeSeries<T>& returns, double confidence_level = 0.05) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:176:0: style: The function 'common_sense_ratio' is never used. [unusedFunction]
    static Result<double> common_sense_ratio(const TimeSeries<T>& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:182:0: style: The function 'stability_of_timeseries' is never used. [unusedFunction]
    static Result<double> stability_of_timeseries(const TimeSeries<T>& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:188:0: style: The function 'calculate_comprehensive_metrics' is never used. [unusedFunction]
    static Result<pyfolio::analytics::PerformanceMetrics> calculate_comprehensive_metrics(
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:205:0: style: The function 'drawdown_series' is never used. [unusedFunction]
    static Result<TimeSeries<T>> drawdown_series(const TimeSeries<T>& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/performance_metrics.h:213:0: style: The function 'rolling_sharpe' is never used. [unusedFunction]
    static Result<TimeSeries<T>> rolling_sharpe(const TimeSeries<T>& returns, int window, double risk_free_rate = 0.0) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:123:0: style: The function 'analyze_distribution' is never used. [unusedFunction]
Result<DistributionAnalysis> analyze_distribution(const TimeSeries<T>& series) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:187:0: style: The function 'analyze_correlation' is never used. [unusedFunction]
Result<CorrelationAnalysis> analyze_correlation(const TimeSeries<T1>& series1, const TimeSeries<T2>& series2,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:277:0: style: The function 'calculate_basic_stats' is never used. [unusedFunction]
    static Result<analytics::statistics::StatisticalSummary> calculate_basic_stats(const TimeSeries<T>& series) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:449:0: style: The function 'volatility' is never used. [unusedFunction]
    static Result<double> volatility(const TimeSeries<T>& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:455:0: style: The function 'downside_deviation' is never used. [unusedFunction]
    static Result<double> downside_deviation(const TimeSeries<T>& returns, double threshold = 0.0) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/analytics/statistics.h:613:0: style: The function 'value_at_risk_historical' is never used. [unusedFunction]
    static Result<double> value_at_risk_historical(const TimeSeries<T>& returns, double confidence_level = 0.05) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:76:0: style: The function 'rows' is never used. [unusedFunction]
    size_type rows() const noexcept { return index_.size(); }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:77:0: style: The function 'cols' is never used. [unusedFunction]
    size_type cols() const noexcept { return column_names_.size(); }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:81:0: style: The function 'index' is never used. [unusedFunction]
    const std::vector<DateTime>& index() const { return index_; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:82:0: style: The function 'columns' is never used. [unusedFunction]
    const std::vector<std::string>& columns() const { return column_names_; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:106:0: style: The function 'remove_column' is never used. [unusedFunction]
    Result<void> remove_column(const std::string& name) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:122:0: style: The function 'get_column' is never used. [unusedFunction]
    Result<TimeSeries<T>> get_column(const std::string& name) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:135:0: style: The function 'set_column' is never used. [unusedFunction]
    Result<void> set_column(const std::string& name, const std::vector<T>& data) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:154:0: style: The function 'has_column' is never used. [unusedFunction]
    bool has_column(const std::string& name) const { return columns_.find(name) != columns_.end(); }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:177:0: style: The function 'set_at' is never used. [unusedFunction]
    Result<void> set_at(size_type row, const std::string& column, const T& value) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:194:0: style: The function 'loc' is never used. [unusedFunction]
    Result<DataFrame> loc(const DateTime& start, const DateTime& end) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:238:0: style: The function 'select' is never used. [unusedFunction]
    Result<DataFrame> select(const std::vector<std::string>& column_names) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:258:0: style: The function 'sort_by' is never used. [unusedFunction]
    Result<DataFrame> sort_by(const std::string& column_name, bool ascending = true) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:309:0: style: The function 'groupby_period' is never used. [unusedFunction]
    Result<std::map<DateTime, DataFrame>> groupby_period(Frequency freq) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:354:0: style: The function 'describe' is never used. [unusedFunction]
    Result<DataFrame> describe() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/dataframe.h:403:0: style: The function 'corr' is never used. [unusedFunction]
    Result<DataFrame> corr() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:95:0: style: The function 'remove_holiday' is never used. [unusedFunction]
    void remove_holiday(const std::chrono::year_month_day& date) { holidays_.erase(date); }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:183:0: style: The function 'from_time_point' is never used. [unusedFunction]
    static DateTime from_time_point(const TimePoint& tp) { return DateTime{tp}; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:244:0: style: The function 'add_days' is never used. [unusedFunction]
    DateTime add_days(int days) const { return DateTime{time_point_ + std::chrono::days{days}}; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:249:0: style: The function 'add_months' is never used. [unusedFunction]
    DateTime add_months(int months) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:278:0: style: The function 'add_years' is never used. [unusedFunction]
    DateTime add_years(int years) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:304:0: style: The function 'day_of_week' is never used. [unusedFunction]
    int day_of_week() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:314:0: style: The function 'days_since' is never used. [unusedFunction]
    int days_since(const DateTime& other) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:323:0: style: The function 'add_business_days' is never used. [unusedFunction]
    DateTime add_business_days(int days, const BusinessCalendar& calendar = default_calendar_) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/datetime.h:424:0: style: The function 'to_days' is never used. [unusedFunction]
constexpr int to_days(Frequency freq) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:205:0: style: The function 'and_then' is never used. [unusedFunction]
    auto and_then(F&& func) const -> decltype(func()) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:220:0: style: The function 'or_else' is never used. [unusedFunction]
    Result or_else(F&& func) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/error_handling.h:248:0: style: The function 'error_code_to_string' is never used. [unusedFunction]
inline std::string error_code_to_string(ErrorCode code) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:156:0: style: The function 'try_push_back' is never used. [unusedFunction]
    [[nodiscard]] Result<void> try_push_back(const DateTime& timestamp, const T& value) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:176:0: style: The function 'bulk_insert' is never used. [unusedFunction]
    [[nodiscard]] Result<void> bulk_insert(TimestampIter timestamps_begin, TimestampIter timestamps_end,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:324:0: style: The function 'slice' is never used. [unusedFunction]
    [[nodiscard]] Result<TimeSeries<T>> slice(const DateTime& start, const DateTime& end) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:499:0: style: The function 'cumsum' is never used. [unusedFunction]
    [[nodiscard]] Result<TimeSeries<T>> cumsum() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:515:0: style: The function 'cumprod' is never used. [unusedFunction]
    [[nodiscard]] Result<TimeSeries<T>> cumprod() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:678:0: style: The function 'rolling_min' is never used. [unusedFunction]
    [[nodiscard]] Result<TimeSeries<T>> rolling_min(size_type window) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:728:0: style: The function 'rolling_max' is never used. [unusedFunction]
    [[nodiscard]] Result<TimeSeries<T>> rolling_max(size_type window) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:892:0: style: The function 'align' is never used. [unusedFunction]
    [[nodiscard]] Result<std::pair<TimeSeries<T>, TimeSeries<T>>> align(const TimeSeries<T>& other) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/core/time_series.h:927:0: style: The function 'fill_missing' is never used. [unusedFunction]
    [[nodiscard]] Result<TimeSeries<T>> fill_missing(const std::vector<DateTime>& target_dates,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h:38:0: style: The function 'is_aligned' is never used. [unusedFunction]
inline bool is_aligned(const void* ptr, size_t alignment = SIMD_ALIGNMENT) noexcept {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h:200:0: style: The function 'add_series' is never used. [unusedFunction]
void add_series(const std::vector<T>& a, const std::vector<T>& b, std::vector<T>& result)
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h:217:0: style: The function 'rolling_mean_simd' is never used. [unusedFunction]
void rolling_mean_simd(const std::vector<T>& data, size_t window, std::vector<T>& result)
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/simd_math.h:238:0: style: The function 'correlation_fast' is never used. [unusedFunction]
double correlation_fast(const std::vector<T>& x, const std::vector<T>& y)
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:47:0: style: The function 'power' is never used. [unusedFunction]
constexpr double power(double base, int exp) noexcept {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:90:0: style: The function 'annualization_factor' is never used. [unusedFunction]
constexpr double annualization_factor(Frequency freq) noexcept {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:356:0: style: The function 'median' is never used. [unusedFunction]
Result<double> median(std::span<const T> data) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:364:0: style: The function 'quantile' is never used. [unusedFunction]
Result<double> quantile(std::span<const T> data, double q) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:474:0: style: The function 'rolling_correlation' is never used. [unusedFunction]
Result<std::vector<double>> rolling_correlation(std::span<const T1> x, std::span<const T2> y, size_t window_size) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:506:0: style: The function 'normal_cdf' is never used. [unusedFunction]
inline double normal_cdf(double x) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:513:0: style: The function 'normal_pdf' is never used. [unusedFunction]
inline double normal_pdf(double x) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/math/statistics.h:522:0: style: The function 'normal_ppf' is never used. [unusedFunction]
inline double normal_ppf(double p) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:86:0: style: The function 'max_drawdown_info' is never used. [unusedFunction]
inline Result<DrawdownInfo> max_drawdown_info(const ReturnSeries& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:166:0: style: The function 'drawdown_duration' is never used. [unusedFunction]
inline Result<ReturnSeries> drawdown_duration(const ReturnSeries& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:286:0: style: The function 'average_drawdown' is never used. [unusedFunction]
inline Result<double> average_drawdown(const ReturnSeries& returns) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:319:0: style: The function 'rolling_max_drawdown' is never used. [unusedFunction]
inline Result<ReturnSeries> rolling_max_drawdown(const ReturnSeries& returns, size_t window_size) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/drawdown.h:359:0: style: The function 'average_recovery_time' is never used. [unusedFunction]
inline Result<double> average_recovery_time(const ReturnSeries& returns, double min_drawdown = 0.01) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/ratios.h:217:0: style: The function 'omega_ratio' is never used. [unusedFunction]
inline Result<double> omega_ratio(const ReturnSeries& returns, double threshold = 0.0,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/ratios.h:256:0: style: The function 'treynor_ratio' is never used. [unusedFunction]
inline Result<double> treynor_ratio(const ReturnSeries& portfolio_returns, const ReturnSeries& benchmark_returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/ratios.h:330:0: style: The function 'rolling_sharpe_ratio' is never used. [unusedFunction]
inline Result<ReturnSeries> rolling_sharpe_ratio(const ReturnSeries& returns, size_t window_size,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:15:0: style: The function 'calculate_returns' is never used. [unusedFunction]
inline Result<ReturnSeries> calculate_returns(const PriceSeries& prices) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:49:0: style: The function 'calculate_log_returns' is never used. [unusedFunction]
inline Result<ReturnSeries> calculate_log_returns(const PriceSeries& prices) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:147:0: style: The function 'aggregate_returns' is never used. [unusedFunction]
inline Result<ReturnSeries> aggregate_returns(const ReturnSeries& returns, Frequency target_frequency) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:175:0: style: The function 'rolling_returns' is never used. [unusedFunction]
inline Result<ReturnSeries> rolling_returns(const ReturnSeries& returns, size_t window_size) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:225:0: style: The function 'rolling_volatility' is never used. [unusedFunction]
inline Result<ReturnSeries> rolling_volatility(const ReturnSeries& returns, size_t window_size,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:275:0: style: The function 'calculate_cagr' is never used. [unusedFunction]
inline Result<double> calculate_cagr(const ReturnSeries& returns, Frequency frequency = Frequency::Daily) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/returns.h:301:0: style: The function 'convert_returns' is never used. [unusedFunction]
inline Result<ReturnSeries> convert_returns(const ReturnSeries& returns, double multiplier = 100.0) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/rolling_metrics.h:140:0: style: The function 'calculate_rolling_beta' is never used. [unusedFunction]
inline TimeSeries<double> calculate_rolling_beta(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/rolling_metrics.h:207:0: style: The function 'calculate_rolling_correlation' is never used. [unusedFunction]
inline TimeSeries<double> calculate_rolling_correlation(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/rolling_metrics.h:265:0: style: The function 'calculate_rolling_max_drawdown' is never used. [unusedFunction]
inline TimeSeries<double> calculate_rolling_max_drawdown(const TimeSeries<Return>& returns, size_t window,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/rolling_metrics.h:322:0: style: The function 'calculate_rolling_sortino' is never used. [unusedFunction]
inline TimeSeries<double> calculate_rolling_sortino(const TimeSeries<Return>& returns, size_t window,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/performance/rolling_metrics.h:398:0: style: The function 'calculate_rolling_downside_deviation' is never used. [unusedFunction]
inline TimeSeries<double> calculate_rolling_downside_deviation(const TimeSeries<Return>& returns, size_t window,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:49:0: style: The function 'set_sector_mapping' is never used. [unusedFunction]
    void set_sector_mapping(const std::map<Symbol, std::string>& mapping) { symbol_to_sector_ = mapping; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:54:0: style: The function 'set_industry_mapping' is never used. [unusedFunction]
    void set_industry_mapping(const std::map<Symbol, std::string>& mapping) { symbol_to_industry_ = mapping; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:59:0: style: The function 'set_country_mapping' is never used. [unusedFunction]
    void set_country_mapping(const std::map<Symbol, std::string>& mapping) { symbol_to_country_ = mapping; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:64:0: style: The function 'calculate_sector_allocations' is never used. [unusedFunction]
    Result<std::vector<SectorAllocation>> calculate_sector_allocations(const PortfolioHoldings& holdings) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:104:0: style: The function 'calculate_concentration' is never used. [unusedFunction]
    Result<ConcentrationMetrics> calculate_concentration(const PortfolioHoldings& holdings) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:151:0: style: The function 'analyze_by_group' is never used. [unusedFunction]
    Result<DataFrame> analyze_by_group(const PortfolioHoldings& holdings, GroupFunc group_func,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:210:0: style: The function 'calculate_drift' is never used. [unusedFunction]
    Result<std::vector<AllocationDrift>> calculate_drift(const PortfolioHoldings& holdings,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:268:0: style: The function 'analyze_allocation_stability' is never used. [unusedFunction]
    Result<DataFrame> analyze_allocation_stability(const HoldingsSeries& holdings_series) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:383:0: style: The function 'classify_market_cap' is never used. [unusedFunction]
inline MarketCapBucket classify_market_cap(double market_cap_millions) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/allocation.h:400:0: style: The function 'market_cap_bucket_to_string' is never used. [unusedFunction]
inline std::string market_cap_bucket_to_string(MarketCapBucket bucket) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:39:0: style: The function 'return_pct' is never used. [unusedFunction]
    double return_pct() const { return cost_basis != 0 ? unrealized_pnl / std::abs(cost_basis) : 0.0; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:72:0: style: The function 'set_cash_balance' is never used. [unusedFunction]
    void set_cash_balance(double cash) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:167:0: style: The function 'top_holdings' is never used. [unusedFunction]
    std::vector<Holding> top_holdings(size_t n) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:288:0: style: The function 'build_from_transactions' is never used. [unusedFunction]
    static Result<HoldingsSeries> build_from_transactions(const transactions::TransactionSeries& txns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:373:0: style: The function 'portfolio_value_series' is never used. [unusedFunction]
    Result<TimeSeries<double>> portfolio_value_series() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/positions/holdings.h:400:0: style: The function 'exposure_series' is never used. [unusedFunction]
    Result<ExposureSeries> exposure_series() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:67:0: style: The function 'create' is never used. [unusedFunction]
    static Result<TransactionRecord> create(const Symbol& symbol, const DateTime& timestamp, Shares shares, Price price,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:483:0: style: The function 'to_dataframe' is never used. [unusedFunction]
    Result<DataFrame> to_dataframe() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:56:0: style: The function 'currency' is never used. [unusedFunction]
    const Currency& currency() const { return currency_; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:59:0: style: The function 'exchange' is never used. [unusedFunction]
    const std::string& exchange() const { return exchange_; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:60:0: style: The function 'order_id' is never used. [unusedFunction]
    const std::string& order_id() const { return order_id_; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:61:0: style: The function 'type' is never used. [unusedFunction]
    TransactionType type() const { return type_; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:82:0: style: The function 'set_exchange' is never used. [unusedFunction]
    void set_exchange(const std::string& exchange) { exchange_ = exchange; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:83:0: style: The function 'set_order_id' is never used. [unusedFunction]
    void set_order_id(const std::string& order_id) { order_id_ = order_id; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:106:0: style: The function 'is_buy' is never used. [unusedFunction]
    bool is_buy() const { return shares_ > 0; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:111:0: style: The function 'is_sell' is never used. [unusedFunction]
    bool is_sell() const { return shares_ < 0; }
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:184:0: style: The function 'add_transaction' is never used. [unusedFunction]
    Result<void> add_transaction(const TransactionRecord& transaction) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:245:0: style: The function 'total_commissions' is never used. [unusedFunction]
    double total_commissions() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:253:0: style: The function 'total_slippage' is never used. [unusedFunction]
    double total_slippage() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:262:0: style: The function 'net_shares' is never used. [unusedFunction]
    Shares net_shares(const Symbol& symbol) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:272:0: style: The function 'group_by_symbol' is never used. [unusedFunction]
    std::map<Symbol, TransactionSeries> group_by_symbol() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:288:0: style: The function 'daily_summary' is never used. [unusedFunction]
    Result<DataFrame> daily_summary() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:340:0: style: The function 'aggregate_daily' is never used. [unusedFunction]
    Result<std::map<DateTime, std::vector<TransactionRecord>>> aggregate_daily() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:358:0: style: The function 'aggregate_by_symbol' is never used. [unusedFunction]
    Result<std::map<Symbol, std::vector<TransactionRecord>>> aggregate_by_symbol() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:391:0: style: The function 'net_shares_by_symbol' is never used. [unusedFunction]
    Result<std::map<Symbol, double>> net_shares_by_symbol() const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:471:0: style: The function 'calculate_transaction_costs' is never used. [unusedFunction]
    Result<double> calculate_transaction_costs(double commission_per_trade) const {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:518:0: style: The function 'calculate_average_price' is never used. [unusedFunction]
inline Result<double> calculate_average_price(const TransactionSeries& transactions, const Symbol& symbol) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/transactions/transaction.h:548:0: style: The function 'calculate_turnover' is never used. [unusedFunction]
inline Result<double> calculate_turnover(const TransactionSeries& transactions, double portfolio_value,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h:464:0: style: The function 'create_time_series_chart' is never used. [unusedFunction]
inline Result<std::string> PlotlyEngine::create_time_series_chart(const std::vector<TimeSeries<double>>& series,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h:517:0: style: The function 'create_candlestick_chart' is never used. [unusedFunction]
inline Result<std::string> PlotlyEngine::create_candlestick_chart(const OHLCData& ohlc_data,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotly_enhanced.h:591:0: style: The function 'create_correlation_heatmap' is never used. [unusedFunction]
inline Result<std::string> PlotlyEngine::create_correlation_heatmap(
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:236:0: style: The function 'calculate_annual_returns' is never used. [unusedFunction]
inline std::pair<std::vector<std::string>, std::vector<double>> utils::calculate_annual_returns(
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:374:0: style: The function 'plot_cumulative_returns' is never used. [unusedFunction]
inline Result<std::string> plots::plot_cumulative_returns(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:406:0: style: The function 'plot_drawdown' is never used. [unusedFunction]
inline Result<std::string> plots::plot_drawdown(const TimeSeries<Return>& returns, const PlotConfig& config) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:443:0: style: The function 'create_performance_dashboard' is never used. [unusedFunction]
inline Result<std::string> plots::create_performance_dashboard(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:612:0: style: The function 'plot_annual_returns' is never used. [unusedFunction]
inline Result<std::string> plots::plot_annual_returns(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:647:0: style: The function 'plot_rolling_sharpe' is never used. [unusedFunction]
inline Result<std::string> plots::plot_rolling_sharpe(const TimeSeries<Return>& returns, size_t window,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:658:0: style: The function 'plot_rolling_volatility' is never used. [unusedFunction]
inline Result<std::string> plots::plot_rolling_volatility(const TimeSeries<Return>& returns, size_t window,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/include/pyfolio/visualization/plotting.h:669:0: style: The function 'plot_returns_distribution' is never used. [unusedFunction]
inline Result<std::string> plots::plot_returns_distribution(const TimeSeries<Return>& returns, int bins,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/math/simd_math.cpp:276:0: style: The function 'exponential_moving_average_simd' is never used. [unusedFunction]
void exponential_moving_average_simd(std::span<const double> data, double alpha, std::span<double> result) noexcept {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/math/simd_math.cpp:292:0: style: The function 'calculate_returns_simd' is never used. [unusedFunction]
void calculate_returns_simd(std::span<const double> prices, std::span<double> returns) noexcept {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/math/simd_math.cpp:308:0: style: The function 'cumulative_product_simd' is never used. [unusedFunction]
void cumulative_product_simd(std::span<const double> data, std::span<double> result) noexcept {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:323:0: style: The function 'is_trading_hours' is never used. [unusedFunction]
bool is_trading_hours(const DateTime& dt, int start_hour, int end_hour) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:332:0: style: The function 'normalize_positions' is never used. [unusedFunction]
std::vector<double> normalize_positions(const std::vector<double>& positions) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:362:0: style: The function 'calculate_average_absolute_deviation' is never used. [unusedFunction]
double calculate_average_absolute_deviation(const std::vector<double>& values) {
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/utils/intraday.cpp:380:0: style: The function 'interpolate_missing_positions' is never used. [unusedFunction]
Result<std::vector<double>> interpolate_missing_positions(const std::vector<DateTime>& dates,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:18:0: style: The function 'create_portfolio_dashboard' is never used. [unusedFunction]
Result<std::string> create_portfolio_dashboard(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:318:0: style: The function 'create_risk_dashboard' is never used. [unusedFunction]
Result<std::string> create_risk_dashboard(const TimeSeries<Return>& returns,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:566:0: style: The function 'create_attribution_waterfall' is never used. [unusedFunction]
Result<std::string> create_attribution_waterfall(const std::map<std::string, double>& attribution_factors,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:719:0: style: The function 'create_treemap' is never used. [unusedFunction]
Result<std::string> PlotlyEngine::create_treemap(const std::vector<std::string>& labels,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:747:0: style: The function 'create_waterfall_chart' is never used. [unusedFunction]
Result<std::string> PlotlyEngine::create_waterfall_chart(const std::vector<std::string>& labels,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:778:0: style: The function 'create_3d_surface' is never used. [unusedFunction]
Result<std::string> PlotlyEngine::create_3d_surface(const std::vector<std::vector<double>>& z_data,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:811:0: style: The function 'create_subplots_dashboard' is never used. [unusedFunction]
Result<std::string> PlotlyEngine::create_subplots_dashboard(const std::vector<json>& subplot_configs, int rows,
^
/Users/yunjinqi/Documents/source_code/pyfolio_cpp/src/visualization/plotly_enhanced.cpp:623:0: style: The function 'initialize' is never used. [unusedFunction]
Result<std::string> RealTimeChart::initialize(const TimeSeries<double>& initial_data,
^
nofile:0:0: information: Active checkers: 167/856 (use --checkers-report=<filename> to see details) [checkersReport]

